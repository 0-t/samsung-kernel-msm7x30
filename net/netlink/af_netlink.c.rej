--- net/netlink/af_netlink.c
+++ net/netlink/af_netlink.c
@@ -156,8 +154,6 @@
 	if (nlk->cb) {
 		if (nlk->cb->done)
 			nlk->cb->done(nlk->cb);
-
-		module_put(nlk->cb->module);
 		netlink_destroy_callback(nlk->cb);
 	}
 
@@ -1331,7 +1318,7 @@
 	if (NULL == siocb->scm)
 		siocb->scm = &scm;
 
-	err = scm_send(sock, msg, siocb->scm, true);
+	err = scm_send(sock, msg, siocb->scm);
 	if (err < 0)
 		return err;
 
@@ -1729,7 +1715,6 @@
 	nlk->cb = NULL;
 	mutex_unlock(nlk->cb_mutex);
 
-	module_put(cb->module);
 	netlink_destroy_callback(cb);
 	return 0;
 
@@ -1739,9 +1724,9 @@
 	return err;
 }
 
-int __netlink_dump_start(struct sock *ssk, struct sk_buff *skb,
-			 const struct nlmsghdr *nlh,
-			 struct netlink_dump_control *control)
+int netlink_dump_start(struct sock *ssk, struct sk_buff *skb,
+		       const struct nlmsghdr *nlh,
+		       struct netlink_dump_control *control)
 {
 	struct netlink_callback *cb;
 	struct sock *sk;
@@ -1756,7 +1741,6 @@
 	cb->done = control->done;
 	cb->nlh = nlh;
 	cb->data = control->data;
-	cb->module = control->module;
 	cb->min_dump_alloc = control->min_dump_alloc;
 	atomic_inc(&skb->users);
 	cb->skb = skb;
@@ -1767,28 +1751,19 @@
 		return -ECONNREFUSED;
 	}
 	nlk = nlk_sk(sk);
-
+	/* A dump is in progress... */
 	mutex_lock(nlk->cb_mutex);
-	/* A dump is in progress... */
 	if (nlk->cb) {
 		mutex_unlock(nlk->cb_mutex);
 		netlink_destroy_callback(cb);
-		ret = -EBUSY;
-		goto out;
+		sock_put(sk);
+		return -EBUSY;
 	}
-	/* add reference of module which cb->dump belongs to */
-	if (!try_module_get(cb->module)) {
-		mutex_unlock(nlk->cb_mutex);
-		netlink_destroy_callback(cb);
-		ret = -EPROTONOSUPPORT;
-		goto out;
-	}
-
 	nlk->cb = cb;
 	mutex_unlock(nlk->cb_mutex);
 
 	ret = netlink_dump(sk);
-out:
+
 	sock_put(sk);
 
 	if (ret)
@@ -1799,7 +1774,7 @@
 	 */
 	return -EINTR;
 }
-EXPORT_SYMBOL(__netlink_dump_start);
+EXPORT_SYMBOL(netlink_dump_start);
 
 void netlink_ack(struct sk_buff *in_skb, struct nlmsghdr *nlh, int err)
 {
