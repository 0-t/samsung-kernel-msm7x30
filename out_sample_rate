arch/arm/mach-msm/lge/mako/board-mako-gpiomux.c:	pr_debug("%s(): audio-auxpcm: Include GPIO configs"
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:/* must be called with audio->lock held */
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	if (audio->enabled)
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	audio->dec_state = MSM_AUD_DECODER_STATE_NONE;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	audio->out_tail = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	if (msm_adsp_enable(audio->audplay)) {
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	if (audpp_enable(audio->dec_id, audevrc_dsp_event, audio)) {
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		msm_adsp_disable(audio->audplay);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	audio->enabled = 1;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		audio->source |= (0x1 << evt_payload->routing_id);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		if (audio->running == 1 && audio->enabled == 1)
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			audpp_route_stream(audio->dec_id, audio->source);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		audio->source &= ~(0x1 << evt_payload->routing_id);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		if (audio->running == 1 && audio->enabled == 1)
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			audpp_route_stream(audio->dec_id, audio->source);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		audio->vol_pan.volume = evt_payload->session_vol;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:				audio->vol_pan.volume);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		if (audio->running)
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			audpp_dsp_set_vol_pan(audio->dec_id, &audio->vol_pan,
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:/* must be called with audio->lock held */
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	if (audio->enabled) {
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		audio->enabled = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		audio->dec_state = MSM_AUD_DECODER_STATE_NONE;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		rc = wait_event_interruptible_timeout(audio->wait,
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:				audio->dec_state != MSM_AUD_DECODER_STATE_NONE,
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		else if (audio->dec_state != MSM_AUD_DECODER_STATE_CLOSE)
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		wake_up(&audio->read_wait);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		msm_adsp_disable(audio->audplay);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		audpp_disable(audio->dec_id, audio);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	if (audio->rflush)
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		if (audio->in[audio->fill_next].addr
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			MM_DBG("in[%d] ready\n", audio->fill_next);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			audio->in[audio->fill_next].used =
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			if ((++audio->fill_next) == audio->pcm_buf_count)
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:				audio->fill_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:				audio->in[audio->fill_next].addr,
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	if (audio->in[audio->fill_next].used == 0) {
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		audio->buf_refresh = 1;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	wake_up(&audio->read_wait);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:					audio->dec_state =
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:					wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:					audio->dec_state =
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:					wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:				if (audio->pcm_feedback)
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:				audpp_route_stream(audio->dec_id,
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:						audio->source);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:				if (audio->pcm_feedback) {
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:				audio->dec_state =
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:				wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			audio->running = 1;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			audpp_dsp_set_vol_pan(audio->dec_id, &audio->vol_pan,
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			audpp_dsp_set_eq(audio->dec_id,	audio->eq_enable,
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:					&audio->eq, POPP);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			audio->running = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		audio->wflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		audio->rflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		if (audio->pcm_feedback)
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		audio->teos = 1;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		memcpy(&audio->avsync[0], msg, sizeof(audio->avsync));
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		audio->avsync_flag = 1;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		wake_up(&audio->avsync_wait);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	msm_adsp_write(audio->audplay, audio->queue_id, \
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	cfg_dec_cmd.stream_id = audio->dec_id;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	cmd.common.dec_id = audio->dec_id;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	cmd.object_number = audio->dec_id;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	if (audio->pcm_feedback)
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	if (audio->mfield)
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			(audio->out[idx].mfield_sz >> 1);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		cmd.decoder_id = audio->dec_id;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	cmd.buf_ptr = audio->out[idx].addr;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	refresh_cmd.buf0_address = audio->in[audio->fill_next].addr;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	refresh_cmd.buf0_length = audio->in[audio->fill_next].size;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	if (!audio->running)
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	if (needed && !audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		audio->out_needed = 1;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		frame = audio->out + audio->out_tail;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			MM_DBG("frame %d free\n", audio->out_tail);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			audio->out_tail ^= 1;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	if (audio->out_needed) {
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		frame = audio->out + audio->out_tail;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			MM_DBG("frame %d busy\n", audio->out_tail);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			audplay_dsp_send_data_avail(audio, audio->out_tail,
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	audio->out[0].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	audio->out[1].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	audio->out_head = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	audio->out_tail = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	atomic_set(&audio->out_bytes, 0);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		audio->in[index].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	audio->buf_refresh = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	audio->read_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	audio->fill_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	wake_up(&audio->read_wait);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	mutex_lock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	mutex_unlock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	audio->avsync_flag = 1;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	wake_up(&audio->avsync_wait);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	spin_lock_irqsave(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	empty = !list_empty(&audio->event_queue);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	spin_unlock_irqrestore(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	return empty || audio->event_abort;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	spin_lock_irqsave(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	list_for_each_safe(ptr, next, &audio->event_queue) {
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		drv_evt = list_first_entry(&audio->event_queue,
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	list_for_each_safe(ptr, next, &audio->free_event_queue) {
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		drv_evt = list_first_entry(&audio->free_event_queue,
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	spin_unlock_irqrestore(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			audio->event_wait, audevrc_events_pending(audio),
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			audio->event_wait, audevrc_events_pending(audio));
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	if (audio->event_abort) {
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		audio->event_abort = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	spin_lock_irqsave(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	if (!list_empty(&audio->event_queue)) {
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		drv_evt = list_first_entry(&audio->event_queue,
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		list_add_tail(&drv_evt->list, &audio->free_event_queue);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	spin_unlock_irqrestore(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	if (audio->eq_enable == enable && !audio->eq_needs_commit)
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	audio->eq_enable = enable;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	if (audio->running) {
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		audpp_dsp_set_eq(audio->dec_id, enable, &audio->eq, POPP);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		audio->eq_needs_commit = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	if (audio->dec_id == audio->avsync[0] && audio->avsync_flag) {
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		stats->sample_count = (audio->avsync[2] << 16) |
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:						(audio->avsync[3]);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		stats->byte_count = (audio->avsync[5] << 16) |
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:						(audio->avsync[6]);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		audio->avsync_flag = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		audio->avsync_flag = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		if (audpp_query_avsync(audio->dec_id) < 0)
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		rc = wait_event_interruptible_timeout(audio->avsync_wait,
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:				(audio->avsync_flag == 1),
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		else if ((rc > 0) || ((rc == 0) && (audio->avsync_flag == 1))) {
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		audio->vol_pan.volume = arg;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		if (audio->running)
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			audpp_dsp_set_vol_pan(audio->dec_id, &audio->vol_pan,
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		audio->vol_pan.pan = arg;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		if (audio->running)
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			audpp_dsp_set_vol_pan(audio->dec_id, &audio->vol_pan,
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		prev_state = audio->eq_enable;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		audio->eq_enable = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		if (copy_from_user(&audio->eq.num_bands, (void *) arg,
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:				sizeof(audio->eq) -
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		audio->eq_enable = prev_state;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		audio->eq_needs_commit = 1;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		if (mutex_trylock(&audio->get_event_lock)) {
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			mutex_unlock(&audio->get_event_lock);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		audio->event_abort = 1;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		wake_up(&audio->event_wait);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			rc = wait_event_interruptible_timeout(audio->wait,
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:				audio->dec_state != MSM_AUD_DECODER_STATE_NONE,
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			MM_INFO("dec_state %d rc = %d\n", audio->dec_state, rc);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			if (audio->dec_state != MSM_AUD_DECODER_STATE_SUCCESS)
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		audio->stopped = 1;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		audio->stopped = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		audio->rflush = 1;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		audio->wflush = 1;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		if (audio->running) {
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			audpp_flush(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:				!audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			audio->rflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			audio->wflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			audio->mfield = config.meta_field;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			config.pcm_feedback = audio->pcm_feedback;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			if (config.pcm_feedback != audio->pcm_feedback) {
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			if ((config.pcm_feedback) && (!audio->read_data)) {
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:				audio->read_phys =
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:				if (!audio->read_phys) {
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:				audio->map_v_read = ioremap(
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:							audio->read_phys,
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:				if (IS_ERR(audio->map_v_read)) {
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:							audio->read_phys);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:					audio->read_data =
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:						audio->map_v_read;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:					audio->buf_refresh = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:					audio->pcm_buf_count =
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:					audio->read_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:					audio->fill_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:						audio->in[index].data =
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:						    audio->read_data + offset;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:						audio->in[index].addr =
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:						    audio->read_phys + offset;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:						audio->in[index].size =
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:						audio->in[index].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:						audio->read_phys,
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:						(int)audio->read_data);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		rc = audpp_pause(audio->dec_id, (int) arg);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		if (copy_to_user((void *) arg, &audio->dec_id,
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	if (!audio->running || audio->pcm_feedback) {
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		(!audio->out[0].used &&
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		!audio->out[1].used &&
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		audio->out_needed) || audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	else if (audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	audio->teos = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		audio->teos || audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	if (audio->wflush)
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	if (!audio->pcm_feedback) {
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	mutex_lock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		rc = wait_event_interruptible(audio->read_wait,
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:				(audio->in[audio->read_next].used > 0) ||
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:				(audio->stopped) || (audio->rflush));
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		if (audio->stopped || audio->rflush) {
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		if (count < audio->in[audio->read_next].used) {
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			MM_DBG("read from in[%d]\n", audio->read_next);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			    (buf, audio->in[audio->read_next].data,
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			     audio->in[audio->read_next].used)) {
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			count -= audio->in[audio->read_next].used;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			buf += audio->in[audio->read_next].used;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			audio->in[audio->read_next].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			if ((++audio->read_next) == audio->pcm_buf_count)
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:				audio->read_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	if (audio->buf_refresh && !audio->rflush) {
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		audio->buf_refresh = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	mutex_unlock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	frame = audio->out + audio->out_head;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		(audio->out_needed &&
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		audio->out[0].used == 0 &&
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		audio->out[1].used == 0)
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		|| (audio->stopped)
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		|| (audio->wflush));
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	if (audio->stopped || audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	audio->out_head ^= 1;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		frame = audio->out + audio->out_head;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:						|| (audio->stopped)
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:						|| (audio->wflush));
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		if (audio->stopped || audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		if (audio->mfield) {
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		audio->out_head ^= 1;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	auddev_unregister_evt_listner(AUDDEV_CLNT_DEC, audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	msm_adsp_put(audio->audplay);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	audpp_adec_free(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	unregister_early_suspend(&audio->suspend_ctl.node);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	audio->event_abort = 1;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	wake_up(&audio->event_wait);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	iounmap(audio->map_v_write);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	free_contiguous_memory_by_paddr(audio->phys);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	if (audio->read_data) {
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		iounmap(audio->map_v_read);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		free_contiguous_memory_by_paddr(audio->read_phys);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	if (audio->dentry)
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		debugfs_remove(audio->dentry);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	spin_lock_irqsave(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	if (!list_empty(&audio->free_event_queue)) {
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		e_node = list_first_entry(&audio->free_event_queue,
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	list_add_tail(&e_node->list, &audio->event_queue);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	spin_unlock_irqrestore(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	wake_up(&audio->event_wait);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	n = scnprintf(buffer, debug_bufmax, "opened %d\n", audio->opened);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			"enabled %d\n", audio->enabled);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			"stopped %d\n", audio->stopped);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			"pcm_feedback %d\n", audio->pcm_feedback);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			"out_buf_sz %d\n", audio->out[0].size);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			"pcm_buf_count %d \n", audio->pcm_buf_count);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			"pcm_buf_sz %d \n", audio->in[0].size);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			"volume %x \n", audio->vol_pan.volume);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			"wflush %d\n", audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			"rflush %d\n", audio->rflush);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			"running %d \n", audio->running);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			"dec state %d \n", audio->dec_state);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			"out_needed %d \n", audio->out_needed);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			"out_head %d \n", audio->out_head);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			"out_tail %d \n", audio->out_tail);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			"out[0].used %d \n", audio->out[0].used);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			"out[1].used %d \n", audio->out[1].used);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			"buffer_refresh %d \n", audio->buf_refresh);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			"read_next %d \n", audio->read_next);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			"fill_next %d \n", audio->fill_next);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	for (i = 0; i < audio->pcm_buf_count; i++)
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:				"in[%d].size %d \n", i, audio->in[i].used);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		audio->pcm_feedback = NON_TUNNEL_MODE_PLAYBACK;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		audio->pcm_feedback = TUNNEL_MODE_PLAYBACK;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	decid = audpp_adec_alloc(dec_attrb, &audio->module_name,
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			&audio->queue_id);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	audio->dec_id = decid & MSM_AUD_DECODER_MASK;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	audio->phys = allocate_contiguous_ebi_nomap(DMASZ, SZ_4K);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	if (!audio->phys) {
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		audpp_adec_free(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		audio->map_v_write = ioremap(audio->phys, DMASZ);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		if (IS_ERR(audio->map_v_write)) {
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			free_contiguous_memory_by_paddr(audio->phys);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			audpp_adec_free(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:		audio->data = audio->map_v_write;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:				audio->phys, (int)audio->data);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	rc = msm_adsp_get(audio->module_name, &audio->audplay,
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:				audio->module_name, (int)audio);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	mutex_init(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	mutex_init(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	mutex_init(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	mutex_init(&audio->get_event_lock);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	spin_lock_init(&audio->dsp_lock);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	init_waitqueue_head(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	init_waitqueue_head(&audio->read_wait);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	INIT_LIST_HEAD(&audio->free_event_queue);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	INIT_LIST_HEAD(&audio->event_queue);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	init_waitqueue_head(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	init_waitqueue_head(&audio->event_wait);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	spin_lock_init(&audio->event_queue_lock);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	init_waitqueue_head(&audio->avsync_wait);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	audio->out[0].data = audio->data + 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	audio->out[0].addr = audio->phys + 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	audio->out[0].size = BUFSZ;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	audio->out[1].data = audio->data + BUFSZ;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	audio->out[1].addr = audio->phys + BUFSZ;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	audio->out[1].size = BUFSZ;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	audio->vol_pan.volume = 0x3FFF;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	audio->opened = 1;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	audio->device_events = AUDDEV_EVT_DEV_RDY
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	rc = auddev_register_evt_listner(audio->device_events,
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:					audio->dec_id,
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	snprintf(name, sizeof name, "msm_evrc_%04x", audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	audio->dentry = debugfs_create_file(name, S_IFREG | S_IRUGO,
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	if (IS_ERR(audio->dentry))
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	audio->suspend_ctl.node.level = EARLY_SUSPEND_LEVEL_DISABLE_FB;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	audio->suspend_ctl.node.resume = audevrc_resume;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	audio->suspend_ctl.node.suspend = audevrc_suspend;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	audio->suspend_ctl.audio = audio;
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	register_early_suspend(&audio->suspend_ctl.node);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:			list_add_tail(&e_node->list, &audio->free_event_queue);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	msm_adsp_put(audio->audplay);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	iounmap(audio->map_v_write);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	free_contiguous_memory_by_paddr(audio->phys);
arch/arm/mach-msm/qdsp5v2/audio_evrc.c:	audpp_adec_free(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	msm_adsp_write(audio->audrec, ((audio->queue_ids & 0xFFFF0000) >> 16),\
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	msm_adsp_write(audio->audrec, (audio->queue_ids & 0x0000FFFF),\
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		spin_lock_irqsave(&audio->dev_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		audio->dev_cnt++;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		audio->source |= (0x1 << evt_payload->routing_id);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		spin_unlock_irqrestore(&audio->dev_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		if ((audio->running == 1) && (audio->enabled == 1))
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		spin_lock_irqsave(&audio->dev_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		audio->dev_cnt--;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		audio->source &= ~(0x1 << evt_payload->routing_id);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		spin_unlock_irqrestore(&audio->dev_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		if (!audio->running || !audio->enabled)
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		if (audio->source)
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		if (audio->running == 1) {
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:				audio->samp_rate) {
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:				audio->abort = 1;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:				wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		wake_up(&audio->wait_enable);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:			audio->running = 0;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		wake_up(&audio->wait_enable);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		audio->running = 1;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		if (audio->dev_cnt > 0)
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		audio->stopped = 1;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	index = audio->in_head;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	frame = (void *) (((char *)audio->in[index].data) - \
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	if (audio->enc_type == ENC_TYPE_WAV)
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		audio->in[index].size = frame->a2dp.wav.frame_length;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	else if (audio->enc_type == ENC_TYPE_SBC) {
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		audio->in[index].size = frame->a2dp.sbc.frame_length *
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		audio->in[index].frame_num = frame->a2dp.sbc.frame_num;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		audio->in[index].frame_len = frame->a2dp.sbc.frame_length;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	atomic_add(audio->in[index].size, &audio->in_bytes);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	atomic_add(1, &audio->in_samples);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	audio->in_head = (audio->in_head + 1) & (FRAME_NUM - 1);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	if (audio->in_head == audio->in_tail)
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		audio->in_tail = (audio->in_tail + 1) & (FRAME_NUM - 1);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		audio->in_count++;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	auda2dp_dsp_read_buffer(audio, audio->dsp_cnt++);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	if (audio->build_id[17] == '1') {
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	cmd.stream_id = audio->enc_id;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		cmd.audrec_enc_type = audio->enc_type | ENCODE_ENABLE;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	if (audio->enc_type == ENC_TYPE_WAV) {
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		cmd.common.stream_id = audio->enc_id;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		cmd.aud_rec_samplerate_idx = audio->samp_rate;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		cmd.aud_rec_stereo_mode = audio->channel_mode;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	} else if (audio->enc_type == ENC_TYPE_SBC) {
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		cmd.common.stream_id = audio->enc_id;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:			(audio->cfg.number_of_blocks <<
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:			(audio->cfg.number_of_subbands <<
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:			(audio->cfg.mode <<
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:			(audio->cfg.bit_allocation <<
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:			(audio->cfg.bit_rate & 0xFFFF0000) >> 16;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:			(audio->cfg.bit_rate & 0xFFFF);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:/* To Do: msm_snddev_route_enc(audio->enc_id); */
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	cmd.stream_id = audio->enc_id;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	cmd.source_mix_mask = audio->source;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	if (audio->enc_id == 2) {
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	uint16_t *data = (void *) audio->data;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	cmd.audrec_ext_pkt_start_addr_msw = audio->phys >> 16;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	cmd.audrec_ext_pkt_start_addr_lsw = audio->phys;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	if (audio->enc_type == ENC_TYPE_SBC) {
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:			audio->in[n].data = data + 4;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:			MM_DBG("0x%8x\n", (int)(audio->in[n].data - 8));
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	} else if (audio->enc_type == ENC_TYPE_WAV) {
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:			audio->in[n].data = data + 4;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:			data += (4 + (audio->channel_mode ? 2048 : 1024));
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:			MM_DBG("0x%8x\n", (int)(audio->in[n].data - 8));
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:/* must be called with audio->lock held */
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	if (audio->enabled)
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	if (audpreproc_enable(audio->enc_id, &audpreproc_dsp_event, audio)) {
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	if (msm_adsp_enable(audio->audrec)) {
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		audpreproc_disable(audio->enc_id, audio);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	audio->enabled = 1;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:/* must be called with audio->lock held */
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	if (audio->enabled) {
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		audio->enabled = 0;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		wait_event_interruptible_timeout(audio->wait_enable,
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:				audio->running == 0, 1*HZ);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		msm_adsp_disable(audio->audrec);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		audpreproc_disable(audio->enc_id, audio);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	audio->dsp_cnt = 0;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	audio->in_head = 0;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	audio->in_tail = 0;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	audio->in_count = 0;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		audio->in[i].size = 0;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		audio->in[i].read = 0;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	MM_DBG("in_bytes %d\n", atomic_read(&audio->in_bytes));
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	MM_DBG("in_samples %d\n", atomic_read(&audio->in_samples));
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	atomic_set(&audio->in_bytes, 0);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	atomic_set(&audio->in_samples, 0);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		stats.byte_count = atomic_read(&audio->in_bytes);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		stats.sample_count = atomic_read(&audio->in_samples);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		rc = msm_snddev_request_freq(&freq, audio->enc_id,
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:				freq, audio->samp_rate);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:			msm_snddev_withdraw_freq(audio->enc_id,
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		audio->session_info.session_id = audio->enc_id;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		audio->session_info.sampling_freq = audio->samp_rate;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		audpreproc_update_audrec_info(&audio->session_info);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:			wait_event_interruptible_timeout(audio->wait_enable,
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:				audio->running != 0, 1*HZ);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:			MM_DBG("state %d rc = %d\n", audio->running, rc);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:			if (audio->running == 0) {
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:				msm_snddev_withdraw_freq(audio->enc_id,
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		audio->stopped = 0;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		audio->session_info.sampling_freq = 0;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		audpreproc_update_audrec_info(&audio->session_info);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		rc = msm_snddev_withdraw_freq(audio->enc_id,
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		audio->stopped = 1;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		audio->abort = 0;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		if (audio->stopped) {
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:			 * While audio->stopped read threads will always
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:			wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:			mutex_lock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:			mutex_unlock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		if ((audio->enc_type == ENC_TYPE_SBC) &&
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:			audio->buffer_size = cfg.buffer_size;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		if (audio->enc_type == ENC_TYPE_SBC)
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		if (copy_from_user(&audio->cfg, (void *) arg,
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:						sizeof(audio->cfg))) {
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		audio->samp_rate = audio->cfg.sample_rate;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		audio->channel_mode = audio->cfg.channels;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		audio->enc_type = ENC_TYPE_SBC;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:			audio->buffer_size = MONO_DATA_SIZE;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:			audio->buffer_size = STEREO_DATA_SIZE;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		audio->samp_rate = cfg.sample_rate;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		audio->channel_mode = cfg.channel_count;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		audio->enc_type = ENC_TYPE_WAV;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		cfg.bit_allocation = audio->cfg.bit_allocation;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		cfg.mode =  audio->cfg.mode;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		cfg.number_of_subbands = audio->cfg.number_of_subbands;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		cfg.number_of_blocks = audio->cfg.number_of_blocks;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		cfg.sample_rate = audio->samp_rate;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		cfg.channels = audio->channel_mode;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		cfg.bit_rate = audio->cfg.bit_rate;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		cfg.sample_rate = audio->samp_rate;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		if (audio->channel_mode == AUDREC_CMD_MODE_MONO) {
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		if (copy_to_user((void *) arg, &audio->enc_id,
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	mutex_lock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:			audio->wait, (audio->in_count > 0) || audio->stopped ||
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:			audio->abort);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		if (audio->stopped && !audio->in_count) {
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		if (audio->abort) {
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		index = audio->in_tail;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		data = (uint8_t *) audio->in[index].data;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		size = audio->in[index].size;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:			if (audio->enc_type == ENC_TYPE_SBC &&
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:				(audio->in[index].frame_len % 2)) {
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:				f_len = audio->in[index].frame_len;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:				f_num = audio->in[index].frame_num;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:			spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:			if (index != audio->in_tail) {
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:				spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:			audio->in[index].size = 0;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:			audio->in_tail = (audio->in_tail + 1) & (FRAME_NUM - 1);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:			audio->in_count--;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:			spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	mutex_unlock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	msm_snddev_withdraw_freq(audio->enc_id, SNDDEV_CAP_TX,
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	auddev_unregister_evt_listner(AUDDEV_CLNT_ENC, audio->enc_id);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	audio->session_info.sampling_freq = 0;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	audpreproc_update_audrec_info(&audio->session_info);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	msm_adsp_put(audio->audrec);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	audpreproc_aenc_free(audio->enc_id);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	audio->audrec = NULL;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	audio->opened = 0;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	if (audio->data) {
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		ion_unmap_kernel(audio->client, audio->output_buff_handle);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		ion_free(audio->client, audio->output_buff_handle);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		audio->data = NULL;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	ion_client_destroy(audio->client);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	if (audio->opened) {
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	audio->client = client;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	audio->output_buff_handle = handle;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	audio->phys = (int32_t)addr;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	audio->msm_map = ion_map_kernel(client, handle);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	if (IS_ERR(audio->data)) {
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		audio->phys, (int)audio->data);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	audio->data = (char *)audio->msm_map;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		(int) audio->data, (int) audio->phys);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		audio->mode = MSM_AUD_ENC_MODE_TUNNEL;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	audio->channel_mode = AUDREC_CMD_MODE_MONO;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	audio->buffer_size = FRAME_SIZE_SBC;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	audio->samp_rate = 48000;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	audio->enc_type = ENC_TYPE_SBC | audio->mode;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	audio->cfg.bit_allocation = AUDIO_SBC_BA_SNR;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	audio->cfg.mode = AUDIO_SBC_MODE_JSTEREO;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	audio->cfg.number_of_subbands = AUDIO_SBC_BANDS_8;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	audio->cfg.number_of_blocks = AUDIO_SBC_BLOCKS_16;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	audio->cfg.bit_rate = 320000; /* max 512kbps(mono), 320kbs(others) */
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	encid = audpreproc_aenc_alloc(audio->enc_type, &audio->module_name,
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:			&audio->queue_ids);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	audio->enc_id = encid;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	rc = msm_adsp_get(audio->module_name, &audio->audrec,
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:		audpreproc_aenc_free(audio->enc_id);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	audio->stopped = 0;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	audio->source = 0;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	audio->abort = 0;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	audio->device_events = AUDDEV_EVT_DEV_RDY | AUDDEV_EVT_DEV_RLS |
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	rc = auddev_register_evt_listner(audio->device_events,
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:					AUDDEV_CLNT_ENC, audio->enc_id,
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	audio->build_id = socinfo_get_build_id();
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	MM_DBG("Modem build id = %s\n", audio->build_id);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	audio->opened = 1;
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	 ion_free(client, audio->output_buff_handle);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	msm_adsp_put(audio->audrec);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	audpreproc_aenc_free(audio->enc_id);
arch/arm/mach-msm/qdsp5v2/audio_a2dp_in.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	msm_adsp_write(audio->audrec, ((audio->queue_ids & 0xFFFF0000) >> 16),\
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	msm_adsp_write(audio->audrec, (audio->queue_ids & 0x0000FFFF),\
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		spin_lock_irqsave(&audio->dev_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		audio->dev_cnt++;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		if (!audio->in_call)
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:			audio->source |= (0x1 << evt_payload->routing_id);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		spin_unlock_irqrestore(&audio->dev_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		if ((audio->running == 1) && (audio->enabled == 1))
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		spin_lock_irqsave(&audio->dev_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		audio->dev_cnt--;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		if (!audio->in_call)
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:			audio->source &= ~(0x1 << evt_payload->routing_id);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		spin_unlock_irqrestore(&audio->dev_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		if (!audio->running || !audio->enabled)
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		if (audio->source)
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		audio->voice_state = evt_payload->voice_state;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		if (audio->in_call && audio->running) {
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:			if (audio->voice_state == VOICE_STATE_INCALL)
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:			else if (audio->voice_state == VOICE_STATE_OFFCALL) {
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:				wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		if (audio->running == 1) {
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:				audio->samp_rate) {
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:				audio->abort = 1;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:				wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		wake_up(&audio->wait_enable);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:			audio->running = 0;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		wake_up(&audio->wait_enable);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		audio->running = 1;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		if ((!audio->in_call && (audio->dev_cnt > 0)) ||
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:			(audio->in_call &&
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:				(audio->voice_state == VOICE_STATE_INCALL)))
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		audio->stopped = 1;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	index = audio->in_head;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	frame = (void *) (((char *)audio->in[index].data) - \
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	audio->in[index].size = frame->frame_length;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	atomic_add(audio->in[index].size, &audio->in_bytes);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	atomic_add(1, &audio->in_samples);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	audio->in_head = (audio->in_head + 1) & (FRAME_NUM - 1);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	if (audio->in_head == audio->in_tail)
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		audio->in_tail = (audio->in_tail + 1) & (FRAME_NUM - 1);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		audio->in_count++;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	audpcm_dsp_read_buffer(audio, audio->dsp_cnt++);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	if (audio->build_id[17] == '1') {
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	cmd.stream_id = audio->enc_id;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		cmd.audrec_enc_type = audio->enc_type | ENCODE_ENABLE;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	cmd.common.stream_id = audio->enc_id;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	cmd.aud_rec_samplerate_idx = audio->samp_rate;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	if (audio->dual_mic_config)
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		cmd.aud_rec_stereo_mode = audio->channel_mode;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	if (audio->channel_mode == AUDREC_CMD_MODE_MONO)
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		cmd.aud_rec_frame_size = audio->buffer_size/2;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		cmd.aud_rec_frame_size = audio->buffer_size/4;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:/* To Do: msm_snddev_route_enc(audio->enc_id); */
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	cmd.stream_id = audio->enc_id;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	cmd.source_mix_mask = audio->source;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	if (audio->enc_id == 2) {
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	uint16_t *data = (void *) audio->data;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	cmd.audrec_ext_pkt_start_addr_msw = audio->phys >> 16;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	cmd.audrec_ext_pkt_start_addr_lsw = audio->phys;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		audio->in[n].data = data + (FRAME_HEADER_SIZE/2);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		data += ((FRAME_HEADER_SIZE/2) + (audio->buffer_size/2));
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		MM_DBG("0x%8x\n", (int)(audio->in[n].data - FRAME_HEADER_SIZE));
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:/* must be called with audio->lock held */
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	if (audio->enabled)
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	if (audpreproc_enable(audio->enc_id, &audpreproc_dsp_event, audio)) {
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	if (msm_adsp_enable(audio->audrec)) {
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		audpreproc_disable(audio->enc_id, audio);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	audio->enabled = 1;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:/* must be called with audio->lock held */
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	if (audio->enabled) {
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		audio->enabled = 0;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		wait_event_interruptible_timeout(audio->wait_enable,
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:				audio->running == 0, 1*HZ);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		msm_adsp_disable(audio->audrec);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		audpreproc_disable(audio->enc_id, audio);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	audio->dsp_cnt = 0;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	audio->in_head = 0;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	audio->in_tail = 0;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	audio->in_count = 0;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		audio->in[i].size = 0;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		audio->in[i].read = 0;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	MM_DBG("in_bytes %d\n", atomic_read(&audio->in_bytes));
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	MM_DBG("in_samples %d\n", atomic_read(&audio->in_samples));
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	atomic_set(&audio->in_bytes, 0);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	atomic_set(&audio->in_samples, 0);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		stats.byte_count = atomic_read(&audio->in_bytes);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		stats.sample_count = atomic_read(&audio->in_samples);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		if (audio->in_call && (audio->voice_state !=
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		rc = msm_snddev_request_freq(&freq, audio->enc_id,
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:				freq, audio->samp_rate);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:			msm_snddev_withdraw_freq(audio->enc_id,
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		audio->dual_mic_config = msm_get_dual_mic_config(audio->enc_id);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		if (audio->dual_mic_config) {
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:			"feature\n", audio->dual_mic_config);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:			fluence_feature_update(audio->dual_mic_config,
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:							audio->enc_id);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		audio->session_info.session_id = audio->enc_id;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		audio->session_info.sampling_freq = audio->samp_rate;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		audpreproc_update_audrec_info(&audio->session_info);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:			wait_event_interruptible_timeout(audio->wait_enable,
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:				audio->running != 0, 1*HZ);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:			MM_DBG("state %d rc = %d\n", audio->running, rc);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:			if (audio->running == 0)
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		audio->stopped = 0;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		audio->session_info.sampling_freq = 0;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		audpreproc_update_audrec_info(&audio->session_info);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		rc = msm_snddev_withdraw_freq(audio->enc_id,
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		audio->stopped = 1;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		audio->abort = 0;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		if (audio->stopped) {
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:			 * While audio->stopped read threads will always
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:			wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:			mutex_lock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:			mutex_unlock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		if (audio->build_id[17] == '1') {
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:			audio->enc_type = ENC_TYPE_EXT_WAV | audio->mode;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:					audio->buffer_size = cfg.buffer_size;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:					audio->buffer_size = cfg.buffer_size;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		} else if (audio->build_id[17] == '0') {
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:			audio->enc_type = ENC_TYPE_WAV | audio->mode;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:				audio->buffer_size = MONO_DATA_SIZE_1024;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:				audio->buffer_size = STEREO_DATA_SIZE_1024;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:			MM_ERR("wrong build_id = %s\n", audio->build_id);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		audio->samp_rate = cfg.sample_rate;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		audio->channel_mode = cfg.channel_count;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		cfg.buffer_size = audio->buffer_size;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		cfg.sample_rate = audio->samp_rate;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		if (audio->channel_mode == AUDREC_CMD_MODE_MONO)
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:			spin_lock_irqsave(&audio->dev_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:				audio->source = VOICE_UL_SOURCE_MIX_MASK;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:				audio->source = VOICE_DL_SOURCE_MIX_MASK;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:				audio->source = VOICE_DL_SOURCE_MIX_MASK |
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:			audio->in_call = 1;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:			spin_unlock_irqrestore(&audio->dev_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		if (copy_to_user((void *) arg, &audio->enc_id,
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	mutex_lock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:			audio->wait, (audio->in_count > 0) || audio->stopped ||
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:			audio->abort || (audio->in_call && audio->running &&
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:				(audio->voice_state == VOICE_STATE_OFFCALL)));
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		if (!audio->in_count) {
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:			if (audio->stopped) {
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:			} else if (audio->in_call && audio->running &&
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:				(audio->voice_state == VOICE_STATE_OFFCALL)) {
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		if (audio->abort) {
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		index = audio->in_tail;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		data = (uint8_t *) audio->in[index].data;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		size = audio->in[index].size;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:			spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:			if (index != audio->in_tail) {
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:				spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:			audio->in[index].size = 0;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:			audio->in_tail = (audio->in_tail + 1) & (FRAME_NUM - 1);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:			audio->in_count--;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:			spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	mutex_unlock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	audio->in_call = 0;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	msm_snddev_withdraw_freq(audio->enc_id, SNDDEV_CAP_TX,
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	auddev_unregister_evt_listner(AUDDEV_CLNT_ENC, audio->enc_id);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	audio->session_info.sampling_freq = 0;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	audpreproc_update_audrec_info(&audio->session_info);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	msm_adsp_put(audio->audrec);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	audpreproc_aenc_free(audio->enc_id);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	audio->audrec = NULL;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	audio->opened = 0;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	if (audio->data) {
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		ion_unmap_kernel(audio->client, audio->output_buff_handle);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		ion_free(audio->client, audio->output_buff_handle);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		audio->data = NULL;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	ion_client_destroy(audio->client);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	if (audio->opened) {
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	audio->client = client;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	audio->output_buff_handle = handle;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	audio->phys = (int32_t)addr;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	audio->map_v_read = ion_map_kernel(client, handle);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	if (IS_ERR(audio->data)) {
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		audio->phys, (int)audio->data);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	audio->data = (char *)audio->map_v_read;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		(int) audio->data, (int) audio->phys);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		audio->mode = MSM_AUD_ENC_MODE_TUNNEL;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	audio->channel_mode = AUDREC_CMD_MODE_MONO;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	audio->buffer_size = MONO_DATA_SIZE_1024;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	audio->samp_rate = 8000;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	audio->enc_type = ENC_TYPE_EXT_WAV | audio->mode;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	encid = audpreproc_aenc_alloc(audio->enc_type, &audio->module_name,
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:			&audio->queue_ids);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	audio->enc_id = encid;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	rc = msm_adsp_get(audio->module_name, &audio->audrec,
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:		audpreproc_aenc_free(audio->enc_id);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	audio->stopped = 0;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	audio->source = 0;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	audio->abort = 0;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	audio->device_events = AUDDEV_EVT_DEV_RDY | AUDDEV_EVT_DEV_RLS |
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	audio->voice_state = msm_get_voice_state();
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	rc = auddev_register_evt_listner(audio->device_events,
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:					AUDDEV_CLNT_ENC, audio->enc_id,
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	audio->opened = 1;
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	audio->build_id = socinfo_get_build_id();
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	MM_DBG("Modem build id = %s\n", audio->build_id);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	ion_free(client, audio->output_buff_handle);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	msm_adsp_put(audio->audrec);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	audpreproc_aenc_free(audio->enc_id);
arch/arm/mach-msm/qdsp5v2/audio_pcm_in.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:	switch (audio->mvs_mode) {
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		set_amr_mode_msg.amr_mode = cpu_to_be32(audio->rate_type);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		if (audio->mvs_mode == MVS_MODE_AMR) {
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:					  audio->rpc_prog,
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:					  audio->rpc_ver,
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:					  audio->rpc_prog,
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:					  audio->rpc_ver,
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		audio->rpc_status = RPC_STATUS_FAILURE;
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		rc = msm_rpc_write(audio->rpc_endpt,
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:			audio->frame_mode = MVS_FRAME_MODE_AMR_DL;
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:					  audio->rpc_prog,
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:					  audio->rpc_ver,
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:			audio->rpc_status = RPC_STATUS_FAILURE;
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:			rc = msm_rpc_write(audio->rpc_endpt,
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		audio->rate_type = MVS_AMR_MODE_UNDEF;
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		audio->frame_mode = MVS_FRAME_MODE_PCM_DL;
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:				cpu_to_be32(audio->min_max_rate.min_rate);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:				cpu_to_be32(audio->min_max_rate.max_rate);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:				  audio->rpc_prog,
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:				  audio->rpc_ver,
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		audio->rpc_status = RPC_STATUS_FAILURE;
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		rc = msm_rpc_write(audio->rpc_endpt,
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:			audio->frame_mode = MVS_FRAME_MODE_VOC_RX;
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		set_g711_mode_msg.g711_mode = cpu_to_be32(audio->rate_type);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:				 audio->rpc_prog,
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:				 audio->rpc_ver,
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		audio->rpc_status = RPC_STATUS_FAILURE;
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		rc = msm_rpc_write(audio->rpc_endpt,
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:			audio->frame_mode = MVS_FRAME_MODE_G711_DL;
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		set_g729_mode_msg.g729_mode = cpu_to_be32(audio->dtx_mode);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:				 audio->rpc_prog,
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:				 audio->rpc_ver,
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		audio->rpc_status = RPC_STATUS_FAILURE;
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		rc = msm_rpc_write(audio->rpc_endpt,
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:			audio->frame_mode = MVS_FRAME_MODE_G729A_DL;
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		set_g722_mode_msg.g722_mode = cpu_to_be32(audio->rate_type);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:			audio->rpc_prog,
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:			audio->rpc_ver,
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		audio->rpc_status = RPC_STATUS_FAILURE;
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		rc = msm_rpc_write(audio->rpc_endpt,
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:			audio->frame_mode = MVS_FRAME_MODE_G722_DL;
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		set_g711A_mode_msg.g711A_mode = cpu_to_be32(audio->rate_type);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:			 audio->rpc_prog,
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:			 audio->rpc_ver,
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		audio->rpc_status = RPC_STATUS_FAILURE;
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		rc = msm_rpc_write(audio->rpc_endpt,
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:			audio->frame_mode = MVS_FRAME_MODE_G711A_DL;
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:				cpu_to_be32((audio->dtx_mode));
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:					  audio->rpc_prog,
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:					  audio->rpc_ver,
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:			audio->rpc_status = RPC_STATUS_FAILURE;
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:			rc = msm_rpc_write(audio->rpc_endpt,
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		set_efr_mode_msg.efr_mode = cpu_to_be32(audio->dtx_mode);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:				 audio->rpc_prog,
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:				 audio->rpc_ver,
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		audio->rpc_status = RPC_STATUS_FAILURE;
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		rc = msm_rpc_write(audio->rpc_endpt,
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:			if ((audio->mvs_mode == MVS_MODE_EFR) ||
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:				(audio->mvs_mode == MVS_MODE_FR))
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:				audio->frame_mode = MVS_FRAME_MODE_GSM_DL;
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:			if (audio->mvs_mode == MVS_MODE_HR)
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:				audio->frame_mode = MVS_FRAME_MODE_HR_DL;
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:	enable_msg.enable_args.mode = cpu_to_be32(audio->mvs_mode);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:			  audio->rpc_prog,
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:			  audio->rpc_ver,
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:	audio->rpc_status = RPC_STATUS_FAILURE;
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:	rc = msm_rpc_write(audio->rpc_endpt, &enable_msg, sizeof(enable_msg));
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		rc = wait_event_timeout(audio->mode_wait,
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:				(audio->rpc_status != RPC_STATUS_FAILURE),
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:				       __func__, audio->mvs_mode);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:	wake_lock(&audio->suspend_lock);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:	pm_qos_update_request(&audio->pm_qos_req,
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:			  audio->rpc_prog,
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:			  audio->rpc_ver,
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:	audio->rpc_status = RPC_STATUS_FAILURE;
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:	rc = msm_rpc_write(audio->rpc_endpt,
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		rc = wait_event_timeout(audio->wait,
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:			(audio->rpc_status != RPC_STATUS_FAILURE),
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:				audio->state = AUDIO_MVS_STARTED;
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:			  audio->rpc_prog,
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:			  audio->rpc_ver,
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:	audio->rpc_status = RPC_STATUS_FAILURE;
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:	rc = msm_rpc_write(audio->rpc_endpt, &release_msg, sizeof(release_msg));
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		rc = wait_event_timeout(audio->mode_wait,
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:				(audio->rpc_status != RPC_STATUS_FAILURE),
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:			audio->state = AUDIO_MVS_STOPPED;
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:			wake_up(&audio->out_wait);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:	pm_qos_update_request(&audio->pm_qos_req, PM_QOS_DEFAULT_VALUE);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:	wake_unlock(&audio->suspend_lock);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:					audio->rpc_status = RPC_STATUS_SUCCESS;
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:					wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:					audio->rpc_status = RPC_STATUS_SUCCESS;
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:					wake_up(&audio->mode_wait);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		rc = msm_rpc_write(audio->rpc_endpt,
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		mutex_lock(&audio->out_lock);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		if (!list_empty(&audio->free_out_queue)) {
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:			buf_node = list_first_entry(&audio->free_out_queue,
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:			list_add_tail(&buf_node->list, &audio->out_queue);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		mutex_unlock(&audio->out_lock);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		wake_up(&audio->out_wait);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		rc = msm_rpc_write(audio->rpc_endpt,
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		mutex_lock(&audio->in_lock);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		if (!list_empty(&audio->in_queue)) {
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:			buf_node = list_first_entry(&audio->in_queue,
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:						cpu_to_be32(audio->rate_type);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:						cpu_to_be32(audio->rate_type);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:						cpu_to_be32(audio->rate_type);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:						cpu_to_be32(audio->rate_type);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:						cpu_to_be32(audio->rate_type);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:			list_add_tail(&buf_node->list, &audio->free_in_queue);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		mutex_unlock(&audio->in_lock);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		wake_up(&audio->in_wait);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		dl_reply.frame_mode = cpu_to_be32(audio->frame_mode);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		dl_reply.frame_mode_again = cpu_to_be32(audio->frame_mode);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:			cpu_to_be32(audio->frame_mode);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		dl_reply.frame_info_hdr.mvs_mode = cpu_to_be32(audio->mvs_mode);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		rc = msm_rpc_write(audio->rpc_endpt,
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		int rpc_hdr_len = msm_rpc_read(audio->rpc_endpt,
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:					audio->rpc_status = RPC_STATUS_REJECT;
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:					wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:					      &audio->free_in_queue);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:					      &audio->free_out_queue);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:	list_for_each_safe(ptr, next, &audio->free_in_queue) {
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:	list_for_each_safe(ptr, next, &audio->free_out_queue) {
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:	mutex_lock(&audio->in_lock);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:	list_for_each_safe(ptr, next, &audio->in_queue) {
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:	list_for_each_safe(ptr, next, &audio->free_in_queue) {
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:	mutex_unlock(&audio->in_lock);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:	mutex_lock(&audio->out_lock);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:	list_for_each_safe(ptr, next, &audio->out_queue) {
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:	list_for_each_safe(ptr, next, &audio->free_out_queue) {
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:	mutex_unlock(&audio->out_lock);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:	if (audio->state == AUDIO_MVS_STARTED)
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:	audio->state = AUDIO_MVS_CLOSED;
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:	rc = wait_event_interruptible_timeout(audio->out_wait,
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:			(!list_empty(&audio->out_queue) ||
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:			 audio->state == AUDIO_MVS_STOPPED),
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		mutex_lock(&audio->out_lock);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		if ((audio->state == AUDIO_MVS_STARTED) &&
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		    (!list_empty(&audio->out_queue))) {
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:				buf_node = list_first_entry(&audio->out_queue,
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:					      &audio->free_out_queue);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:			       __func__, audio->state);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		mutex_unlock(&audio->out_lock);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:	rc = wait_event_interruptible_timeout(audio->in_wait,
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		(!list_empty(&audio->free_in_queue) ||
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		audio->state == AUDIO_MVS_STOPPED), 1 * HZ);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		mutex_lock(&audio->in_lock);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		if (audio->state == AUDIO_MVS_STARTED) {
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:				if (!list_empty(&audio->free_in_queue)) {
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:						&audio->free_in_queue,
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:						      &audio->in_queue);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:				__func__, audio->state);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		mutex_unlock(&audio->in_lock);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		config.mvs_mode = audio->mvs_mode;
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		config.rate_type = audio->rate_type;
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		config.min_max_rate.min_rate = audio->min_max_rate.min_rate;
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		config.min_max_rate.max_rate = audio->min_max_rate.max_rate;
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:			mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:			if (audio->state == AUDIO_MVS_OPENED) {
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:				audio->mvs_mode = config.mvs_mode;
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:				audio->rate_type = config.rate_type;
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:				audio->dtx_mode = config.dtx_mode;
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:				audio->min_max_rate.min_rate =
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:				audio->min_max_rate.max_rate =
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:				       __func__, audio->state);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:			mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		if (audio->state == AUDIO_MVS_OPENED ||
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		    audio->state == AUDIO_MVS_STOPPED) {
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:			       __func__, audio->state);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		if (audio->state == AUDIO_MVS_STARTED) {
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:			       __func__, audio->state);
arch/arm/mach-msm/qdsp5v2/audio_mvs.c:		mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		audio->source |= (0x1 << evt_payload->routing_id);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		if (audio->running == 1 && audio->enabled == 1)
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:			audpp_route_stream(audio->dec_id, audio->source);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		audio->source &= ~(0x1 << evt_payload->routing_id);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		if (audio->running == 1 && audio->enabled == 1)
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:			audpp_route_stream(audio->dec_id, audio->source);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		audio->volume = evt_payload->session_vol;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:				audio->volume);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		if (audio->running)
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:			audpp_set_volume_and_pan(audio->dec_id, audio->volume,
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:/* must be called with audio->lock held */
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	if (audio->enabled)
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	audio->dec_state = MSM_AUD_DECODER_STATE_NONE;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	audio->out_tail = 0;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	if (msm_adsp_enable(audio->audplay)) {
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	if (audpp_enable(audio->dec_id, audio_dsp_event, audio)) {
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		msm_adsp_disable(audio->audplay);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	audio->enabled = 1;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:/* must be called with audio->lock held */
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	if (audio->enabled) {
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		audio->enabled = 0;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		audio->dec_state = MSM_AUD_DECODER_STATE_NONE;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		rc = wait_event_interruptible_timeout(audio->wait,
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:				audio->dec_state != MSM_AUD_DECODER_STATE_NONE,
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		else if (audio->dec_state != MSM_AUD_DECODER_STATE_CLOSE)
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		msm_adsp_disable(audio->audplay);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		audpp_disable(audio->dec_id, audio);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		audio->drv_ops.send_data(audio, 1);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:					audio->dec_state =
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:					wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:					audio->dec_state =
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:					wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:				audpp_route_stream(audio->dec_id,
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:						audio->source);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:				audio->dec_state =
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:				wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:			audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:			audio->running = 1;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:			audpp_set_volume_and_pan(audio->dec_id, audio->volume,
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:			audio->running = 0;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		audio->wflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		audio->teos = 1;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		memcpy(&audio->avsync[0], msg, sizeof(audio->avsync));
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		audio->avsync_flag = 1;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		wake_up(&audio->avsync_wait);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	msm_adsp_write(audio->audplay, audio->queue_id, \
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	cfg_dec_cmd.stream_id = audio->dec_id;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	cmd.common.dec_id = audio->dec_id;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	cmd.common.input_sampling_frequency = audio->out_sample_rate;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	cmd.stereo_cfg = audio->out_channel_mode;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	cmd.pcm_width = audio->out_bits;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	cmd.decoder_id		= audio->dec_id;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	cmd.buf_ptr		= audio->out[idx].addr;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	if (!audio->running)
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	if (needed && !audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		audio->out_needed = 1;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		if (audio->drv_status & ADRV_STATUS_OBUF_GIVEN) {
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:			BUG_ON(list_empty(&audio->out_queue));
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:			used_buf = list_first_entry(&audio->out_queue,
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:			audio->drv_status &= ~ADRV_STATUS_OBUF_GIVEN;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	if (audio->out_needed) {
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		if (!list_empty(&audio->out_queue)) {
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:			next_buf = list_first_entry(&audio->out_queue,
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:					cmd.decoder_id = audio->dec_id;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:				audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:				audio->drv_status |= ADRV_STATUS_OBUF_GIVEN;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	if (!audio->running)
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	if (needed && !audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		audio->out_needed = 1;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		frame = audio->out + audio->out_tail;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:			MM_DBG("frame %d free\n", audio->out_tail);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:			audio->out_tail ^= 1;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:			wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	if (audio->out_needed) {
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		frame = audio->out + audio->out_tail;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:			MM_DBG("frame %d busy\n", audio->out_tail);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:			audplay_dsp_send_data_avail(audio, audio->out_tail,
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:			audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	list_for_each_safe(ptr, next, &audio->out_queue) {
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	audio->drv_status &= ~ADRV_STATUS_OBUF_GIVEN;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	atomic_set(&audio->out_bytes, 0);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	audio->out[0].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	audio->out[1].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	audio->out_head = 0;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	audio->out_tail = 0;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	audio->reserved = 0;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	atomic_set(&audio->out_bytes, 0);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	if (audio->drv_status & ADRV_STATUS_AIO_INTF) {
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		if (audio->drv_status & ADRV_STATUS_FSYNC) {
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:			wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:			mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:			audio->drv_ops.out_flush(audio);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:			mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:			audio->drv_ops.out_flush(audio);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		audio->drv_ops.out_flush(audio);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	audio->avsync_flag = 1;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	wake_up(&audio->avsync_wait);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	spin_lock_irqsave(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	empty = !list_empty(&audio->event_queue);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	spin_unlock_irqrestore(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	return empty || audio->event_abort;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	spin_lock_irqsave(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	list_for_each_safe(ptr, next, &audio->event_queue) {
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		drv_evt = list_first_entry(&audio->event_queue,
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	list_for_each_safe(ptr, next, &audio->free_event_queue) {
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		drv_evt = list_first_entry(&audio->free_event_queue,
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	spin_unlock_irqrestore(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:			audio->event_wait, audpcm_events_pending(audio),
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:			audio->event_wait, audpcm_events_pending(audio));
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	if (audio->event_abort) {
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		audio->event_abort = 0;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	spin_lock_irqsave(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	if (!list_empty(&audio->event_queue)) {
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		drv_evt = list_first_entry(&audio->event_queue,
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		list_add_tail(&drv_evt->list, &audio->free_event_queue);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	spin_unlock_irqrestore(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	list_for_each_entry(region_elt, &audio->pmem_region_queue,
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		  &audio->pmem_region_queue, list) {
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		list_add_tail(&buf_node->list, &audio->out_queue);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		audio->drv_ops.send_data(audio, 0);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	if (audio->dec_id == audio->avsync[0] && audio->avsync_flag) {
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		stats->sample_count = (audio->avsync[2] << 16) |
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:						(audio->avsync[3]);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		stats->byte_count = (audio->avsync[5] << 16) |
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:						(audio->avsync[6]);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		audio->avsync_flag = 0;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		audio->avsync_flag = 0;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		if (audpp_query_avsync(audio->dec_id) < 0)
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		rc = wait_event_interruptible_timeout(audio->avsync_wait,
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:				(audio->avsync_flag == 1),
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		else if ((rc > 0) || ((rc == 0) && (audio->avsync_flag == 1))) {
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		audio->volume = arg;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		if (audio->running)
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:			audpp_set_volume_and_pan(audio->dec_id, arg, 0,
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		if (mutex_trylock(&audio->get_event_lock)) {
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:			mutex_unlock(&audio->get_event_lock);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		audio->event_abort = 1;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		wake_up(&audio->event_wait);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:			rc = wait_event_interruptible_timeout(audio->wait,
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:				audio->dec_state != MSM_AUD_DECODER_STATE_NONE,
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:			MM_INFO("dec_state %d rc = %d\n", audio->dec_state, rc);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:			if (audio->dec_state != MSM_AUD_DECODER_STATE_SUCCESS)
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		audio->stopped = 1;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		audio->stopped = 0;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		audio->wflush = 1;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		if (audio->running) {
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:			audpp_flush(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:			rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:				!audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:			audio->wflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		audio->out_sample_rate = config.sample_rate;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		audio->out_channel_mode = config.channel_count;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		audio->out_bits = config.bits;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		config.buffer_size = (audio->out_dma_sz >> 1);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		config.sample_rate = audio->out_sample_rate;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		if (audio->out_channel_mode == AUDPP_CMD_PCM_INTF_MONO_V)
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		if (audio->out_bits == AUDPP_CMD_WAV_PCM_WIDTH_8)
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		else if (audio->out_bits == AUDPP_CMD_WAV_PCM_WIDTH_24)
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		rc = audpp_pause(audio->dec_id, (int) arg);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		if (audio->drv_status & ADRV_STATUS_FSYNC)
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		if (copy_to_user((void *) arg, &audio->dec_id,
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	audio->drv_status |= ADRV_STATUS_FSYNC;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	audio->teos = 0;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		(audio->teos && audio->out_needed &&
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		list_empty(&audio->out_queue))
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		|| audio->wflush || audio->stopped);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	if (audio->stopped || audio->wflush)
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	audio->drv_status &= ~ADRV_STATUS_FSYNC;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		(!audio->out[0].used &&
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		!audio->out[1].used &&
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		audio->out_needed) || audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	else if (audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	if (audio->reserved) {
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		frame = audio->out + audio->out_tail;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		((char *) frame->data)[0] = audio->rsv_byte;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		audio->drv_ops.send_data(audio, 0);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:			(!audio->out[0].used &&
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:			!audio->out[1].used &&
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:			audio->out_needed) || audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		else if (audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	audio->teos = 0;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		audio->teos || audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	if (audio->wflush)
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	if (!audio->running)
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	return audio->drv_ops.fsync(audio);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	if (audio->drv_status & ADRV_STATUS_AIO_INTF)
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		frame = audio->out + audio->out_head;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:					      || (audio->stopped)
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:						  || (audio->wflush));
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		if (audio->stopped || audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		if (audio->reserved) {
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:			MM_DBG("append reserved byte %x\n", audio->rsv_byte);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:			*cpy_ptr = audio->rsv_byte;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:			audio->reserved = 0;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:			audio->rsv_byte = ((char *) frame->data)[dsize - 1];
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:					audio->rsv_byte);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:			audio->reserved = 1;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:			audio->out_head ^= 1;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:			audio->drv_ops.send_data(audio, 0);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	auddev_unregister_evt_listner(AUDDEV_CLNT_DEC, audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	audio->drv_ops.out_flush(audio);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	msm_adsp_put(audio->audplay);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	audpp_adec_free(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	unregister_early_suspend(&audio->suspend_ctl.node);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	audio->opened = 0;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	audio->event_abort = 1;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	wake_up(&audio->event_wait);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	if (audio->data) {
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		iounmap(audio->map_v_write);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		free_contiguous_memory_by_paddr(audio->phys);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	if (audio->dentry)
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		debugfs_remove(audio->dentry);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	spin_lock_irqsave(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	if (!list_empty(&audio->free_event_queue)) {
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		e_node = list_first_entry(&audio->free_event_queue,
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	list_add_tail(&e_node->list, &audio->event_queue);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	spin_unlock_irqrestore(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	wake_up(&audio->event_wait);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	n = scnprintf(buffer, debug_bufmax, "opened %d\n", audio->opened);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:				   "enabled %d\n", audio->enabled);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:				   "stopped %d\n", audio->stopped);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:				   "out_buf_sz %d\n", audio->out[0].size);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:				   "volume %x \n", audio->volume);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:				   "sample rate %d \n", audio->out_sample_rate);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		"channel mode %d \n", audio->out_channel_mode);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:				   "wflush %d\n", audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:				   "running %d \n", audio->running);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:				"dec state %d \n", audio->dec_state);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:				   "out_needed %d \n", audio->out_needed);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:				   "out_head %d \n", audio->out_head);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:				   "out_tail %d \n", audio->out_tail);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:				   "out[0].used %d \n", audio->out[0].used);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:				   "out[1].used %d \n", audio->out[1].used);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	decid = audpp_adec_alloc(dec_attrb, &audio->module_name,
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:			&audio->queue_id);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	audio->dec_id = decid & MSM_AUD_DECODER_MASK;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		audio->drv_status |= ADRV_STATUS_AIO_INTF;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		audio->drv_ops.send_data = audpcm_async_send_data;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		audio->drv_ops.out_flush = audpcm_async_flush;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		audio->drv_ops.fsync = audpcm_async_fsync;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:			audio->phys = allocate_contiguous_ebi_nomap(pmem_sz,
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:			if (audio->phys) {
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:				audio->map_v_write = ioremap(
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:							audio->phys, pmem_sz);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:				if (IS_ERR(audio->map_v_write)) {
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:								audio->phys);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:					audpp_adec_free(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:				audio->data = audio->map_v_write;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:						audio->phys, (int)audio->data);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:				audpp_adec_free(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		audio->out_dma_sz = pmem_sz;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		audio->drv_ops.send_data = audplay_send_data;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		audio->drv_ops.out_flush = audio_flush;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		audio->drv_ops.fsync = audpcm_sync_fsync;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		audio->out[0].data = audio->data + 0;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		audio->out[0].addr = audio->phys + 0;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		audio->out[0].size = (audio->out_dma_sz >> 1);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		audio->out[1].data = audio->data + audio->out[0].size;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		audio->out[1].addr = audio->phys + audio->out[0].size;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		audio->out[1].size = audio->out[0].size;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	rc = msm_adsp_get(audio->module_name, &audio->audplay,
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:				audio->module_name, (int)audio);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	mutex_init(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	mutex_init(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	mutex_init(&audio->get_event_lock);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	spin_lock_init(&audio->dsp_lock);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	init_waitqueue_head(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	INIT_LIST_HEAD(&audio->out_queue);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	INIT_LIST_HEAD(&audio->pmem_region_queue);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	INIT_LIST_HEAD(&audio->free_event_queue);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	INIT_LIST_HEAD(&audio->event_queue);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	init_waitqueue_head(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	init_waitqueue_head(&audio->event_wait);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	spin_lock_init(&audio->event_queue_lock);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	init_waitqueue_head(&audio->avsync_wait);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	audio->out_sample_rate = 44100;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	audio->out_channel_mode = AUDPP_CMD_PCM_INTF_STEREO_V;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	audio->out_bits = AUDPP_CMD_WAV_PCM_WIDTH_16;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	audio->volume = 0x7FFF;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	audio->drv_ops.out_flush(audio);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	audio->opened = 1;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	audio->device_events = AUDDEV_EVT_DEV_RDY
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	rc = auddev_register_evt_listner(audio->device_events,
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:					audio->dec_id,
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	snprintf(name, sizeof name, "msm_pcm_dec_%04x", audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	audio->dentry = debugfs_create_file(name, S_IFREG | S_IRUGO,
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	if (IS_ERR(audio->dentry))
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	audio->suspend_ctl.node.level = EARLY_SUSPEND_LEVEL_DISABLE_FB;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	audio->suspend_ctl.node.resume = audpcm_resume;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	audio->suspend_ctl.node.suspend = audpcm_suspend;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	audio->suspend_ctl.audio = audio;
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	register_early_suspend(&audio->suspend_ctl.node);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:			list_add_tail(&e_node->list, &audio->free_event_queue);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	msm_adsp_put(audio->audplay);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	if (audio->data) {
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		iounmap(audio->map_v_write);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:		free_contiguous_memory_by_paddr(audio->phys);
arch/arm/mach-msm/qdsp5v2/audio_pcm.c:	audpp_adec_free(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->source |= (0x1 << evt_payload->routing_id);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		if (audio->running == 1 && audio->enabled == 1)
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			audpp_route_stream(audio->dec_id, audio->source);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->source &= ~(0x1 << evt_payload->routing_id);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		if (audio->running == 1 && audio->enabled == 1)
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			audpp_route_stream(audio->dec_id, audio->source);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->vol_pan.volume = evt_payload->session_vol;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:				audio->vol_pan.volume);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		if (audio->running)
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			audpp_dsp_set_vol_pan(audio->dec_id, &audio->vol_pan,
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:/* must be called with audio->lock held */
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	if (audio->enabled)
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->dec_state = MSM_AUD_DECODER_STATE_NONE;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->out_tail = 0;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	if (msm_adsp_enable(audio->audplay)) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	if (audpp_enable(audio->dec_id, audio_dsp_event, audio)) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		msm_adsp_disable(audio->audplay);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->enabled = 1;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:/* must be called with audio->lock held */
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	if (audio->enabled) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->enabled = 0;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->dec_state = MSM_AUD_DECODER_STATE_NONE;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		rc = wait_event_interruptible_timeout(audio->wait,
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:				audio->dec_state != MSM_AUD_DECODER_STATE_NONE,
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		else if (audio->dec_state != MSM_AUD_DECODER_STATE_CLOSE)
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		wake_up(&audio->read_wait);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		msm_adsp_disable(audio->audplay);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audpp_disable(audio->dec_id, audio);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	if (audio->rflush)
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		BUG_ON(list_empty(&audio->in_queue));
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		filled_buf = list_first_entry(&audio->in_queue,
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->drv_status &= ~ADRV_STATUS_IBUF_GIVEN;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->drv_ops.buffer_refresh(audio);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	if (audio->rflush)
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		if (audio->in[audio->fill_next].addr ==
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			MM_DBG("in[%d] ready\n", audio->fill_next);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			audio->in[audio->fill_next].used =
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			if ((++audio->fill_next) == audio->pcm_buf_count)
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:				audio->fill_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:					audio->in[audio->fill_next].addr,
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	if (audio->in[audio->fill_next].used == 0) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->drv_ops.buffer_refresh(audio);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->buf_refresh = 1;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	wake_up(&audio->read_wait);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->bitstream_error_info.dec_id = payload[0];
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->bitstream_error_info.err_msg_indicator = payload[1];
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->bitstream_error_info.err_type = payload[2];
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			audio->bitstream_error_info.err_type, (0x0000FFFF &
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			audio->bitstream_error_info.err_msg_indicator));
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	e_payload.error_info = audio->bitstream_error_info;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->stream_info.codec_type = AUDIO_CODEC_TYPE_MP3;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->stream_info.chan_info = (0x0000FFFF & payload[1]);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->stream_info.sample_rate = (0x0000FFFF & payload[2]);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->stream_info.bit_stream_info = (0x0000FFFF & payload[3]);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->stream_info.bit_rate = payload[4];
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			audio->stream_info.chan_info,
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			audio->stream_info.sample_rate,
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			audio->stream_info.bit_stream_info);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	e_payload.stream_info = audio->stream_info;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->drv_ops.send_data(audio, 1);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->drv_ops.pcm_buf_update(audio, msg);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->rflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		wake_up(&audio->read_wait);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		if (audio->pcm_feedback)
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			audio->drv_ops.buffer_refresh(audio);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:					audio->dec_state =
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:					wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:					audio->dec_state =
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:					wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:				if (audio->pcm_feedback)
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:				audpp_route_stream(audio->dec_id,
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:						audio->source);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:				if (audio->pcm_feedback) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:					audio->drv_ops.buffer_refresh(audio);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:				audio->dec_state =
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:				wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			audio->running = 1;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			audpp_dsp_set_vol_pan(audio->dec_id, &audio->vol_pan,
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			audpp_dsp_set_eq(audio->dec_id, audio->eq_enable,
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:					&audio->eq, POPP);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			audio->running = 0;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->wflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->rflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		if (audio->pcm_feedback)
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			audio->drv_ops.buffer_refresh(audio);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->teos = 1;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		memcpy(&audio->avsync[0], msg, sizeof(audio->avsync));
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->avsync_flag = 1;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		wake_up(&audio->avsync_wait);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	msm_adsp_write(audio->audplay, audio->queue_id, \
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	cfg_dec_cmd.stream_id = audio->dec_id;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	cmd.common.dec_id = audio->dec_id;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	cmd.common.input_sampling_frequency = audio->out_sample_rate;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	cmd.object_number = audio->dec_id;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	if (audio->pcm_feedback)
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	if (audio->mfield)
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			(audio->out[idx].mfield_sz >> 1);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		cmd.decoder_id		= audio->dec_id;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	cmd.buf_ptr		= audio->out[idx].addr;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	if (!audio->running ||
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	    audio->drv_status & ADRV_STATUS_IBUF_GIVEN)
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	if (!list_empty(&audio->in_queue)) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		next_buf = list_first_entry(&audio->in_queue,
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			(audio->mfield ? 24 : 0); /* Mp3 frame size */
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->drv_status |= ADRV_STATUS_IBUF_GIVEN;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	refresh_cmd.buf0_address = audio->in[audio->fill_next].addr;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	refresh_cmd.buf0_length = audio->in[audio->fill_next].size -
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		(audio->in[audio->fill_next].size % 576) +
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		(audio->mfield ? 24 : 0); /* Mp3 frame size */
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->bitstream_error_threshold_value;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	if (!audio->running)
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	if (needed && !audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->out_needed = 1;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		if (audio->drv_status & ADRV_STATUS_OBUF_GIVEN) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			BUG_ON(list_empty(&audio->out_queue));
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			used_buf = list_first_entry(&audio->out_queue,
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			audio->drv_status &= ~ADRV_STATUS_OBUF_GIVEN;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	if (audio->out_needed) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		if (!list_empty(&audio->out_queue)) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			next_buf = list_first_entry(&audio->out_queue,
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:				if (audio->mfield)
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:					cmd.decoder_id = audio->dec_id;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:				audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:				audio->drv_status |= ADRV_STATUS_OBUF_GIVEN;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	if (!audio->running)
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	if (needed && !audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->out_needed = 1;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		frame = audio->out + audio->out_tail;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			MM_DBG("frame %d free\n", audio->out_tail);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			audio->out_tail ^= 1;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	if (audio->out_needed) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		frame = audio->out + audio->out_tail;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			MM_DBG("frame %d busy\n", audio->out_tail);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			audplay_dsp_send_data_avail(audio, audio->out_tail,
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	list_for_each_safe(ptr, next, &audio->out_queue) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->drv_status &= ~ADRV_STATUS_OBUF_GIVEN;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	atomic_set(&audio->out_bytes, 0);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->out[0].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->out[1].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->out_head = 0;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->out_tail = 0;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->reserved = 0;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	atomic_set(&audio->out_bytes, 0);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	list_for_each_safe(ptr, next, &audio->in_queue) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->drv_status &= ~ADRV_STATUS_IBUF_GIVEN;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->in[index].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->buf_refresh = 0;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->read_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->fill_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	if (audio->drv_status & ADRV_STATUS_AIO_INTF) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		if (audio->drv_status & ADRV_STATUS_FSYNC) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			audio->drv_ops.out_flush(audio);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			audio->drv_ops.out_flush(audio);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->drv_ops.in_flush(audio);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->drv_ops.out_flush(audio);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		wake_up(&audio->read_wait);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		mutex_lock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->drv_ops.in_flush(audio);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		mutex_unlock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->avsync_flag = 1;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	wake_up(&audio->avsync_wait);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	spin_lock_irqsave(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	empty = !list_empty(&audio->event_queue);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	spin_unlock_irqrestore(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	return empty || audio->event_abort;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	spin_lock_irqsave(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	list_for_each_safe(ptr, next, &audio->event_queue) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		drv_evt = list_first_entry(&audio->event_queue,
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	list_for_each_safe(ptr, next, &audio->free_event_queue) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		drv_evt = list_first_entry(&audio->free_event_queue,
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	spin_unlock_irqrestore(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			audio->event_wait, audmp3_events_pending(audio),
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			audio->event_wait, audmp3_events_pending(audio));
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	if (audio->event_abort) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->event_abort = 0;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	spin_lock_irqsave(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	if (!list_empty(&audio->event_queue)) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		drv_evt = list_first_entry(&audio->event_queue,
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		list_add_tail(&drv_evt->list, &audio->free_event_queue);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	spin_unlock_irqrestore(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	list_for_each_entry(region_elt, &audio->pmem_region_queue,
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		  &audio->pmem_region_queue, list) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		    (!audio->pcm_feedback &&
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		list_add_tail(&buf_node->list, &audio->out_queue);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->drv_ops.send_data(audio, 0);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		list_add_tail(&buf_node->list, &audio->in_queue);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->drv_ops.buffer_refresh(audio);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	if (audio->eq_enable == enable && !audio->eq_needs_commit)
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->eq_enable = enable;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	if (audio->running) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audpp_dsp_set_eq(audio->dec_id, enable, &audio->eq, POPP);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->eq_needs_commit = 0;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	if (audio->dec_id == audio->avsync[0] && audio->avsync_flag) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		stats->sample_count = (audio->avsync[2] << 16) |
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:						(audio->avsync[3]);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		stats->byte_count = (audio->avsync[5] << 16) |
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:						(audio->avsync[6]);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->avsync_flag = 0;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->avsync_flag = 0;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		if (audpp_query_avsync(audio->dec_id) < 0)
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		rc = wait_event_interruptible_timeout(audio->avsync_wait,
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:				(audio->avsync_flag == 1),
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		else if ((rc > 0) || ((rc == 0) && (audio->avsync_flag == 1))) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->vol_pan.volume = arg;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		if (audio->running)
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			audpp_dsp_set_vol_pan(audio->dec_id, &audio->vol_pan,
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->vol_pan.pan = arg;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		if (audio->running)
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			audpp_dsp_set_vol_pan(audio->dec_id, &audio->vol_pan,
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		prev_state = audio->eq_enable;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->eq_enable = 0;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		if (copy_from_user(&audio->eq.num_bands, (void *) arg,
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:				sizeof(audio->eq) -
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->eq_enable = prev_state;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->eq_needs_commit = 1;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		if (mutex_trylock(&audio->get_event_lock)) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			mutex_unlock(&audio->get_event_lock);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->event_abort = 1;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		wake_up(&audio->event_wait);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			rc = wait_event_interruptible_timeout(audio->wait,
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:				audio->dec_state != MSM_AUD_DECODER_STATE_NONE,
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			MM_INFO("dec_state %d rc = %d\n", audio->dec_state, rc);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			if (audio->dec_state != MSM_AUD_DECODER_STATE_SUCCESS)
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->stopped = 1;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->stopped = 0;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->rflush = 1;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->wflush = 1;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		if (audio->running) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			audpp_flush(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:				!audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			audio->rflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			audio->wflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->rflush = 1;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		if (audio->drv_status & ADRV_STATUS_AIO_INTF) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			audio->drv_ops.in_flush(audio);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			wake_up(&audio->read_wait);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			mutex_lock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			audio->drv_ops.in_flush(audio);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			mutex_unlock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		rc = wait_event_interruptible(audio->read_wait,
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:				!audio->rflush);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->mfield = config.meta_field;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->out_sample_rate = config.sample_rate;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->out_channel_mode = config.channel_count;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		config.buffer_size = (audio->out_dma_sz >> 1);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		config.sample_rate = audio->out_sample_rate;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		if (audio->out_channel_mode == AUDPP_CMD_PCM_INTF_MONO_V)
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		config.pcm_feedback = audio->pcm_feedback;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			if (config.pcm_feedback != audio->pcm_feedback) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			if (audio->drv_status & ADRV_STATUS_AIO_INTF) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			if ((config.pcm_feedback) && (!audio->read_data)) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:				audio->read_phys =
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:				if (!audio->read_phys) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:				audio->map_v_read = ioremap(
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:							audio->read_phys,
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:				if (IS_ERR(audio->map_v_read)) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:							audio->read_phys);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:					audio->read_data =
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:						audio->map_v_read;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:					audio->buf_refresh = 0;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:					audio->pcm_buf_count =
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:					audio->read_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:					audio->fill_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:						audio->in[index].data =
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:						    audio->read_data + offset;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:						audio->in[index].addr =
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:						    audio->read_phys + offset;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:						audio->in[index].size =
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:						audio->in[index].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:						audio->read_phys,
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:						(int)audio->read_data);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		rc = audpp_pause(audio->dec_id, (int) arg);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		if (audio->stream_info.sample_rate == 0) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		if (copy_to_user((void *)arg, &audio->stream_info,
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		if ((audio->bitstream_error_info.err_msg_indicator &
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		if (copy_to_user((void *)arg, &audio->bitstream_error_info,
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		if (audio->drv_status & ADRV_STATUS_FSYNC)
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		if (audio->pcm_feedback)
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		if (copy_to_user((void *) arg, &audio->dec_id,
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		if (copy_from_user(&audio->bitstream_error_threshold_value,
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->drv_status |= ADRV_STATUS_FSYNC;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->teos = 0;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		(audio->teos && audio->out_needed &&
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		list_empty(&audio->out_queue))
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		|| audio->wflush || audio->stopped);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	if (audio->stopped || audio->wflush)
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->drv_status &= ~ADRV_STATUS_FSYNC;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		(!audio->out[0].used &&
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		!audio->out[1].used &&
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->out_needed) || audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	else if (audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	if (audio->reserved) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		frame = audio->out + audio->out_tail;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		((char *) frame->data)[0] = audio->rsv_byte;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->drv_ops.send_data(audio, 0);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			(!audio->out[0].used &&
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			!audio->out[1].used &&
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			audio->out_needed) || audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		else if (audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->teos = 0;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->teos || audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	if (audio->wflush)
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	if (!audio->running || audio->pcm_feedback)
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	return audio->drv_ops.fsync(audio);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	if (audio->drv_status & ADRV_STATUS_AIO_INTF)
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	else if (!audio->pcm_feedback)
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	mutex_lock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			audio->read_wait,
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			(audio->in[audio->read_next].
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			used > 0) || (audio->stopped)
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			|| (audio->rflush),
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		if (audio->stopped || audio->rflush) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		if (count < audio->in[audio->read_next].used) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			MM_DBG("read from in[%d]\n", audio->read_next);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			    (buf, audio->in[audio->read_next].data,
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			     audio->in[audio->read_next].used)) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			count -= audio->in[audio->read_next].used;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			buf += audio->in[audio->read_next].used;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			audio->in[audio->read_next].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			if ((++audio->read_next) == audio->pcm_buf_count)
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:				audio->read_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	if (audio->buf_refresh && !audio->rflush) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->buf_refresh = 0;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->drv_ops.buffer_refresh(audio);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	mutex_unlock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	if (audio->reserved) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		frame = audio->out + audio->out_head;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			|| (audio->stopped)
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			|| (audio->wflush));
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		if (audio->stopped || audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		buf_ptr[0] = audio->rsv_byte;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->out_head ^= 1;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->reserved = 0;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->drv_ops.send_data(audio, 0);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	frame = audio->out + audio->out_head;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		(audio->out_needed &&
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->out[0].used == 0 &&
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->out[1].used == 0)
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		|| (audio->stopped)
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		|| (audio->wflush));
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	if (audio->stopped || audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->out_head ^= 1;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->drv_ops.send_data(audio, 0);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	if (audio->drv_status & ADRV_STATUS_AIO_INTF)
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		frame = audio->out + audio->out_head;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:					      || (audio->stopped)
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:						  || (audio->wflush));
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		if (audio->stopped || audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		if (audio->mfield) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		if (audio->reserved) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			MM_DBG("append reserved byte %x\n", audio->rsv_byte);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			*cpy_ptr = audio->rsv_byte;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			audio->reserved = 0;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			audio->rsv_byte = ((char *) frame->data)[dsize - 1];
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:					audio->rsv_byte);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			audio->reserved = 1;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			audio->out_head ^= 1;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			audio->drv_ops.send_data(audio, 0);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	auddev_unregister_evt_listner(AUDDEV_CLNT_DEC, audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->drv_ops.out_flush(audio);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->drv_ops.in_flush(audio);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	msm_adsp_put(audio->audplay);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audpp_adec_free(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	unregister_early_suspend(&audio->suspend_ctl.node);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->opened = 0;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->event_abort = 1;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	wake_up(&audio->event_wait);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	if (audio->data) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		iounmap(audio->map_v_write);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		free_contiguous_memory_by_paddr(audio->phys);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	if (audio->read_data) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		iounmap(audio->map_v_read);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		free_contiguous_memory_by_paddr(audio->read_phys);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	if (audio->dentry)
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		debugfs_remove(audio->dentry);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	spin_lock_irqsave(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	if (!list_empty(&audio->free_event_queue)) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		e_node = list_first_entry(&audio->free_event_queue,
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	list_add_tail(&e_node->list, &audio->event_queue);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	spin_unlock_irqrestore(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	wake_up(&audio->event_wait);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	n = scnprintf(buffer, debug_bufmax, "opened %d\n", audio->opened);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:				   "enabled %d\n", audio->enabled);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:				   "stopped %d\n", audio->stopped);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:				   "pcm_feedback %d\n", audio->pcm_feedback);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:				   "out_buf_sz %d\n", audio->out[0].size);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:				   "pcm_buf_count %d \n", audio->pcm_buf_count);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:				   "pcm_buf_sz %d \n", audio->in[0].size);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:				   "volume %x \n", audio->vol_pan.volume);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:				   "sample rate %d \n", audio->out_sample_rate);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		"channel mode %d \n", audio->out_channel_mode);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:				   "wflush %d\n", audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:				   "rflush %d\n", audio->rflush);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:				   "running %d \n", audio->running);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:				"dec state %d \n", audio->dec_state);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:				   "out_needed %d \n", audio->out_needed);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:				   "out_head %d \n", audio->out_head);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:				   "out_tail %d \n", audio->out_tail);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:				   "out[0].used %d \n", audio->out[0].used);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:				   "out[1].used %d \n", audio->out[1].used);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:				   "buffer_refresh %d \n", audio->buf_refresh);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:				   "read_next %d \n", audio->read_next);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:				   "fill_next %d \n", audio->fill_next);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	for (i = 0; i < audio->pcm_buf_count; i++)
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			"in[%d].size %d \n", i, audio->in[i].used);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->pcm_feedback = NON_TUNNEL_MODE_PLAYBACK;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->pcm_feedback = TUNNEL_MODE_PLAYBACK;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	decid = audpp_adec_alloc(dec_attrb, &audio->module_name,
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			&audio->queue_id);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->dec_id = decid & MSM_AUD_DECODER_MASK;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->drv_status |= ADRV_STATUS_AIO_INTF;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->drv_ops.pcm_buf_update = audmp3_async_pcm_buf_update;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->drv_ops.buffer_refresh = audmp3_async_buffer_refresh;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->drv_ops.send_data = audmp3_async_send_data;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->drv_ops.out_flush = audmp3_async_flush;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->drv_ops.in_flush = audmp3_async_flush_pcm_buf;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->drv_ops.fsync = audmp3_async_fsync;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			audio->phys = allocate_contiguous_ebi_nomap(pmem_sz,
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			if (audio->phys) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:				audio->map_v_write = ioremap(
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:							audio->phys, pmem_sz);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:				if (IS_ERR(audio->map_v_write)) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:								audio->phys);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:					audpp_adec_free(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:				audio->data = audio->map_v_write;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:					0x%08x\n", audio->phys,\
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:					(int)audio->data);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:				audpp_adec_free(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->out_dma_sz = pmem_sz;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->drv_ops.pcm_buf_update = audio_update_pcm_buf_entry;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->drv_ops.buffer_refresh = audplay_buffer_refresh;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->drv_ops.send_data = audplay_send_data;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->drv_ops.out_flush = audio_flush;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->drv_ops.in_flush = audio_flush_pcm_buf;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->drv_ops.fsync = audmp3_sync_fsync;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->out[0].data = audio->data + 0;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->out[0].addr = audio->phys + 0;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->out[0].size = (audio->out_dma_sz >> 1);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->out[1].data = audio->data + audio->out[0].size;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->out[1].addr = audio->phys + audio->out[0].size;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		audio->out[1].size = audio->out[0].size;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	rc = msm_adsp_get(audio->module_name, &audio->audplay,
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:				audio->module_name, (int)audio);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	mutex_init(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	mutex_init(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	mutex_init(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	mutex_init(&audio->get_event_lock);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	spin_lock_init(&audio->dsp_lock);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	init_waitqueue_head(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	init_waitqueue_head(&audio->read_wait);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	INIT_LIST_HEAD(&audio->out_queue);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	INIT_LIST_HEAD(&audio->in_queue);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	INIT_LIST_HEAD(&audio->pmem_region_queue);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	INIT_LIST_HEAD(&audio->free_event_queue);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	INIT_LIST_HEAD(&audio->event_queue);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	init_waitqueue_head(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	init_waitqueue_head(&audio->event_wait);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	spin_lock_init(&audio->event_queue_lock);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	init_waitqueue_head(&audio->avsync_wait);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->out_sample_rate = 44100;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->out_channel_mode = AUDPP_CMD_PCM_INTF_STEREO_V;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->vol_pan.volume = 0x2000;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->bitstream_error_threshold_value =
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->drv_ops.out_flush(audio);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->opened = 1;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->device_events = AUDDEV_EVT_DEV_RDY
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	rc = auddev_register_evt_listner(audio->device_events,
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:					audio->dec_id,
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	snprintf(name, sizeof name, "msm_mp3_%04x", audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->dentry = debugfs_create_file(name, S_IFREG | S_IRUGO,
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	if (IS_ERR(audio->dentry))
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->suspend_ctl.node.level = EARLY_SUSPEND_LEVEL_DISABLE_FB;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->suspend_ctl.node.resume = audmp3_resume;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->suspend_ctl.node.suspend = audmp3_suspend;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audio->suspend_ctl.audio = audio;
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	register_early_suspend(&audio->suspend_ctl.node);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:			list_add_tail(&e_node->list, &audio->free_event_queue);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	memset(&audio->stream_info, 0, sizeof(struct msm_audio_bitstream_info));
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	memset(&audio->bitstream_error_info, 0,
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	msm_adsp_put(audio->audplay);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	if (audio->data) {
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		iounmap(audio->map_v_write);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:		free_contiguous_memory_by_paddr(audio->phys);
arch/arm/mach-msm/qdsp5v2/audio_mp3.c:	audpp_adec_free(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_fm.c:/* must be called with audio->lock held */
arch/arm/mach-msm/qdsp5v2/audio_fm.c:	if (audio->enabled)
arch/arm/mach-msm/qdsp5v2/audio_fm.c:			audio->fm_mask, audio->fm_source);
arch/arm/mach-msm/qdsp5v2/audio_fm.c:	if (audio->fm_mask && audio->fm_source) {
arch/arm/mach-msm/qdsp5v2/audio_fm.c:		rc = afe_config_fm_codec(FM_ENABLE, audio->fm_mask);
arch/arm/mach-msm/qdsp5v2/audio_fm.c:			audio->running = 1;
arch/arm/mach-msm/qdsp5v2/audio_fm.c:		if ((audio->fm_mask & AFE_HW_PATH_CODEC_RX) ==
arch/arm/mach-msm/qdsp5v2/audio_fm.c:			audio->fm_calibration_rx[0].device_id,
arch/arm/mach-msm/qdsp5v2/audio_fm.c:			audio->fm_calibration_rx[0].calib_rx.audppcalgain);
arch/arm/mach-msm/qdsp5v2/audio_fm.c:		if ((audio->fm_mask & AFE_HW_PATH_AUXPCM_RX) ==
arch/arm/mach-msm/qdsp5v2/audio_fm.c:			audio->fm_calibration_rx[1].device_id,
arch/arm/mach-msm/qdsp5v2/audio_fm.c:			audio->fm_calibration_rx[1].calib_rx.audppcalgain);
arch/arm/mach-msm/qdsp5v2/audio_fm.c:	audio->enabled = 1;
arch/arm/mach-msm/qdsp5v2/audio_fm.c:			audio->fm_source = 1;
arch/arm/mach-msm/qdsp5v2/audio_fm.c:			audio->source = (0x1 << evt_payload->routing_id);
arch/arm/mach-msm/qdsp5v2/audio_fm.c:		if (audio->source & 0x1)
arch/arm/mach-msm/qdsp5v2/audio_fm.c:			audio->fm_mask = 0x1;
arch/arm/mach-msm/qdsp5v2/audio_fm.c:		else if (audio->source & 0x2)
arch/arm/mach-msm/qdsp5v2/audio_fm.c:			audio->fm_mask = 0x3;
arch/arm/mach-msm/qdsp5v2/audio_fm.c:			audio->fm_mask = 0x0;
arch/arm/mach-msm/qdsp5v2/audio_fm.c:		if (!audio->enabled
arch/arm/mach-msm/qdsp5v2/audio_fm.c:			|| !audio->fm_mask
arch/arm/mach-msm/qdsp5v2/audio_fm.c:			|| !audio->fm_source)
arch/arm/mach-msm/qdsp5v2/audio_fm.c:			afe_config_fm_codec(FM_ENABLE, audio->fm_mask);
arch/arm/mach-msm/qdsp5v2/audio_fm.c:			audio->running = 1;
arch/arm/mach-msm/qdsp5v2/audio_fm.c:			audio->fm_source = 0;
arch/arm/mach-msm/qdsp5v2/audio_fm.c:			audio->source &= ~(0x1 << evt_payload->routing_id);
arch/arm/mach-msm/qdsp5v2/audio_fm.c:		if (audio->source & 0x1)
arch/arm/mach-msm/qdsp5v2/audio_fm.c:			audio->fm_mask = 0x1;
arch/arm/mach-msm/qdsp5v2/audio_fm.c:		else if (audio->source & 0x2)
arch/arm/mach-msm/qdsp5v2/audio_fm.c:			audio->fm_mask = 0x3;
arch/arm/mach-msm/qdsp5v2/audio_fm.c:			audio->fm_mask = 0x0;
arch/arm/mach-msm/qdsp5v2/audio_fm.c:		if (audio->running
arch/arm/mach-msm/qdsp5v2/audio_fm.c:			&& (!audio->fm_mask || !audio->fm_source)) {
arch/arm/mach-msm/qdsp5v2/audio_fm.c:			afe_config_fm_codec(FM_DISABLE, audio->fm_mask);
arch/arm/mach-msm/qdsp5v2/audio_fm.c:			audio->running = 0;
arch/arm/mach-msm/qdsp5v2/audio_fm.c:		audio->volume = evt_payload->session_vol;
arch/arm/mach-msm/qdsp5v2/audio_fm.c:		afe_config_fm_volume(audio->volume);
arch/arm/mach-msm/qdsp5v2/audio_fm.c:			(devinfo->sessions && (1 << audio->dec_id))) {
arch/arm/mach-msm/qdsp5v2/audio_fm.c:			if ((audio->fm_calibration_rx[devinfo->dev_id].
arch/arm/mach-msm/qdsp5v2/audio_fm.c:				(audio->fm_calibration_rx[devinfo->dev_id].
arch/arm/mach-msm/qdsp5v2/audio_fm.c:				audio->fm_calibration_rx[devinfo->dev_id].
arch/arm/mach-msm/qdsp5v2/audio_fm.c:				audio->fm_calibration_rx[devinfo->dev_id].
arch/arm/mach-msm/qdsp5v2/audio_fm.c:				audio->fm_calibration_rx[devinfo->dev_id].
arch/arm/mach-msm/qdsp5v2/audio_fm.c:				audio->fm_calibration_rx[devinfo->dev_id].
arch/arm/mach-msm/qdsp5v2/audio_fm.c:				&audio->fm_calibration_rx[devinfo->dev_id].
arch/arm/mach-msm/qdsp5v2/audio_fm.c:					audio->\
arch/arm/mach-msm/qdsp5v2/audio_fm.c:			if (audio->running) {
arch/arm/mach-msm/qdsp5v2/audio_fm.c:				audio->fm_calibration_rx[devinfo->dev_id].
arch/arm/mach-msm/qdsp5v2/audio_fm.c:				audio->fm_calibration_rx[devinfo->dev_id].
arch/arm/mach-msm/qdsp5v2/audio_fm.c:/* must be called with audio->lock held */
arch/arm/mach-msm/qdsp5v2/audio_fm.c:	return afe_config_fm_codec(FM_DISABLE, audio->source);
arch/arm/mach-msm/qdsp5v2/audio_fm.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_fm.c:		audio->running = 0;
arch/arm/mach-msm/qdsp5v2/audio_fm.c:		audio->enabled = 0;
arch/arm/mach-msm/qdsp5v2/audio_fm.c:		if (copy_to_user((void *) arg, &audio->dec_id,
arch/arm/mach-msm/qdsp5v2/audio_fm.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_fm.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_fm.c:	auddev_unregister_evt_listner(AUDDEV_CLNT_DEC, audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_fm.c:	audio->running = 0;
arch/arm/mach-msm/qdsp5v2/audio_fm.c:	audio->enabled = 0;
arch/arm/mach-msm/qdsp5v2/audio_fm.c:	audio->opened = 0;
arch/arm/mach-msm/qdsp5v2/audio_fm.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_fm.c:	if (audio->opened)
arch/arm/mach-msm/qdsp5v2/audio_fm.c:	audio->dec_id = SESSION_ID_FM;
arch/arm/mach-msm/qdsp5v2/audio_fm.c:	audio->running = 0;
arch/arm/mach-msm/qdsp5v2/audio_fm.c:	audio->fm_source = 0;
arch/arm/mach-msm/qdsp5v2/audio_fm.c:	audio->fm_mask = 0;
arch/arm/mach-msm/qdsp5v2/audio_fm.c:	audio->fm_calibration_rx[0].device_id = AFE_HW_PATH_CODEC_RX;
arch/arm/mach-msm/qdsp5v2/audio_fm.c:	audio->fm_calibration_rx[1].device_id = AFE_HW_PATH_AUXPCM_RX;
arch/arm/mach-msm/qdsp5v2/audio_fm.c:	audio->fm_calibration_rx[0].calib_rx.audppcalgain = 0x2000;
arch/arm/mach-msm/qdsp5v2/audio_fm.c:	audio->fm_calibration_rx[1].calib_rx.audppcalgain = 0x2000;
arch/arm/mach-msm/qdsp5v2/audio_fm.c:	audio->fm_calibration_rx[0].dev_details.acdb_id = PSEUDO_ACDB_ID;
arch/arm/mach-msm/qdsp5v2/audio_fm.c:	audio->fm_calibration_rx[1].dev_details.acdb_id = PSEUDO_ACDB_ID;
arch/arm/mach-msm/qdsp5v2/audio_fm.c:	audio->device_events = AUDDEV_EVT_DEV_RDY
arch/arm/mach-msm/qdsp5v2/audio_fm.c:	rc = auddev_register_evt_listner(audio->device_events,
arch/arm/mach-msm/qdsp5v2/audio_fm.c:					audio->dec_id,
arch/arm/mach-msm/qdsp5v2/audio_fm.c:	audio->opened = 1;
arch/arm/mach-msm/qdsp5v2/audio_fm.c:	mutex_init(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:/* must be called with audio->lock held */
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	if (audio->enabled)
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	audio->dec_state = MSM_AUD_DECODER_STATE_NONE;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	audio->out_tail = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	if (msm_adsp_enable(audio->audplay)) {
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	if (audpp_enable(audio->dec_id, audamrwb_dsp_event, audio)) {
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		msm_adsp_disable(audio->audplay);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	audio->enabled = 1;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		audio->source |= (0x1 << evt_payload->routing_id);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		if (audio->running == 1 && audio->enabled == 1)
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			audpp_route_stream(audio->dec_id, audio->source);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		audio->source &= ~(0x1 << evt_payload->routing_id);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		if (audio->running == 1 && audio->enabled == 1)
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			audpp_route_stream(audio->dec_id, audio->source);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		audio->vol_pan.volume = evt_payload->session_vol;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:				audio->vol_pan.volume);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		if (audio->running)
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			audpp_dsp_set_vol_pan(audio->dec_id, &audio->vol_pan,
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:/* must be called with audio->lock held */
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	if (audio->enabled) {
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		audio->enabled = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		audio->dec_state = MSM_AUD_DECODER_STATE_NONE;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		rc = wait_event_interruptible_timeout(audio->wait,
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:				audio->dec_state != MSM_AUD_DECODER_STATE_NONE,
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		else if (audio->dec_state != MSM_AUD_DECODER_STATE_CLOSE)
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		wake_up(&audio->read_wait);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		msm_adsp_disable(audio->audplay);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		audpp_disable(audio->dec_id, audio);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	if (audio->rflush)
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		if (audio->in[audio->fill_next].addr ==
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:				in[%d] ready\n", audio->fill_next);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			audio->in[audio->fill_next].used =
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			if ((++audio->fill_next) == audio->pcm_buf_count)
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:				audio->fill_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:				audio->in[audio->fill_next].addr,
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	if (audio->in[audio->fill_next].used == 0) {
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		audio->buf_refresh = 1;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	wake_up(&audio->read_wait);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:					audio->dec_state =
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:					wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:					audio->dec_state =
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:					wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:				if (audio->pcm_feedback)
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:				audpp_route_stream(audio->dec_id,
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:						audio->source);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:				if (audio->pcm_feedback) {
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:				audio->dec_state =
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:				wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			audio->running = 1;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			audpp_dsp_set_vol_pan(audio->dec_id, &audio->vol_pan,
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			audpp_dsp_set_eq(audio->dec_id,	audio->eq_enable,
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:					&audio->eq, POPP);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			audio->running = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		audio->wflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		audio->rflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		if (audio->pcm_feedback)
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		audio->teos = 1;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		memcpy(&audio->avsync[0], msg, sizeof(audio->avsync));
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		audio->avsync_flag = 1;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		wake_up(&audio->avsync_wait);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	msm_adsp_write(audio->audplay, audio->queue_id, \
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	cfg_dec_cmd.stream_id = audio->dec_id;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	cmd.common.dec_id = audio->dec_id;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	cmd.common.input_sampling_frequency = audio->out_sample_rate;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	cmd.stereo_cfg = audio->out_channel_mode;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	cmd.object_number = audio->dec_id;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	if (audio->pcm_feedback)
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	if (audio->mfield)
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			(audio->out[idx].mfield_sz >> 1);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		cmd.decoder_id = audio->dec_id;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	cmd.buf_ptr = audio->out[idx].addr;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	refresh_cmd.buf0_address = audio->in[audio->fill_next].addr;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	refresh_cmd.buf0_length = audio->in[audio->fill_next].size;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	cfg_cmd.max_buffers = audio->pcm_buf_count;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	if (!audio->running)
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	if (needed && !audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		audio->out_needed = 1;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		frame = audio->out + audio->out_tail;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			audio->out_tail ^= 1;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	if (audio->out_needed) {
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		frame = audio->out + audio->out_tail;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			MM_DBG("frame %d busy\n", audio->out_tail);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			audplay_dsp_send_data_avail(audio, audio->out_tail,
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	audio->out[0].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	audio->out[1].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	audio->out_head = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	audio->out_tail = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	audio->reserved = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	atomic_set(&audio->out_bytes, 0);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		audio->in[index].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	audio->buf_refresh = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	audio->read_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	audio->fill_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	wake_up(&audio->read_wait);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	mutex_lock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	mutex_unlock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	audio->avsync_flag = 1;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	wake_up(&audio->avsync_wait);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	spin_lock_irqsave(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	empty = !list_empty(&audio->event_queue);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	spin_unlock_irqrestore(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	return empty || audio->event_abort;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	spin_lock_irqsave(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	list_for_each_safe(ptr, next, &audio->event_queue) {
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		drv_evt = list_first_entry(&audio->event_queue,
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	list_for_each_safe(ptr, next, &audio->free_event_queue) {
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		drv_evt = list_first_entry(&audio->free_event_queue,
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	spin_unlock_irqrestore(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			audio->event_wait, audamrwb_events_pending(audio),
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			audio->event_wait, audamrwb_events_pending(audio));
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	if (audio->event_abort) {
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		audio->event_abort = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	spin_lock_irqsave(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	if (!list_empty(&audio->event_queue)) {
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		drv_evt = list_first_entry(&audio->event_queue,
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		list_add_tail(&drv_evt->list, &audio->free_event_queue);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	spin_unlock_irqrestore(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	if (audio->eq_enable == enable && !audio->eq_needs_commit)
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	audio->eq_enable = enable;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	if (audio->running) {
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		audpp_dsp_set_eq(audio->dec_id, enable, &audio->eq, POPP);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		audio->eq_needs_commit = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	if (audio->dec_id == audio->avsync[0] && audio->avsync_flag) {
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		stats->sample_count = (audio->avsync[2] << 16) |
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:						(audio->avsync[3]);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		stats->byte_count = (audio->avsync[5] << 16) |
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:						(audio->avsync[6]);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		audio->avsync_flag = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		audio->avsync_flag = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		if (audpp_query_avsync(audio->dec_id) < 0)
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		rc = wait_event_interruptible_timeout(audio->avsync_wait,
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:				(audio->avsync_flag == 1),
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		else if ((rc > 0) || ((rc == 0) && (audio->avsync_flag == 1))) {
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		audio->vol_pan.volume = arg;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		if (audio->running)
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			audpp_dsp_set_vol_pan(audio->dec_id, &audio->vol_pan,
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		audio->vol_pan.pan = arg;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		if (audio->running)
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			audpp_dsp_set_vol_pan(audio->dec_id, &audio->vol_pan,
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		prev_state = audio->eq_enable;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		audio->eq_enable = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		if (copy_from_user(&audio->eq.num_bands, (void *) arg,
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:				sizeof(audio->eq) -
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		audio->eq_enable = prev_state;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		audio->eq_needs_commit = 1;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		if (mutex_trylock(&audio->get_event_lock)) {
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			mutex_unlock(&audio->get_event_lock);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		audio->event_abort = 1;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		wake_up(&audio->event_wait);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			rc = wait_event_interruptible_timeout(audio->wait,
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:				audio->dec_state != MSM_AUD_DECODER_STATE_NONE,
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			MM_INFO("dec_state %d rc = %d\n", audio->dec_state, rc);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			if (audio->dec_state != MSM_AUD_DECODER_STATE_SUCCESS)
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		audio->stopped = 1;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		audio->stopped = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		audio->rflush = 1;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		audio->wflush = 1;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		if (audio->running) {
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			audpp_flush(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:				!audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			audio->rflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			audio->wflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			audio->out_channel_mode = config.channel_count;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			audio->out_sample_rate = config.sample_rate;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			audio->mfield = config.meta_field;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			config.sample_rate = audio->out_sample_rate;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			if (audio->out_channel_mode ==
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		if ((config.pcm_feedback) && (!audio->read_data)) {
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			audio->read_phys = allocate_contiguous_ebi_nomap(
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			if (!audio->read_phys) {
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			audio->map_v_read = ioremap(
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:						audio->read_phys,
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			if (IS_ERR(audio->map_v_read)) {
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:							audio->read_phys);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:				audio->read_data = audio->map_v_read;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:				audio->pcm_feedback = 1;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:				audio->buf_refresh = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:				audio->pcm_buf_count =
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:				audio->read_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:				audio->fill_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:					audio->in[index].data =
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:						audio->read_data + offset;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:					audio->in[index].addr =
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:					    audio->read_phys + offset;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:					audio->in[index].size =
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:					audio->in[index].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:						audio->read_phys,
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:						(int)audio->read_data);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		if (copy_to_user((void *) arg, &audio->dec_id,
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	if (!audio->running || audio->pcm_feedback) {
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		(!audio->out[0].used &&
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		!audio->out[1].used &&
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		audio->out_needed) || audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	else if (audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	if (audio->reserved) {
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		frame = audio->out + audio->out_tail;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		((char *) frame->data)[0] = audio->rsv_byte;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			(!audio->out[0].used &&
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			!audio->out[1].used &&
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			audio->out_needed) || audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		else if (audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	audio->teos = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		audio->teos || audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	if (audio->wflush)
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	if (!audio->pcm_feedback)
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	mutex_lock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		rc = wait_event_interruptible(audio->read_wait,
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			(audio->in[audio->read_next].used > 0) ||
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			(audio->stopped) || (audio->rflush));
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		if (audio->stopped || audio->rflush) {
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		if (count < audio->in[audio->read_next].used) {
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			MM_DBG("read from in[%d]\n", audio->read_next);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			    (buf, audio->in[audio->read_next].data,
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			     audio->in[audio->read_next].used)) {
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			count -= audio->in[audio->read_next].used;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			buf += audio->in[audio->read_next].used;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			audio->in[audio->read_next].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			if ((++audio->read_next) == audio->pcm_buf_count)
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:				audio->read_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	if (audio->buf_refresh && !audio->rflush) {
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		audio->buf_refresh = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	mutex_unlock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	MM_DBG("signal input EOS reserved=%d\n", audio->reserved);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	if (audio->reserved) {
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		frame = audio->out + audio->out_head;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:					|| (audio->stopped)
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:					|| (audio->wflush));
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	if (audio->stopped || audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	buf_ptr[0] = audio->rsv_byte;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	audio->out_head ^= 1;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	audio->reserved = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		audio->out[0].used, audio->out[1].used, audio->out_needed);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	frame = audio->out + audio->out_head;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		(audio->out_needed &&
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		audio->out[0].used == 0 &&
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		audio->out[1].used == 0)
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		|| (audio->stopped)
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		|| (audio->wflush));
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	if (audio->stopped || audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	audio->out_head ^= 1;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		frame = audio->out + audio->out_head;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:						|| (audio->stopped)
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:						|| (audio->wflush));
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		if (audio->stopped || audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		if (audio->mfield) {
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		if (audio->reserved) {
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			MM_DBG("append reserved byte %x\n", audio->rsv_byte);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			*cpy_ptr = audio->rsv_byte;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			audio->reserved = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			audio->rsv_byte = ((char *) frame->data)[dsize - 1];
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:					audio->rsv_byte);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			audio->reserved = 1;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			audio->out_head ^= 1;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	auddev_unregister_evt_listner(AUDDEV_CLNT_DEC, audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	msm_adsp_put(audio->audplay);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	audpp_adec_free(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	unregister_early_suspend(&audio->suspend_ctl.node);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	audio->event_abort = 1;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	wake_up(&audio->event_wait);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	iounmap(audio->map_v_write);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	free_contiguous_memory_by_paddr(audio->phys);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	if (audio->read_data) {
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		iounmap(audio->map_v_read);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		free_contiguous_memory_by_paddr(audio->read_phys);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	if (audio->dentry)
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		debugfs_remove(audio->dentry);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	spin_lock_irqsave(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	if (!list_empty(&audio->free_event_queue)) {
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		e_node = list_first_entry(&audio->free_event_queue,
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	list_add_tail(&e_node->list, &audio->event_queue);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	spin_unlock_irqrestore(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	wake_up(&audio->event_wait);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	n = scnprintf(buffer, debug_bufmax, "opened %d\n", audio->opened);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			"enabled %d\n", audio->enabled);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			"stopped %d\n", audio->stopped);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			"pcm_feedback %d\n", audio->pcm_feedback);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			"out_buf_sz %d\n", audio->out[0].size);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			"pcm_buf_count %d \n", audio->pcm_buf_count);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			"pcm_buf_sz %d \n", audio->in[0].size);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			"volume %x \n", audio->vol_pan.volume);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			"sample rate %d \n", audio->out_sample_rate);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			"channel mode %d \n", audio->out_channel_mode);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			"wflush %d\n", audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			"rflush %d\n", audio->rflush);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			"running %d \n", audio->running);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			"dec state %d \n", audio->dec_state);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			"out_needed %d \n", audio->out_needed);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			"out_head %d \n", audio->out_head);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			"out_tail %d \n", audio->out_tail);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			"out[0].used %d \n", audio->out[0].used);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			"out[1].used %d \n", audio->out[1].used);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			"buffer_refresh %d \n", audio->buf_refresh);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			"read_next %d \n", audio->read_next);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			"fill_next %d \n", audio->fill_next);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	for (i = 0; i < audio->pcm_buf_count; i++)
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:				"in[%d].used %d \n", i, audio->in[i].used);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	decid = audpp_adec_alloc(dec_attrb, &audio->module_name,
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			&audio->queue_id);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	audio->dec_id = decid & MSM_AUD_DECODER_MASK;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	audio->phys = allocate_contiguous_ebi_nomap(DMASZ, SZ_4K);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	if (!audio->phys) {
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		audpp_adec_free(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		audio->map_v_write = ioremap(audio->phys, DMASZ);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		if (IS_ERR(audio->map_v_write)) {
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			free_contiguous_memory_by_paddr(audio->phys);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			audpp_adec_free(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:		audio->data = audio->map_v_write;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:				audio->phys, (int)audio->data);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	rc = msm_adsp_get(audio->module_name, &audio->audplay,
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:				audio->module_name, (int)audio);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	mutex_init(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	mutex_init(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	mutex_init(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	mutex_init(&audio->get_event_lock);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	spin_lock_init(&audio->dsp_lock);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	spin_lock_init(&audio->event_queue_lock);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	INIT_LIST_HEAD(&audio->free_event_queue);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	INIT_LIST_HEAD(&audio->event_queue);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	init_waitqueue_head(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	init_waitqueue_head(&audio->read_wait);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	init_waitqueue_head(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	init_waitqueue_head(&audio->event_wait);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	init_waitqueue_head(&audio->avsync_wait);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	audio->out[0].data = audio->data + 0;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	audio->out[0].addr = audio->phys + 0;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	audio->out[0].size = BUFSZ;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	audio->out[1].data = audio->data + BUFSZ;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	audio->out[1].addr = audio->phys + BUFSZ;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	audio->out[1].size = BUFSZ;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	audio->vol_pan.volume = 0x2000;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	audio->vol_pan.pan = 0x0;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	audio->eq_enable = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	audio->out_sample_rate = 44100;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	audio->out_channel_mode = AUDPP_CMD_PCM_INTF_STEREO_V;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	audio->opened = 1;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	audio->event_abort = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	audio->device_events = AUDDEV_EVT_DEV_RDY
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	rc = auddev_register_evt_listner(audio->device_events,
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:					audio->dec_id,
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	snprintf(name, sizeof name, "msm_amrwb_%04x", audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	audio->dentry = debugfs_create_file(name, S_IFREG | S_IRUGO,
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	if (IS_ERR(audio->dentry))
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	audio->suspend_ctl.node.level = EARLY_SUSPEND_LEVEL_DISABLE_FB;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	audio->suspend_ctl.node.resume = audamrwb_resume;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	audio->suspend_ctl.node.suspend = audamrwb_suspend;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	audio->suspend_ctl.audio = audio;
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	register_early_suspend(&audio->suspend_ctl.node);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:			list_add_tail(&e_node->list, &audio->free_event_queue);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	msm_adsp_put(audio->audplay);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	iounmap(audio->map_v_write);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	free_contiguous_memory_by_paddr(audio->phys);
arch/arm/mach-msm/qdsp5v2/audio_amrwb.c:	audpp_adec_free(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:/* must be called with audio->lock held */
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	if (audio->enabled)
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	audio->dec_state = MSM_AUD_DECODER_STATE_NONE;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	audio->out_tail = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	if (msm_adsp_enable(audio->audplay)) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	if (audpp_enable(audio->dec_id, audqcelp_dsp_event, audio)) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		msm_adsp_disable(audio->audplay);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	audio->enabled = 1;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		audio->source |= (0x1 << evt_payload->routing_id);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		if (audio->running == 1 && audio->enabled == 1)
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			audpp_route_stream(audio->dec_id, audio->source);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		audio->source &= ~(0x1 << evt_payload->routing_id);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		if (audio->running == 1 && audio->enabled == 1)
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			audpp_route_stream(audio->dec_id, audio->source);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		audio->vol_pan.volume = evt_payload->session_vol;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:				audio->vol_pan.volume);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		if (audio->running)
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			audpp_dsp_set_vol_pan(audio->dec_id, &audio->vol_pan,
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:/* must be called with audio->lock held */
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	if (audio->enabled) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		audio->enabled = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		audio->dec_state = MSM_AUD_DECODER_STATE_NONE;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		rc = wait_event_interruptible_timeout(audio->wait,
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:				audio->dec_state != MSM_AUD_DECODER_STATE_NONE,
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		else if (audio->dec_state != MSM_AUD_DECODER_STATE_CLOSE)
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		wake_up(&audio->read_wait);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		msm_adsp_disable(audio->audplay);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		audpp_disable(audio->dec_id, audio);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	if (audio->rflush)
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		if (audio->in[audio->fill_next].addr ==
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			MM_DBG("in[%d] ready\n", audio->fill_next);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			audio->in[audio->fill_next].used =
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			if ((++audio->fill_next) == audio->pcm_buf_count)
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:				audio->fill_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:				audio->in[audio->fill_next].addr,
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	if (audio->in[audio->fill_next].used == 0) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		audio->buf_refresh = 1;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	wake_up(&audio->read_wait);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:					audio->dec_state =
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:					wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:					audio->dec_state =
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:					wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:				if (audio->pcm_feedback)
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:				audpp_route_stream(audio->dec_id,
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:						audio->source);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:				if (audio->pcm_feedback) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:				audio->dec_state =
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:				wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			audio->running = 1;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			audpp_dsp_set_vol_pan(audio->dec_id, &audio->vol_pan,
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			audpp_dsp_set_eq(audio->dec_id,	audio->eq_enable,
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:					&audio->eq, POPP);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			audio->running = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		audio->wflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		audio->rflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		if (audio->pcm_feedback)
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		audio->teos = 1;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		memcpy(&audio->avsync[0], msg, sizeof(audio->avsync));
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		audio->avsync_flag = 1;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		wake_up(&audio->avsync_wait);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	msm_adsp_write(audio->audplay, audio->queue_id, \
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	cfg_dec_cmd.stream_id = audio->dec_id;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	cmd.common.dec_id = audio->dec_id;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	cmd.object_number = audio->dec_id;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	if (audio->pcm_feedback)
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	if (audio->mfield)
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			(audio->out[idx].mfield_sz >> 1);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		cmd.decoder_id = audio->dec_id;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	cmd.buf_ptr = audio->out[idx].addr;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	refresh_cmd.buf0_address = audio->in[audio->fill_next].addr;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	refresh_cmd.buf0_length = audio->in[audio->fill_next].size;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	if (!audio->running)
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	if (needed && !audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		audio->out_needed = 1;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		frame = audio->out + audio->out_tail;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			MM_DBG("frame %d free\n", audio->out_tail);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			audio->out_tail ^= 1;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	if (audio->out_needed) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		frame = audio->out + audio->out_tail;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			MM_DBG("frame %d busy\n", audio->out_tail);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			audplay_dsp_send_data_avail(audio, audio->out_tail,
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	audio->out[0].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	audio->out[1].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	audio->out_head = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	audio->out_tail = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		audio->in[index].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	audio->buf_refresh = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	audio->read_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	audio->fill_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	wake_up(&audio->read_wait);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	mutex_lock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	mutex_unlock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	audio->avsync_flag = 1;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	wake_up(&audio->avsync_wait);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	spin_lock_irqsave(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	empty = !list_empty(&audio->event_queue);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	spin_unlock_irqrestore(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	return empty || audio->event_abort;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	spin_lock_irqsave(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	list_for_each_safe(ptr, next, &audio->event_queue) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		drv_evt = list_first_entry(&audio->event_queue,
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	list_for_each_safe(ptr, next, &audio->free_event_queue) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		drv_evt = list_first_entry(&audio->free_event_queue,
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	spin_unlock_irqrestore(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			audio->event_wait, audqcelp_events_pending(audio),
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			audio->event_wait, audqcelp_events_pending(audio));
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	if (audio->event_abort) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		audio->event_abort = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	spin_lock_irqsave(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	if (!list_empty(&audio->event_queue)) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		drv_evt = list_first_entry(&audio->event_queue,
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		list_add_tail(&drv_evt->list, &audio->free_event_queue);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	spin_unlock_irqrestore(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	if (audio->eq_enable == enable && !audio->eq_needs_commit)
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	audio->eq_enable = enable;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	if (audio->running) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		audpp_dsp_set_eq(audio->dec_id, enable, &audio->eq, POPP);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		audio->eq_needs_commit = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	if (audio->dec_id == audio->avsync[0] && audio->avsync_flag) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		stats->sample_count = (audio->avsync[2] << 16) |
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:						(audio->avsync[3]);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		stats->byte_count = (audio->avsync[5] << 16) |
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:						(audio->avsync[6]);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		audio->avsync_flag = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		audio->avsync_flag = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		if (audpp_query_avsync(audio->dec_id) < 0)
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		rc = wait_event_interruptible_timeout(audio->avsync_wait,
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:				(audio->avsync_flag == 1),
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		else if ((rc > 0) || ((rc == 0) && (audio->avsync_flag == 1))) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		audio->vol_pan.volume = arg;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		if (audio->running)
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			audpp_dsp_set_vol_pan(audio->dec_id, &audio->vol_pan,
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		audio->vol_pan.pan = arg;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		if (audio->running)
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			audpp_dsp_set_vol_pan(audio->dec_id, &audio->vol_pan,
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		prev_state = audio->eq_enable;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		audio->eq_enable = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		if (copy_from_user(&audio->eq.num_bands, (void *) arg,
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:				sizeof(audio->eq) -
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		audio->eq_enable = prev_state;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		audio->eq_needs_commit = 1;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		if (mutex_trylock(&audio->get_event_lock)) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			mutex_unlock(&audio->get_event_lock);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		audio->event_abort = 1;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		wake_up(&audio->event_wait);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			rc = wait_event_interruptible_timeout(audio->wait,
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:				audio->dec_state != MSM_AUD_DECODER_STATE_NONE,
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			MM_INFO("dec_state %d rc = %d\n", audio->dec_state, rc);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			if (audio->dec_state != MSM_AUD_DECODER_STATE_SUCCESS)
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		audio->stopped = 1;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		audio->stopped = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		audio->rflush = 1;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		audio->wflush = 1;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		if (audio->running) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			audpp_flush(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:				!audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			audio->rflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			audio->wflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			audio->mfield = config.meta_field;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			config.pcm_feedback = audio->pcm_feedback;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			if (config.pcm_feedback != audio->pcm_feedback) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			if ((config.pcm_feedback) && (!audio->read_data)) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:				audio->read_phys =
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:				if (!audio->read_phys) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:				audio->map_v_read = ioremap(
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:							audio->read_phys,
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:				if (IS_ERR(audio->map_v_read)) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:							audio->read_phys);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:					audio->read_data =
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:						audio->map_v_read;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:					audio->buf_refresh = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:					audio->pcm_buf_count =
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:					audio->read_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:					audio->fill_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:						audio->in[index].data =
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:						audio->read_data + offset;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:						audio->in[index].addr =
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:						audio->read_phys + offset;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:						audio->in[index].size =
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:						audio->in[index].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:						audio->read_phys,
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:						(int)audio->read_data);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		rc = audpp_pause(audio->dec_id, (int) arg);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		if (copy_to_user((void *) arg, &audio->dec_id,
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	if (!audio->running || audio->pcm_feedback) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		(!audio->out[0].used &&
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		!audio->out[1].used &&
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		audio->out_needed) || audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	else if (audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	audio->teos = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		audio->teos || audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	if (audio->wflush)
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	if (!audio->pcm_feedback)
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	mutex_lock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		rc = wait_event_interruptible(audio->read_wait,
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:				(audio->in[audio->read_next].used > 0) ||
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:				(audio->stopped) || (audio->rflush));
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		if (audio->stopped || audio->rflush) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		if (count < audio->in[audio->read_next].used) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			MM_DBG("read from in[%d]\n", audio->read_next);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:				audio->in[audio->read_next].data,
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:				audio->in[audio->read_next].used)) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			count -= audio->in[audio->read_next].used;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			buf += audio->in[audio->read_next].used;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			audio->in[audio->read_next].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			if ((++audio->read_next) == audio->pcm_buf_count)
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:				audio->read_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	if (audio->buf_refresh && !audio->rflush) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		audio->buf_refresh = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	mutex_unlock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	frame = audio->out + audio->out_head;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		(audio->out_needed &&
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		audio->out[0].used == 0 &&
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		audio->out[1].used == 0)
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		|| (audio->stopped)
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		|| (audio->wflush));
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	if (audio->stopped || audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	audio->out_head ^= 1;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		frame = audio->out + audio->out_head;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:						|| (audio->stopped)
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:						|| (audio->wflush));
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		if (audio->stopped || audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		if (audio->mfield) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		audio->out_head ^= 1;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	auddev_unregister_evt_listner(AUDDEV_CLNT_DEC, audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	msm_adsp_put(audio->audplay);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	audpp_adec_free(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	unregister_early_suspend(&audio->suspend_ctl.node);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	audio->opened = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	audio->event_abort = 1;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	wake_up(&audio->event_wait);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	iounmap(audio->map_v_write);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	free_contiguous_memory_by_paddr(audio->phys);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	if (audio->read_data) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		iounmap(audio->map_v_read);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		free_contiguous_memory_by_paddr(audio->read_phys);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	if (audio->dentry)
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		debugfs_remove(audio->dentry);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	spin_lock_irqsave(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	if (!list_empty(&audio->free_event_queue)) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		e_node = list_first_entry(&audio->free_event_queue,
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	list_add_tail(&e_node->list, &audio->event_queue);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	spin_unlock_irqrestore(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	wake_up(&audio->event_wait);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	n = scnprintf(buffer, debug_bufmax, "opened %d\n", audio->opened);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			"enabled %d\n", audio->enabled);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			"stopped %d\n", audio->stopped);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			"pcm_feedback %d\n", audio->pcm_feedback);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			"out_buf_sz %d\n", audio->out[0].size);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			"pcm_buf_count %d \n", audio->pcm_buf_count);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			"pcm_buf_sz %d \n", audio->in[0].size);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			"volume %x \n", audio->vol_pan.volume);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			"wflush %d\n", audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			"rflush %d\n", audio->rflush);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			"running %d \n", audio->running);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			"dec state %d \n", audio->dec_state);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			"out_needed %d \n", audio->out_needed);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			"out_head %d \n", audio->out_head);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			"out_tail %d \n", audio->out_tail);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			"out[0].used %d \n", audio->out[0].used);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			"out[1].used %d \n", audio->out[1].used);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			"buffer_refresh %d \n", audio->buf_refresh);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			"read_next %d \n", audio->read_next);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			"fill_next %d \n", audio->fill_next);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	for (i = 0; i < audio->pcm_buf_count; i++)
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:				"in[%d].size %d \n", i, audio->in[i].used);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		audio->pcm_feedback = NON_TUNNEL_MODE_PLAYBACK;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		audio->pcm_feedback = TUNNEL_MODE_PLAYBACK;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	decid = audpp_adec_alloc(dec_attrb, &audio->module_name,
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			&audio->queue_id);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	audio->dec_id = decid & MSM_AUD_DECODER_MASK;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	audio->phys = allocate_contiguous_ebi_nomap(DMASZ, SZ_4K);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	if (!audio->phys) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		audpp_adec_free(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		audio->map_v_write = ioremap(audio->phys, DMASZ);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		if (IS_ERR(audio->map_v_write)) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			free_contiguous_memory_by_paddr(audio->phys);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			audpp_adec_free(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:		audio->data = audio->map_v_write;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:				audio->phys, (int)audio->data);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	rc = msm_adsp_get(audio->module_name, &audio->audplay,
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:				audio->module_name, (int)audio);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	mutex_init(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	mutex_init(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	mutex_init(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	mutex_init(&audio->get_event_lock);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	spin_lock_init(&audio->dsp_lock);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	init_waitqueue_head(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	init_waitqueue_head(&audio->read_wait);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	INIT_LIST_HEAD(&audio->free_event_queue);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	INIT_LIST_HEAD(&audio->event_queue);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	init_waitqueue_head(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	init_waitqueue_head(&audio->event_wait);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	spin_lock_init(&audio->event_queue_lock);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	init_waitqueue_head(&audio->avsync_wait);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	audio->out[0].data = audio->data + 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	audio->out[0].addr = audio->phys + 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	audio->out[0].size = BUFSZ;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	audio->out[1].data = audio->data + BUFSZ;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	audio->out[1].addr = audio->phys + BUFSZ;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	audio->out[1].size = BUFSZ;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	audio->vol_pan.volume = 0x2000;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	audio->opened = 1;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	audio->device_events = AUDDEV_EVT_DEV_RDY
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	rc = auddev_register_evt_listner(audio->device_events,
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:					audio->dec_id,
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	snprintf(name, sizeof name, "msm_qcelp_%04x", audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	audio->dentry = debugfs_create_file(name, S_IFREG | S_IRUGO,
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	if (IS_ERR(audio->dentry))
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	audio->suspend_ctl.node.level = EARLY_SUSPEND_LEVEL_DISABLE_FB;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	audio->suspend_ctl.node.resume = audqcelp_resume;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	audio->suspend_ctl.node.suspend = audqcelp_suspend;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	audio->suspend_ctl.audio = audio;
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	register_early_suspend(&audio->suspend_ctl.node);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:			list_add_tail(&e_node->list, &audio->free_event_queue);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	msm_adsp_put(audio->audplay);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	iounmap(audio->map_v_write);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	free_contiguous_memory_by_paddr(audio->phys);
arch/arm/mach-msm/qdsp5v2/audio_qcelp.c:	audpp_adec_free(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:/* must be called with audio->lock held */
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	if (audio->enabled)
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	audio->dec_state = MSM_AUD_DECODER_STATE_NONE;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	audio->out_tail = 0;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	if (msm_adsp_enable(audio->audplay)) {
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	if (audpp_enable(audio->dec_id, audio_dsp_event, audio)) {
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		msm_adsp_disable(audio->audplay);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	audio->enabled = 1;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		audio->source |= (0x1 << evt_payload->routing_id);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		if (audio->running == 1 && audio->enabled == 1)
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			audpp_route_stream(audio->dec_id, audio->source);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		audio->source &= ~(0x1 << evt_payload->routing_id);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		if (audio->running == 1 && audio->enabled == 1)
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			audpp_route_stream(audio->dec_id, audio->source);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		audio->vol_pan.volume = evt_payload->session_vol;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:				audio->vol_pan.volume);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		if (audio->running)
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			audpp_dsp_set_vol_pan(audio->dec_id, &audio->vol_pan,
arch/arm/mach-msm/qdsp5v2/audio_wma.c:/* must be called with audio->lock held */
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	if (audio->enabled) {
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		audio->enabled = 0;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		audio->dec_state = MSM_AUD_DECODER_STATE_NONE;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		rc = wait_event_interruptible_timeout(audio->wait,
arch/arm/mach-msm/qdsp5v2/audio_wma.c:				audio->dec_state != MSM_AUD_DECODER_STATE_NONE,
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		else if (audio->dec_state != MSM_AUD_DECODER_STATE_CLOSE)
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		wake_up(&audio->read_wait);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		msm_adsp_disable(audio->audplay);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		audpp_disable(audio->dec_id, audio);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	if (audio->rflush)
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		if (audio->in[audio->fill_next].addr ==
arch/arm/mach-msm/qdsp5v2/audio_wma.c:				in[%d] ready\n", audio->fill_next);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			audio->in[audio->fill_next].used =
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			if ((++audio->fill_next) == audio->pcm_buf_count)
arch/arm/mach-msm/qdsp5v2/audio_wma.c:				audio->fill_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:				audio->in[audio->fill_next].addr,
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	if (audio->in[audio->fill_next].used == 0) {
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		audio->buf_refresh = 1;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	wake_up(&audio->read_wait);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:					audio->dec_state =
arch/arm/mach-msm/qdsp5v2/audio_wma.c:					wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:					audio->dec_state =
arch/arm/mach-msm/qdsp5v2/audio_wma.c:					wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:				if (audio->pcm_feedback)
arch/arm/mach-msm/qdsp5v2/audio_wma.c:				audpp_route_stream(audio->dec_id,
arch/arm/mach-msm/qdsp5v2/audio_wma.c:						audio->source);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:				if (audio->pcm_feedback) {
arch/arm/mach-msm/qdsp5v2/audio_wma.c:				audio->dec_state =
arch/arm/mach-msm/qdsp5v2/audio_wma.c:				wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			audio->running = 1;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			audpp_dsp_set_vol_pan(audio->dec_id, &audio->vol_pan,
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			audpp_dsp_set_eq(audio->dec_id, audio->eq_enable,
arch/arm/mach-msm/qdsp5v2/audio_wma.c:					&audio->eq, POPP);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			audio->running = 0;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		audio->wflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		audio->rflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		if (audio->pcm_feedback)
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		audio->teos = 1;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		memcpy(&audio->avsync[0], msg, sizeof(audio->avsync));
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		audio->avsync_flag = 1;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		wake_up(&audio->avsync_wait);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	msm_adsp_write(audio->audplay, audio->queue_id, \
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	cfg_dec_cmd.stream_id = audio->dec_id;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	cmd.common.dec_id = audio->dec_id;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	cmd.common.input_sampling_frequency = audio->out_sample_rate;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	cmd.armdatareqthr = audio->wma_config.armdatareqthr;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	cmd.channelsdecoded = audio->wma_config.channelsdecoded;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	cmd.wmabytespersec = audio->wma_config.wmabytespersec;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	cmd.wmasamplingfreq = audio->wma_config.wmasamplingfreq;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	cmd.wmaencoderopts = audio->wma_config.wmaencoderopts;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	cmd.object_number = audio->dec_id;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	if (audio->pcm_feedback)
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	refresh_cmd.buf0_address = audio->in[audio->fill_next].addr;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	refresh_cmd.buf0_length = audio->in[audio->fill_next].size;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	cfg_cmd.max_buffers = audio->pcm_buf_count;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	if (!audio->pcm_feedback)
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		if (audio->mfield)
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			(audio->out[idx].mfield_sz >> 1);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			cmd.decoder_id		= audio->dec_id;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	cmd.buf_ptr		= audio->out[idx].addr;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	if (!audio->running)
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	if (audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		audio->out_needed = 1;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	if (needed && !audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		audio->out_needed = 1;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		frame = audio->out + audio->out_tail;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			MM_DBG("frame %d free\n", audio->out_tail);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			audio->out_tail ^= 1;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	if (audio->out_needed) {
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		frame = audio->out + audio->out_tail;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			MM_DBG("frame %d busy\n", audio->out_tail);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			audplay_dsp_send_data_avail(audio, audio->out_tail,
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	audio->out[0].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	audio->out[1].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	audio->out_head = 0;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	audio->out_tail = 0;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	audio->reserved = 0;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	atomic_set(&audio->out_bytes, 0);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		audio->in[index].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	audio->buf_refresh = 0;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	audio->read_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	audio->fill_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	wake_up(&audio->read_wait);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	mutex_lock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	mutex_unlock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	audio->avsync_flag = 1;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	wake_up(&audio->avsync_wait);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	spin_lock_irqsave(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	empty = !list_empty(&audio->event_queue);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	spin_unlock_irqrestore(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	return empty || audio->event_abort;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	spin_lock_irqsave(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	list_for_each_safe(ptr, next, &audio->event_queue) {
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		drv_evt = list_first_entry(&audio->event_queue,
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	list_for_each_safe(ptr, next, &audio->free_event_queue) {
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		drv_evt = list_first_entry(&audio->free_event_queue,
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	spin_unlock_irqrestore(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:				audio->event_wait, audwma_events_pending(audio),
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			audio->event_wait, audwma_events_pending(audio));
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	if (audio->event_abort) {
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		audio->event_abort = 0;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	spin_lock_irqsave(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	if (!list_empty(&audio->event_queue)) {
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		drv_evt = list_first_entry(&audio->event_queue,
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		list_add_tail(&drv_evt->list, &audio->free_event_queue);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	spin_unlock_irqrestore(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	if (audio->eq_enable == enable && !audio->eq_needs_commit)
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	audio->eq_enable = enable;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	if (audio->running) {
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		audpp_dsp_set_eq(audio->dec_id, enable, &audio->eq, POPP);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		audio->eq_needs_commit = 0;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	if (audio->dec_id == audio->avsync[0] && audio->avsync_flag) {
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		stats->sample_count = (audio->avsync[2] << 16) |
arch/arm/mach-msm/qdsp5v2/audio_wma.c:						(audio->avsync[3]);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		stats->byte_count = (audio->avsync[5] << 16) |
arch/arm/mach-msm/qdsp5v2/audio_wma.c:						(audio->avsync[6]);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		audio->avsync_flag = 0;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		audio->avsync_flag = 0;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		if (audpp_query_avsync(audio->dec_id) < 0)
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		rc = wait_event_interruptible_timeout(audio->avsync_wait,
arch/arm/mach-msm/qdsp5v2/audio_wma.c:				(audio->avsync_flag == 1),
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		else if ((rc > 0) || ((rc == 0) && (audio->avsync_flag == 1))) {
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		audio->vol_pan.volume = arg;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		if (audio->running)
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			audpp_dsp_set_vol_pan(audio->dec_id, &audio->vol_pan,
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		audio->vol_pan.pan = arg;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		if (audio->running)
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			audpp_dsp_set_vol_pan(audio->dec_id, &audio->vol_pan,
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		prev_state = audio->eq_enable;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		audio->eq_enable = 0;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		if (copy_from_user(&audio->eq.num_bands, (void *) arg,
arch/arm/mach-msm/qdsp5v2/audio_wma.c:				sizeof(audio->eq) -
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		audio->eq_enable = prev_state;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		audio->eq_needs_commit = 1;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		if (mutex_trylock(&audio->get_event_lock)) {
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			mutex_unlock(&audio->get_event_lock);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		audio->event_abort = 1;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		wake_up(&audio->event_wait);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			rc = wait_event_interruptible_timeout(audio->wait,
arch/arm/mach-msm/qdsp5v2/audio_wma.c:				audio->dec_state != MSM_AUD_DECODER_STATE_NONE,
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			MM_INFO("dec_state %d rc = %d\n", audio->dec_state, rc);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			if (audio->dec_state != MSM_AUD_DECODER_STATE_SUCCESS)
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		audio->stopped = 1;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		audio->stopped = 0;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		audio->rflush = 1;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		audio->wflush = 1;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		if (audio->running) {
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			audpp_flush(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_wma.c:				!audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			audio->rflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			audio->wflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		audio->mfield = config.meta_field;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		audio->out_sample_rate = config.sample_rate;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		audio->out_channel_mode = config.channel_count;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		config.buffer_size = (audio->out_dma_sz >> 1);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		config.sample_rate = audio->out_sample_rate;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		if (audio->out_channel_mode == AUDPP_CMD_PCM_INTF_MONO_V)
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			if (copy_to_user((void *)arg, &audio->wma_config,
arch/arm/mach-msm/qdsp5v2/audio_wma.c:				sizeof(audio->wma_config)))
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		audio->wma_config = usr_config;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			config.pcm_feedback = audio->pcm_feedback;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			if (config.pcm_feedback != audio->pcm_feedback) {
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			if ((config.pcm_feedback) && (!audio->read_data)) {
arch/arm/mach-msm/qdsp5v2/audio_wma.c:				handle = ion_alloc(audio->client,
arch/arm/mach-msm/qdsp5v2/audio_wma.c:					audio->input_buff_handle = NULL;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:				audio->input_buff_handle = handle;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:				rc = ion_phys(audio->client ,
arch/arm/mach-msm/qdsp5v2/audio_wma.c:					ion_free(audio->client, handle);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:					audio->input_buff_handle = NULL;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:						(unsigned int) audio->read_phys,
arch/arm/mach-msm/qdsp5v2/audio_wma.c:				audio->read_phys = (int32_t)addr;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:				rc = ion_handle_get_flags(audio->client,
arch/arm/mach-msm/qdsp5v2/audio_wma.c:					ion_free(audio->client, handle);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:					audio->input_buff_handle = NULL;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:				audio->map_v_read = ion_map_kernel(
arch/arm/mach-msm/qdsp5v2/audio_wma.c:					audio->client,
arch/arm/mach-msm/qdsp5v2/audio_wma.c:				if (IS_ERR(audio->map_v_read)) {
arch/arm/mach-msm/qdsp5v2/audio_wma.c:					ion_free(audio->client, handle);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:					audio->input_buff_handle = NULL;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:					audio->read_data =
arch/arm/mach-msm/qdsp5v2/audio_wma.c:						audio->map_v_read;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:					audio->buf_refresh = 0;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:					audio->pcm_buf_count =
arch/arm/mach-msm/qdsp5v2/audio_wma.c:					audio->read_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:					audio->fill_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:						audio->in[index].data =
arch/arm/mach-msm/qdsp5v2/audio_wma.c:						    audio->read_data + offset;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:						audio->in[index].addr =
arch/arm/mach-msm/qdsp5v2/audio_wma.c:						    audio->read_phys + offset;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:						audio->in[index].size =
arch/arm/mach-msm/qdsp5v2/audio_wma.c:						audio->in[index].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:						audio->read_phys,
arch/arm/mach-msm/qdsp5v2/audio_wma.c:						(int)audio->read_data);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		rc = audpp_pause(audio->dec_id, (int) arg);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		if (copy_to_user((void *) arg, &audio->dec_id,
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	if (!audio->running || audio->pcm_feedback) {
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		(!audio->out[0].used &&
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		!audio->out[1].used &&
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		audio->out_needed) || audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	else if (audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	if (audio->reserved) {
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		frame = audio->out + audio->out_tail;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		((char *) frame->data)[0] = audio->rsv_byte;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			(!audio->out[0].used &&
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			!audio->out[1].used &&
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			audio->out_needed) || audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		else if (audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	audio->teos = 0;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		audio->teos || audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	if (audio->wflush)
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	if (!audio->pcm_feedback)
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	mutex_lock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		rc = wait_event_interruptible(audio->read_wait,
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			(audio->in[audio->read_next].used > 0) ||
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			(audio->stopped) || (audio->rflush));
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		if (audio->stopped || audio->rflush) {
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		if (count < audio->in[audio->read_next].used) {
arch/arm/mach-msm/qdsp5v2/audio_wma.c:					audio->read_next);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			    (buf, audio->in[audio->read_next].data,
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			     audio->in[audio->read_next].used)) {
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			count -= audio->in[audio->read_next].used;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			buf += audio->in[audio->read_next].used;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			audio->in[audio->read_next].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			if ((++audio->read_next) == audio->pcm_buf_count)
arch/arm/mach-msm/qdsp5v2/audio_wma.c:				audio->read_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	if (audio->buf_refresh && !audio->rflush) {
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		audio->buf_refresh = 0;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	mutex_unlock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	if (audio->reserved) {
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		frame = audio->out + audio->out_head;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_wma.c:				|| (audio->stopped)
arch/arm/mach-msm/qdsp5v2/audio_wma.c:				|| (audio->wflush));
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		if (audio->stopped || audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		buf_ptr[0] = audio->rsv_byte;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		audio->out_head ^= 1;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		audio->reserved = 0;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	frame = audio->out + audio->out_head;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		(audio->out_needed &&
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		audio->out[0].used == 0 &&
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		audio->out[1].used == 0)
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		|| (audio->stopped)
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		|| (audio->wflush));
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	if (audio->stopped || audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	audio->out_head ^= 1;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		frame = audio->out + audio->out_head;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_wma.c:					      || (audio->stopped)
arch/arm/mach-msm/qdsp5v2/audio_wma.c:						  || (audio->wflush));
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		if (audio->stopped || audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		if (audio->mfield) {
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		if (audio->reserved) {
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			MM_DBG("append reserved byte %x\n", audio->rsv_byte);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			*cpy_ptr = audio->rsv_byte;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			audio->reserved = 0;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			audio->rsv_byte = ((char *) frame->data)[dsize - 1];
arch/arm/mach-msm/qdsp5v2/audio_wma.c:					audio->rsv_byte);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			audio->reserved = 1;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			audio->out_head ^= 1;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	auddev_unregister_evt_listner(AUDDEV_CLNT_DEC, audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	msm_adsp_put(audio->audplay);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	audpp_adec_free(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	unregister_early_suspend(&audio->suspend_ctl.node);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	audio->event_abort = 1;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	wake_up(&audio->event_wait);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	ion_unmap_kernel(audio->client, audio->output_buff_handle);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	ion_free(audio->client, audio->output_buff_handle);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	if (audio->input_buff_handle != NULL) {
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		ion_unmap_kernel(audio->client, audio->input_buff_handle);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		ion_free(audio->client, audio->input_buff_handle);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	ion_client_destroy(audio->client);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	if (audio->dentry)
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		debugfs_remove(audio->dentry);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	spin_lock_irqsave(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	if (!list_empty(&audio->free_event_queue)) {
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		e_node = list_first_entry(&audio->free_event_queue,
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	list_add_tail(&e_node->list, &audio->event_queue);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	spin_unlock_irqrestore(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	wake_up(&audio->event_wait);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	n = scnprintf(buffer, debug_bufmax, "opened %d\n", audio->opened);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:				   "enabled %d\n", audio->enabled);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:				   "stopped %d\n", audio->stopped);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:				   "pcm_feedback %d\n", audio->pcm_feedback);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:				   "out_buf_sz %d\n", audio->out[0].size);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:				   "pcm_buf_count %d \n", audio->pcm_buf_count);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:				   "pcm_buf_sz %d \n", audio->in[0].size);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:				   "volume %x \n", audio->vol_pan.volume);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:				   "sample rate %d \n", audio->out_sample_rate);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		"channel mode %d \n", audio->out_channel_mode);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:				   "wflush %d\n", audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:				   "rflush %d\n", audio->rflush);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:				   "running %d \n", audio->running);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			"dec state %d \n", audio->dec_state);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:				   "out_needed %d \n", audio->out_needed);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:				   "out_head %d \n", audio->out_head);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:				   "out_tail %d \n", audio->out_tail);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:				   "out[0].used %d \n", audio->out[0].used);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:				   "out[1].used %d \n", audio->out[1].used);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:				   "buffer_refresh %d \n", audio->buf_refresh);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:				   "read_next %d \n", audio->read_next);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:				   "fill_next %d \n", audio->fill_next);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	for (i = 0; i < audio->pcm_buf_count; i++)
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			"in[%d].size %d \n", i, audio->in[i].used);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		audio->pcm_feedback = NON_TUNNEL_MODE_PLAYBACK;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		audio->pcm_feedback = TUNNEL_MODE_PLAYBACK;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	decid = audpp_adec_alloc(dec_attrb, &audio->module_name,
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			&audio->queue_id);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	audio->dec_id = decid & MSM_AUD_DECODER_MASK;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	audio->client = client;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	audio->output_buff_handle = handle;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	audio->phys = (int32_t)addr;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	audio->map_v_write = ion_map_kernel(client, handle);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	if (IS_ERR(audio->map_v_write)) {
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			audio->data = audio->map_v_write;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:		audio->phys, (int)audio->data);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	audio->out_dma_sz = mem_sz;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	rc = msm_adsp_get(audio->module_name, &audio->audplay,
arch/arm/mach-msm/qdsp5v2/audio_wma.c:				audio->module_name, (int)audio);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	mutex_init(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	mutex_init(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	mutex_init(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	mutex_init(&audio->get_event_lock);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	spin_lock_init(&audio->dsp_lock);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	init_waitqueue_head(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	init_waitqueue_head(&audio->read_wait);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	INIT_LIST_HEAD(&audio->free_event_queue);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	INIT_LIST_HEAD(&audio->event_queue);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	init_waitqueue_head(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	init_waitqueue_head(&audio->event_wait);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	spin_lock_init(&audio->event_queue_lock);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	init_waitqueue_head(&audio->avsync_wait);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	audio->out[0].data = audio->data + 0;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	audio->out[0].addr = audio->phys + 0;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	audio->out[0].size = audio->out_dma_sz >> 1;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	audio->out[1].data = audio->data + audio->out[0].size;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	audio->out[1].addr = audio->phys + audio->out[0].size;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	audio->out[1].size = audio->out[0].size;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	audio->wma_config.armdatareqthr =  1262;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	audio->wma_config.channelsdecoded = 2;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	audio->wma_config.wmabytespersec = 6003;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	audio->wma_config.wmasamplingfreq = 44100;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	audio->wma_config.wmaencoderopts = 31;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	audio->out_sample_rate = 44100;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	audio->out_channel_mode = AUDPP_CMD_PCM_INTF_STEREO_V;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	audio->vol_pan.volume = 0x2000;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	audio->opened = 1;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	audio->device_events = AUDDEV_EVT_DEV_RDY
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	rc = auddev_register_evt_listner(audio->device_events,
arch/arm/mach-msm/qdsp5v2/audio_wma.c:					audio->dec_id,
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	snprintf(name, sizeof name, "msm_wma_%04x", audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	audio->dentry = debugfs_create_file(name, S_IFREG | S_IRUGO,
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	if (IS_ERR(audio->dentry))
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	audio->suspend_ctl.node.level = EARLY_SUSPEND_LEVEL_DISABLE_FB;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	audio->suspend_ctl.node.resume = audwma_resume;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	audio->suspend_ctl.node.suspend = audwma_suspend;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	audio->suspend_ctl.audio = audio;
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	register_early_suspend(&audio->suspend_ctl.node);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:			list_add_tail(&e_node->list, &audio->free_event_queue);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	msm_adsp_put(audio->audplay);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	ion_unmap_kernel(client, audio->output_buff_handle);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	ion_free(client, audio->output_buff_handle);
arch/arm/mach-msm/qdsp5v2/audio_wma.c:	audpp_adec_free(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	msm_adsp_write(audio->audrec, ((audio->queue_ids & 0xFFFF0000) >> 16),\
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	msm_adsp_write(audio->audrec, (audio->queue_ids & 0x0000FFFF),\
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		spin_lock_irqsave(&audio->dev_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		audio->dev_cnt++;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		if (!audio->in_call)
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:			audio->source |= (0x1 << evt_payload->routing_id);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		spin_unlock_irqrestore(&audio->dev_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		if ((audio->running == 1) && (audio->enabled == 1))
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		spin_lock_irqsave(&audio->dev_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		audio->dev_cnt--;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		if (!audio->in_call)
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:			audio->source &= ~(0x1 << evt_payload->routing_id);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		spin_unlock_irqrestore(&audio->dev_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		if ((!audio->running) || (!audio->enabled))
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		if (audio->source)
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		audio->voice_state = evt_payload->voice_state;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		if (audio->in_call && audio->running) {
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:			if (audio->voice_state == VOICE_STATE_INCALL)
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:			else if (audio->voice_state == VOICE_STATE_OFFCALL) {
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:				wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		wake_up(&audio->wait_enable);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:			audio->running = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		wake_up(&audio->wait_enable);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		audio->running = 1;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		if ((!audio->in_call && (audio->dev_cnt > 0)) ||
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:			(audio->in_call &&
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:				(audio->voice_state == VOICE_STATE_INCALL)))
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		audio->stopped = 1;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	index = audio->in_head;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	frame = (void *) (((char *)audio->in[index].data) - \
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	audio->in[index].size = frame->frame_length;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	atomic_add(audio->in[index].size, &audio->in_bytes);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	atomic_add(1, &audio->in_samples);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	audio->in_head = (audio->in_head + 1) & (FRAME_NUM - 1);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	if (audio->in_head == audio->in_tail)
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		audio->in_tail = (audio->in_tail + 1) & (FRAME_NUM - 1);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		audio->in_count++;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	audamrnb_dsp_read_buffer(audio, audio->dsp_cnt++);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	if (audio->build_id[17] == '1') {
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	cmd.stream_id = audio->enc_id;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		cmd.audrec_enc_type = audio->enc_type | ENCODE_ENABLE;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	cmd.common.stream_id = audio->enc_id;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	cmd.dtx_mode = audio->dtx_mode;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	cmd.used_mode = audio->used_mode;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:/* To Do: msm_snddev_route_enc(audio->enc_id); */
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	cmd.stream_id = audio->enc_id;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	cmd.source_mix_mask = audio->source;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	if (audio->enc_id == 2) {
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	uint16_t *data = (void *) audio->data;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	cmd.audrec_ext_pkt_start_addr_msw = audio->phys >> 16;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	cmd.audrec_ext_pkt_start_addr_lsw = audio->phys;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		audio->in[n].data = data + 4;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		MM_DBG("0x%8x\n", (int)(audio->in[n].data - 8));
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:/* must be called with audio->lock held */
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	if (audio->enabled)
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	if (audpreproc_enable(audio->enc_id, &audpreproc_dsp_event, audio)) {
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	if (msm_adsp_enable(audio->audrec)) {
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		audpreproc_disable(audio->enc_id, audio);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	audio->enabled = 1;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:/* must be called with audio->lock held */
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	if (audio->enabled) {
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		audio->enabled = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		wait_event_interruptible_timeout(audio->wait_enable,
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:				audio->running == 0, 1*HZ);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		msm_adsp_disable(audio->audrec);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		audpreproc_disable(audio->enc_id, audio);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	audio->dsp_cnt = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	audio->in_head = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	audio->in_tail = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	audio->in_count = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		audio->in[i].size = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		audio->in[i].read = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	MM_DBG("in_bytes %d\n", atomic_read(&audio->in_bytes));
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	MM_DBG("in_samples %d\n", atomic_read(&audio->in_samples));
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	atomic_set(&audio->in_bytes, 0);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	atomic_set(&audio->in_samples, 0);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		stats.byte_count = atomic_read(&audio->in_bytes);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		stats.sample_count = atomic_read(&audio->in_samples);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		if (audio->in_call && (audio->voice_state !=
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		rc = msm_snddev_request_freq(&freq, audio->enc_id,
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:			msm_snddev_withdraw_freq(audio->enc_id,
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		audio->session_info.session_id = audio->enc_id;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		audio->session_info.sampling_freq = 8000;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		audpreproc_update_audrec_info(&audio->session_info);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:			wait_event_interruptible_timeout(audio->wait_enable,
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:				audio->running != 0, 1*HZ);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:			MM_DBG("state %d rc = %d\n", audio->running, rc);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:			if (audio->running == 0)
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		audio->stopped = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		audio->session_info.sampling_freq = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		audpreproc_update_audrec_info(&audio->session_info);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		rc = msm_snddev_withdraw_freq(audio->enc_id,
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		audio->stopped = 1;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		if (audio->stopped) {
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:			 * While audio->stopped read threads will always
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:			wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:			mutex_lock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:			mutex_unlock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:			audio->buffer_size = cfg.buffer_size;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		cfg.buffer_size = audio->buffer_size;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		cfg.dtx_enable = ((audio->dtx_mode == -1) ? 1 : 0);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		cfg.band_mode = audio->used_mode;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		cfg.frame_format = audio->frame_format;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		if (audio->frame_format != cfg.frame_format) {
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:			audio->dtx_mode = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:			audio->dtx_mode = -1;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		audio->used_mode = cfg.band_mode;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:			spin_lock_irqsave(&audio->dev_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:				audio->source = VOICE_UL_SOURCE_MIX_MASK;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:				audio->source = VOICE_DL_SOURCE_MIX_MASK;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:				audio->source = VOICE_DL_SOURCE_MIX_MASK |
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:			audio->in_call = 1;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:			spin_unlock_irqrestore(&audio->dev_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		if (copy_to_user((void *) arg, &audio->enc_id,
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	mutex_lock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:			audio->wait, (audio->in_count > 0) || audio->stopped
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:			|| (audio->in_call && audio->running &&
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:				(audio->voice_state == VOICE_STATE_OFFCALL)));
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		if (!audio->in_count) {
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:			if (audio->stopped)  {
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:			} else if (audio->in_call && audio->running &&
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:				(audio->voice_state == VOICE_STATE_OFFCALL)) {
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		index = audio->in_tail;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		data = (uint8_t *) audio->in[index].data;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		size = audio->in[index].size;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:			spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:			if (index != audio->in_tail) {
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:				spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:			audio->in[index].size = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:			audio->in_tail = (audio->in_tail + 1) & (FRAME_NUM - 1);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:			audio->in_count--;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:			spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	mutex_unlock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	audio->in_call = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	msm_snddev_withdraw_freq(audio->enc_id, SNDDEV_CAP_TX,
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	auddev_unregister_evt_listner(AUDDEV_CLNT_ENC, audio->enc_id);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	audio->session_info.sampling_freq = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	audpreproc_update_audrec_info(&audio->session_info);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	msm_adsp_put(audio->audrec);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	audpreproc_aenc_free(audio->enc_id);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	audio->audrec = NULL;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	audio->opened = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	if (audio->data) {
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		ion_unmap_kernel(audio->client, audio->buff_handle);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		ion_free(audio->client, audio->buff_handle);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		ion_client_destroy(audio->client);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		audio->data = NULL;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	if (audio->opened) {
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	audio->client = client;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	audio->buff_handle = handle;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	audio->phys = (int32_t)addr;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	audio->map_v_read = ion_map_kernel(client, handle);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	if (IS_ERR(audio->map_v_read)) {
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	audio->data = audio->map_v_read;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		audio->phys, (int)audio->data);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		(int) audio->data, (int) audio->phys);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		audio->mode = MSM_AUD_ENC_MODE_TUNNEL;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	audio->buffer_size = (FRAME_SIZE - 8);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	audio->enc_type = ENC_TYPE_AMRNB | audio->mode;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	audio->dtx_mode = -1;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	audio->frame_format = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	audio->used_mode = 7; /* Bit Rate 12.2 kbps MR122 */
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	encid = audpreproc_aenc_alloc(audio->enc_type, &audio->module_name,
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:			&audio->queue_ids);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	audio->enc_id = encid;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	rc = msm_adsp_get(audio->module_name, &audio->audrec,
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:		audpreproc_aenc_free(audio->enc_id);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	audio->stopped = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	audio->source = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	audio->device_events = AUDDEV_EVT_DEV_RDY | AUDDEV_EVT_DEV_RLS |
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	audio->voice_state = msm_get_voice_state();
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	rc = auddev_register_evt_listner(audio->device_events,
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:					AUDDEV_CLNT_ENC, audio->enc_id,
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	audio->build_id = socinfo_get_build_id();
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	MM_DBG("Modem build id = %s\n", audio->build_id);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	audio->opened = 1;
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	msm_adsp_put(audio->audrec);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	audpreproc_aenc_free(audio->enc_id);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	ion_unmap_kernel(client, audio->buff_handle);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	ion_free(client, audio->buff_handle);
arch/arm/mach-msm/qdsp5v2/audio_amrnb_in.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			!(audio->source & AUDPP_MIXER_3)) {
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			audio->source |= AUDPP_MIXER_HLB;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			audio->source |= (0x1 << evt_payload->routing_id);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			audio->running, audio->enabled, audio->source);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		if (audio->running == 1 && audio->enabled == 1) {
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			audpp_route_stream(audio->dec_id, audio->source);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			if (audio->source & AUDPP_MIXER_HLB) {
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:					&audio->vol_pan,
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:					audio->vol_pan.volume = 0x2000;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:						audio->dec_id,
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:						&audio->vol_pan, POPP);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			} else if (audio->source & AUDPP_MIXER_NONHLB)
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:					audio->dec_id, &audio->vol_pan, POPP);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			if (audio->device_switch == DEVICE_SWITCH_STATE_READY) {
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:				audio->wflush = 1;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:				audio->device_switch =
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:				audpp_flush(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:				if (wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:							 !audio->wflush) < 0)
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:				if (audio->wflush == 0) {
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:					if (audio->drv_status &
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:						if (audpp_pause(audio->dec_id,
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		if ((audio->running == 1) && (audio->enabled == 1) &&
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			!(audio->source & AUDPP_MIXER_3)) {
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			if (audio->device_switch == DEVICE_SWITCH_STATE_NONE) {
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:				if (!(audio->drv_status & ADRV_STATUS_PAUSE)) {
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:					if (audpp_pause(audio->dec_id, 1))
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:				audio->device_switch =
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:				audio->avsync_flag = 0;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:				if (audpp_query_avsync(audio->dec_id) < 0)
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:					(audio->avsync_wait, audio->avsync_flag,
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:				if (audio->avsync_flag == 1) {
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:					if (audio->device_switch ==
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:						audio->device_switch =
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			!(audio->source & AUDPP_MIXER_3))
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			audio->source &= ~AUDPP_MIXER_HLB;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			audio->source &= ~(0x1 << evt_payload->routing_id);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			audio->running, audio->enabled, audio->source);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		if (audio->running == 1 && audio->enabled == 1)
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			audpp_route_stream(audio->dec_id, audio->source);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		audio->vol_pan.volume = evt_payload->session_vol;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			audio->vol_pan.volume, audio->running,
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			audio->enabled, audio->source);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		if (audio->running == 1 && audio->enabled == 1) {
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			if (audio->source & AUDPP_MIXER_HLB)
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:					&audio->vol_pan, COPP);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			else if (audio->source & AUDPP_MIXER_NONHLB)
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:					audio->dec_id, &audio->vol_pan, POPP);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:/* must be called with audio->lock held */
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	if (audio->enabled)
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	audio->dec_state = MSM_AUD_DECODER_STATE_NONE;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	if (msm_adsp_enable(audio->audplay)) {
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	if (audpp_enable(audio->dec_id, audio_dsp_event, audio)) {
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		msm_adsp_disable(audio->audplay);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	audio->enabled = 1;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:/* must be called with audio->lock held */
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	if (audio->enabled) {
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		audio->enabled = 0;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		audio->dec_state = MSM_AUD_DECODER_STATE_NONE;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		rc = wait_event_interruptible_timeout(audio->wait,
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:				audio->dec_state != MSM_AUD_DECODER_STATE_NONE,
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		else if (audio->dec_state != MSM_AUD_DECODER_STATE_CLOSE)
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		msm_adsp_disable(audio->audplay);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		audpp_disable(audio->dec_id, audio);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:					audio->dec_state =
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:					wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:					audio->dec_state =
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:					wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:				audio->codec_ops.adec_params(audio);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:				audpp_route_stream(audio->dec_id,
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:						audio->source);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:				audio->dec_state =
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:				wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:				audio->teos = 1;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:				wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			audio->running = 1;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			MM_DBG("source = 0x%x\n", audio->source);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			if (audio->source & AUDPP_MIXER_HLB)
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:					&audio->vol_pan,
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			else if (audio->source & AUDPP_MIXER_NONHLB)
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:					audio->dec_id, &audio->vol_pan,
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			audpp_dsp_set_eq(audio->dec_id, audio->eq_enable,
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:					&audio->eq, POPP);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			audio->running = 0;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		audio->codec_ops.adec_params(audio);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		audio->wflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		memcpy(&audio->avsync[0], msg, sizeof(audio->avsync));
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		audio->avsync_flag = 1;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		wake_up(&audio->avsync_wait);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	msm_adsp_write(audio->audplay, audio->queue_id, \
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			audlpa_decs[audio->minor_no].dec_attrb;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	cfg_dec_cmd.stream_id = audio->dec_id;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	temp = audio->bytecount_head;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	if (audio->device_switch == DEVICE_SWITCH_STATE_NONE) {
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		list_for_each_entry(next_buf, &audio->out_queue, list) {
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			if (temp == audio->bytecount_given) {
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			cmd.decoder_id = audio->dec_id;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			audio->bytecount_given += next_buf->buf.data_len;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			audio->drv_status |= ADRV_STATUS_OBUF_GIVEN;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	} else if (audio->device_switch == DEVICE_SWITCH_STATE_COMPLETE) {
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		audio->device_switch = DEVICE_SWITCH_STATE_NONE;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		next_buf = list_first_entry(&audio->out_queue,
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			cmd.decoder_id = audio->dec_id;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			temp = audio->bytecount_head +
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:				audio->bytecount_consumed;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			if (audpp_restore_avsync(audio->dec_id,
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:						&audio->avsync[0]))
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:				audio->bytecount_given =
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:					audio->bytecount_consumed + temp;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:				audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:				audio->drv_status |= ADRV_STATUS_OBUF_GIVEN;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:				audio->bytecount_given = audio->bytecount_head +
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:				audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:				audio->drv_status |= ADRV_STATUS_OBUF_GIVEN;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	if (!audio->running)
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	if (needed && !audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		audio->out_needed = 1;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		if (audio->drv_status & ADRV_STATUS_OBUF_GIVEN) {
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:				audio->bytecount_consumed =
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			if ((audio->device_switch ==
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:				(audio->avsync_flag == 1)) {
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:				audio->avsync_flag = 0;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:				audio->bytecount_consumed =
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:					CALCULATE_AVSYNC(audio->avsync);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			BUG_ON(list_empty(&audio->out_queue));
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			temp = audio->bytecount_head;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			used_buf = list_first_entry(&audio->out_queue,
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			if (audio->device_switch !=
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:				audio->bytecount_head +=
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:				temp = audio->bytecount_head;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:				audio->drv_status &= ~ADRV_STATUS_OBUF_GIVEN;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	if (audio->out_needed) {
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		if (!list_empty(&audio->out_queue))
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	list_for_each_safe(ptr, next, &audio->out_queue) {
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	audio->drv_status &= ~ADRV_STATUS_OBUF_GIVEN;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	audio->bytecount_consumed = 0;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	audio->bytecount_head = 0;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	audio->bytecount_given = 0;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	audio->device_switch = DEVICE_SWITCH_STATE_NONE;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	atomic_set(&audio->out_bytes, 0);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	if (audio->drv_status & ADRV_STATUS_FSYNC) {
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		audio->avsync_flag = 1;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		wake_up(&audio->avsync_wait);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	spin_lock_irqsave(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	empty = !list_empty(&audio->event_queue);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	spin_unlock_irqrestore(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	return empty || audio->event_abort;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	spin_lock_irqsave(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	list_for_each_safe(ptr, next, &audio->event_queue) {
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		drv_evt = list_first_entry(&audio->event_queue,
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	list_for_each_safe(ptr, next, &audio->free_event_queue) {
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		drv_evt = list_first_entry(&audio->free_event_queue,
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	spin_unlock_irqrestore(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			audio->event_wait, audlpa_events_pending(audio),
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			audio->event_wait, audlpa_events_pending(audio));
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	if (audio->event_abort) {
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		audio->event_abort = 0;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	spin_lock_irqsave(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	if (!list_empty(&audio->event_queue)) {
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		drv_evt = list_first_entry(&audio->event_queue,
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		list_add_tail(&drv_evt->list, &audio->free_event_queue);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	spin_unlock_irqrestore(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	list_for_each_entry(region_elt, &audio->ion_region_queue, list) {
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	handle = ion_import_dma_buf(audio->client, info->fd);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	rc = ion_handle_get_flags(audio->client, handle, &ionflag);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	kvaddr = (unsigned long)ion_map_kernel(audio->client, handle);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	rc = ion_phys(audio->client, handle, &paddr, &len);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	list_add_tail(&region->list, &audio->ion_region_queue);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	ion_unmap_kernel(audio->client, handle);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	ion_free(audio->client, handle);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	list_for_each_safe(ptr, next, &audio->ion_region_queue) {
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			ion_unmap_kernel(audio->client, region->handle);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			ion_free(audio->client, region->handle);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	list_for_each_entry(region_elt, &audio->ion_region_queue, list) {
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		list_for_each_entry(region_elt, &audio->ion_region_queue,
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		list_add_tail(&buf_node->list, &audio->out_queue);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	if (audio->eq_enable == enable && !audio->eq_needs_commit)
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	audio->eq_enable = enable;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	if (audio->running) {
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		audpp_dsp_set_eq(audio->dec_id, enable, &audio->eq, POPP);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		audio->eq_needs_commit = 0;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	if (audio->dec_id == audio->avsync[0] && audio->avsync_flag) {
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		stats->sample_count = (audio->avsync[2] << 16) |
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:						(audio->avsync[3]);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		stats->byte_count = (audio->avsync[5] << 16) |
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:						(audio->avsync[6]);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		audio->avsync_flag = 0;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		audio->avsync_flag = 0;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		if (audpp_query_avsync(audio->dec_id) < 0)
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		rc = wait_event_interruptible_timeout(audio->avsync_wait,
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:				(audio->avsync_flag == 1),
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		else if ((rc > 0) || ((rc == 0) && (audio->avsync_flag == 1))) {
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		audio->vol_pan.volume = arg;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		if (audio->running)
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:						&audio->vol_pan,
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		audio->vol_pan.pan = arg;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		if (audio->running)
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:						&audio->vol_pan,
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		prev_state = audio->eq_enable;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		audio->eq_enable = 0;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		if (copy_from_user(&audio->eq.num_bands, (void *) arg,
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:				sizeof(audio->eq) -
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		audio->eq_enable = prev_state;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		audio->eq_needs_commit = 1;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		if (mutex_trylock(&audio->get_event_lock)) {
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			mutex_unlock(&audio->get_event_lock);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		audio->event_abort = 1;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		wake_up(&audio->event_wait);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			rc = wait_event_interruptible_timeout(audio->wait,
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:				audio->dec_state != MSM_AUD_DECODER_STATE_NONE,
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			MM_DBG("dec_state %d rc = %d\n", audio->dec_state, rc);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			if (audio->dec_state != MSM_AUD_DECODER_STATE_SUCCESS)
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		audio->stopped = 1;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		audio->stopped = 0;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		audio->drv_status &= ~ADRV_STATUS_PAUSE;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		audio->wflush = 1;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		if (audio->running) {
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			if (!(audio->drv_status & ADRV_STATUS_PAUSE)) {
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:				rc = audpp_pause(audio->dec_id, (int) arg);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			audpp_flush(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:				!audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			audio->wflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		audio->out_sample_rate = config.sample_rate;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		audio->out_channel_mode = config.channel_count;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		audio->out_bits = config.bits;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		audio->buffer_count = config.buffer_count;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		audio->buffer_size = config.buffer_size;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		config.buffer_count = audio->buffer_count;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		config.buffer_size = audio->buffer_size;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		config.sample_rate = audio->out_sample_rate;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		if (audio->out_channel_mode == AUDPP_CMD_PCM_INTF_MONO_V)
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		if (audio->out_bits == AUDPP_CMD_WAV_PCM_WIDTH_8)
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		else if (audio->out_bits == AUDPP_CMD_WAV_PCM_WIDTH_24)
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		rc = audpp_pause(audio->dec_id, (int) arg);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			audio->drv_status |= ADRV_STATUS_PAUSE;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			audio->drv_status &= ~ADRV_STATUS_PAUSE;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		if (audio->drv_status & ADRV_STATUS_FSYNC)
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		if (copy_to_user((void *) arg, &audio->dec_id,
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		rc = audio->codec_ops.ioctl(file, cmd, arg);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	audio->drv_status |= ADRV_STATUS_FSYNC;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	audio->teos = 0;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	empty = list_empty(&audio->out_queue);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	list_add_tail(&buf_node->list, &audio->out_queue);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	if ((empty != 0) && (audio->out_needed == 1))
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:				  audio->teos || audio->wflush ||
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:				  audio->stopped);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	if (audio->teos == 1) {
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		audio->teos = 0;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	if (audio->stopped || audio->wflush)
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	audio->drv_status &= ~ADRV_STATUS_FSYNC;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	if (!audio->running)
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	list_for_each_safe(ptr, next, &audio->ion_region_queue) {
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		ion_unmap_kernel(audio->client, region->handle);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		ion_free(audio->client, region->handle);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	auddev_unregister_evt_listner(AUDDEV_CLNT_DEC, audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	msm_adsp_put(audio->audplay);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	audpp_adec_free(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	unregister_early_suspend(&audio->suspend_ctl.node);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	audio->opened = 0;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	audio->event_abort = 1;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	wake_up(&audio->event_wait);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	if (audio->dentry)
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		debugfs_remove(audio->dentry);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	ion_client_destroy(audio->client);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	spin_lock_irqsave(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	if (!list_empty(&audio->free_event_queue)) {
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		e_node = list_first_entry(&audio->free_event_queue,
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	list_add_tail(&e_node->list, &audio->event_queue);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	spin_unlock_irqrestore(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	wake_up(&audio->event_wait);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	n = scnprintf(buffer, debug_bufmax, "opened %d\n", audio->opened);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:					"enabled %d\n", audio->enabled);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:					"stopped %d\n", audio->stopped);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:					"volume %x\n", audio->vol_pan.volume);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:					audio->out_sample_rate);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:					audio->out_channel_mode);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:					"wflush %d\n", audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:					"running %d\n", audio->running);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:					"dec state %d\n", audio->dec_state);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:					"out_needed %d\n", audio->out_needed);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	audio->minor_no = iminor(inode);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	dec_attrb |= audlpa_decs[audio->minor_no].dec_attrb;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	audio->codec_ops.ioctl = audlpa_decs[audio->minor_no].ioctl;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	audio->codec_ops.adec_params = audlpa_decs[audio->minor_no].adec_params;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	audio->buffer_size = BUFSZ;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	audio->buffer_count = MAX_BUF;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	decid = audpp_adec_alloc(dec_attrb, &audio->module_name,
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			&audio->queue_id);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	audio->dec_id = decid & MSM_AUD_DECODER_MASK;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	audio->drv_status |= ADRV_STATUS_AIO_INTF;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	rc = msm_adsp_get(audio->module_name, &audio->audplay,
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:		MM_ERR("failed to get %s module\n", audio->module_name);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	mutex_init(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	mutex_init(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	mutex_init(&audio->get_event_lock);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	spin_lock_init(&audio->dsp_lock);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	init_waitqueue_head(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	INIT_LIST_HEAD(&audio->out_queue);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	INIT_LIST_HEAD(&audio->ion_region_queue);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	INIT_LIST_HEAD(&audio->free_event_queue);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	INIT_LIST_HEAD(&audio->event_queue);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	init_waitqueue_head(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	init_waitqueue_head(&audio->event_wait);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	spin_lock_init(&audio->event_queue_lock);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	init_waitqueue_head(&audio->avsync_wait);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	audio->out_sample_rate = 44100;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	audio->out_channel_mode = AUDPP_CMD_PCM_INTF_STEREO_V;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	audio->out_bits = AUDPP_CMD_WAV_PCM_WIDTH_16;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	audio->vol_pan.volume = 0x2000;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	audio->opened = 1;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	audio->device_events = AUDDEV_EVT_DEV_RDY
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	audio->device_switch = DEVICE_SWITCH_STATE_NONE;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	audio->drv_status &= ~ADRV_STATUS_PAUSE;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	audio->bytecount_consumed = 0;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	audio->bytecount_head = 0;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	audio->bytecount_given = 0;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	rc = auddev_register_evt_listner(audio->device_events,
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:					audio->dec_id,
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	snprintf(name, sizeof name, "msm_lpa_%04x", audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	audio->dentry = debugfs_create_file(name, S_IFREG | S_IRUGO,
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	if (IS_ERR(audio->dentry))
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	audio->suspend_ctl.node.level = EARLY_SUSPEND_LEVEL_DISABLE_FB;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	audio->suspend_ctl.node.resume = audlpa_resume;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	audio->suspend_ctl.node.suspend = audlpa_suspend;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	audio->suspend_ctl.audio = audio;
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	register_early_suspend(&audio->suspend_ctl.node);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:			list_add_tail(&e_node->list, &audio->free_event_queue);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	audio->client = msm_ion_client_create(UINT_MAX, "Audio_LPA_Client");
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	if (IS_ERR_OR_NULL(audio->client)) {
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	msm_adsp_put(audio->audplay);
arch/arm/mach-msm/qdsp5v2/audio_lpa.c:	audpp_adec_free(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	msm_adsp_write(audio->audrec, ((audio->queue_ids & 0xFFFF0000) >> 16),\
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	msm_adsp_write(audio->audrec, (audio->queue_ids & 0x0000FFFF),\
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		spin_lock_irqsave(&audio->dev_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		audio->dev_cnt++;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		if (!audio->in_call)
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:			audio->source |= (0x1 << evt_payload->routing_id);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		spin_unlock_irqrestore(&audio->dev_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		if ((audio->running == 1) && (audio->enabled == 1) &&
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:			(audio->mode == MSM_AUD_ENC_MODE_TUNNEL))
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		spin_lock_irqsave(&audio->dev_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		audio->dev_cnt--;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		if (!audio->in_call)
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:			audio->source &= ~(0x1 << evt_payload->routing_id);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		spin_unlock_irqrestore(&audio->dev_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		if ((!audio->running) || (!audio->enabled))
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		if (audio->mode == MSM_AUD_ENC_MODE_TUNNEL) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:			if (audio->source)
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		audio->voice_state = evt_payload->voice_state;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		if (audio->in_call && audio->running &&
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		   (audio->mode == MSM_AUD_ENC_MODE_TUNNEL)) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:			if (audio->voice_state == VOICE_STATE_INCALL)
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:			else if (audio->voice_state == VOICE_STATE_OFFCALL) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:				wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		wake_up(&audio->wait_enable);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:			if(audio->mode == MSM_AUD_ENC_MODE_NONTUNNEL) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:			audio->running = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:			if (audio->mode == MSM_AUD_ENC_MODE_TUNNEL)
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:				wake_up(&audio->wait_enable);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		if (audio->mode == MSM_AUD_ENC_MODE_TUNNEL)
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:			audio->running = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		wake_up(&audio->wait_enable);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		audio->running = 1;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		if (audio->mode == MSM_AUD_ENC_MODE_TUNNEL) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:			if ((!audio->in_call && (audio->dev_cnt > 0)) ||
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:				(audio->in_call &&
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:					(audio->voice_state \
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:			wake_up(&audio->wait_enable);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		audio->stopped = 1;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		if (audio->mode == MSM_AUD_ENC_MODE_NONTUNNEL)
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:			wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		audio->wflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		audio->rflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		audio->flush_ack = 1;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	MM_DBG("head = %d\n", audio->in_head);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	index = audio->in_head;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	frame = (void *) (((char *)audio->in[index].data) - \
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->in[index].size = frame->frame_length;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	atomic_add(audio->in[index].size, &audio->in_bytes);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	atomic_add(1, &audio->in_samples);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->in_head = (audio->in_head + 1) & (FRAME_NUM - 1);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	if (audio->in_head == audio->in_tail) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		audio->in_tail = (audio->in_tail + 1) & (FRAME_NUM - 1);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		MM_ERR("in_count = %d\n", audio->in_count);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		audio->in_count++;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audqcelp_dsp_read_buffer(audio, audio->dsp_cnt++);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	MM_DBG("head = %d\n", audio->in_head);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	index = audio->in_head;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	nt_frame = (void *) (((char *)audio->in[index].data) - \
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->in[index].size = nt_frame->frame_length;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	atomic_add(audio->in[index].size, &audio->in_bytes);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	atomic_add(1, &audio->in_samples);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->in_head = (audio->in_head + 1) & (FRAME_NUM - 1);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	if (audio->in_head == audio->in_tail)
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		audio->in_count++;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		cmd.buf_address_length[0] = (audio->out[idx].addr &
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		cmd.buf_address_length[1] = (audio->out[idx].addr &
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->out_frame_cnt++;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	cmd.sampling_freq = audio->samp_rate;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	if (!audio->channel_mode)
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	cmd.stream_id = audio->enc_id;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	if (audio->mode == MSM_ADSP_ENC_MODE_NON_TUNNEL)
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	if (audio->build_id[17] == '1') {
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	cmd.stream_id = audio->enc_id;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		cmd.audrec_enc_type = audio->enc_type | ENCODE_ENABLE;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	cmd.common.stream_id = audio->enc_id;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	cmd.enc_min_rate = audio->cfg.min_bit_rate;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	cmd.enc_max_rate = audio->cfg.max_bit_rate;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:/* To Do: msm_snddev_route_enc(audio->enc_id); */
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	cmd.stream_id = audio->enc_id;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	cmd.source_mix_mask = audio->source;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	if (audio->enc_id == 2) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	uint16_t *data = (void *) audio->data;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	cmd.audrec_ext_pkt_start_addr_msw = audio->phys >> 16;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	cmd.audrec_ext_pkt_start_addr_lsw = audio->phys;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	MM_DBG("audio->phys = %x\n", audio->phys);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		if (audio->mode == MSM_AUD_ENC_MODE_TUNNEL) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:			audio->in[n].data = data + 4;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:			MM_DBG("0x%8x\n", (int)(audio->in[n].data - 8));
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:			audio->in[n].data = data + 12;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:			MM_DBG("0x%8x\n", (int)(audio->in[n].data - 24));
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:/* must be called with audio->lock held */
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	if (audio->enabled)
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	if (audpreproc_enable(audio->enc_id, &audpreproc_dsp_event, audio)) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	if (msm_adsp_enable(audio->audrec)) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		audpreproc_disable(audio->enc_id, audio);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->enabled = 1;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:/* must be called with audio->lock held */
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	if (audio->enabled) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		audio->enabled = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		wait_event_interruptible_timeout(audio->wait_enable,
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:				audio->running == 0, 1*HZ);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		msm_adsp_disable(audio->audrec);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		audpreproc_disable(audio->enc_id, audio);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	mutex_lock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	mutex_unlock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->dsp_cnt = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->in_head = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->in_tail = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->in_count = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->eos_ack = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		audio->in[i].size = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		audio->in[i].read = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	MM_DBG("in_bytes %d\n", atomic_read(&audio->in_bytes));
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	MM_DBG("in_samples %d\n", atomic_read(&audio->in_samples));
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	atomic_set(&audio->in_bytes, 0);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	atomic_set(&audio->in_samples, 0);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->out_head = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->out_tail = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->out_count = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		audio->out[i].size = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		audio->out[i].read = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		audio->out[i].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		stats.byte_count = atomic_read(&audio->in_bytes);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		stats.sample_count = atomic_read(&audio->in_samples);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		if (audio->in_call && (audio->voice_state !=
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		rc = msm_snddev_request_freq(&freq, audio->enc_id,
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:			msm_snddev_withdraw_freq(audio->enc_id,
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		audio->session_info.session_id = audio->enc_id;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		audio->session_info.sampling_freq = audio->samp_rate;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		audpreproc_update_audrec_info(&audio->session_info);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:			wait_event_interruptible_timeout(audio->wait_enable,
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:				audio->running != 0, 1*HZ);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:			MM_DBG("state %d rc = %d\n", audio->running, rc);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:			if (audio->running == 0)
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		audio->stopped = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		audio->session_info.sampling_freq = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		audpreproc_update_audrec_info(&audio->session_info);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		rc = msm_snddev_withdraw_freq(audio->enc_id,
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		audio->stopped = 1;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		audio->rflush = 1;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		audio->wflush = 1;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		if (audio->running) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:			rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:				!audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:			audio->rflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:			audio->wflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		if (audio->mode == MSM_AUD_ENC_MODE_TUNNEL) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		audio->buffer_size = cfg.buffer_size;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		cfg.buffer_size = audio->buffer_size;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		if (copy_to_user((void *) arg, &audio->cfg, sizeof(audio->cfg)))
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		memcpy(&audio->cfg, &cfg, sizeof(cfg));
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		cfg.sample_rate = audio->samp_rate;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		cfg.channel_count = audio->channel_mode;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		if (audio->mode == MSM_AUD_ENC_MODE_TUNNEL) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:				spin_lock_irqsave(&audio->dev_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:					audio->source = \
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:					audio->source = \
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:					audio->source = \
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:				audio->in_call = 1;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:				spin_unlock_irqrestore(&audio->dev_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		if (copy_to_user((void *) arg, &audio->enc_id,
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	mutex_lock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:			audio->wait, (audio->in_count > 0) || audio->stopped ||
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:			audio->rflush ||
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:			((audio->mode == MSM_AUD_ENC_MODE_TUNNEL) &&
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:			 audio->in_call && audio->running &&
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:			(audio->voice_state == VOICE_STATE_OFFCALL)));
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		if (audio->rflush) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		if (audio->stopped && !audio->in_count) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:			} else if ((audio->mode == MSM_AUD_ENC_MODE_TUNNEL) &&
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:					audio->in_call && audio->running &&
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:					(audio->voice_state \
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		index = audio->in_tail;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		data = (uint8_t *) audio->in[index].data;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		size = audio->in[index].size;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		if (audio->mode == MSM_AUD_ENC_MODE_NONTUNNEL) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:				audio->eos_ack = 1;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:			spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:			if (index != audio->in_tail) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:				spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:			audio->in[index].size = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:			audio->in_tail = (audio->in_tail + 1) & (FRAME_NUM - 1);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:			audio->in_count--;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:			spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:			if ((audio->mode == MSM_AUD_ENC_MODE_NONTUNNEL)) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:				if (!audio->eos_ack) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:							audio->dsp_cnt,
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:							audio->in_tail);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:							audio->dsp_cnt++);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	mutex_unlock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	if (!audio->running)
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	if (needed && !audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		audio->out_needed = 1;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		frame = audio->out + audio->out_tail;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:			MM_DBG("frame %d free\n", audio->out_tail);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:			audio->out_tail ^= 1;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:			wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	if (audio->out_needed) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		frame = audio->out + audio->out_tail;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:						 audio->out_tail,
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:			audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	if (!audio->running || (audio->mode == MSM_AUD_ENC_MODE_TUNNEL)) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:			audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	MM_DBG("waked on by some event audio->wflush = %d\n", audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	else if (audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	frame = audio->out + audio->out_head;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		(audio->out_needed &&
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		audio->out[0].used == 0 &&
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		audio->out[1].used == 0)
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		|| (audio->stopped)
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		|| (audio->wflush));
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	if (audio->stopped || audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->out_head ^= 1;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	if (audio->mode != MSM_AUD_ENC_MODE_NONTUNNEL)
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	frame = audio->out + audio->out_head;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:					|| (audio->stopped)
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:					|| (audio->wflush));
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	if (audio->stopped || audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	if (audio->mfield) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->out_head ^= 1;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	if (!audio->flush_ack)
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		audio->flush_ack = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->in_call = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	msm_snddev_withdraw_freq(audio->enc_id, SNDDEV_CAP_TX,
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	auddev_unregister_evt_listner(AUDDEV_CLNT_ENC, audio->enc_id);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->session_info.sampling_freq = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audpreproc_update_audrec_info(&audio->session_info);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	msm_adsp_put(audio->audrec);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audpreproc_aenc_free(audio->enc_id);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->audrec = NULL;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->opened = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	if (audio->data) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		ion_unmap_kernel(audio->client, audio->input_buff_handle);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		ion_free(audio->client, audio->input_buff_handle);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		audio->data = NULL;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	if (audio->out_data) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		ion_unmap_kernel(audio->client, audio->output_buff_handle);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		ion_free(audio->client, audio->output_buff_handle);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		audio->out_data = NULL;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	ion_client_destroy(audio->client);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	if (audio->opened) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->client = client;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->output_buff_handle = handle;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->phys = (int32_t)addr;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->map_v_read = ion_map_kernel(client, handle);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	if (IS_ERR(audio->map_v_read)) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->data = audio->map_v_read;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		(int) audio->data, (int) audio->phys);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		audio->mode = MSM_AUD_ENC_MODE_NONTUNNEL;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		audio->mode = MSM_AUD_ENC_MODE_TUNNEL;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	if (audio->mode == MSM_AUD_ENC_MODE_NONTUNNEL)
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:			audio->buffer_size = (QCELP_FRAME_SIZE + 14);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:			audio->buffer_size = (FRAME_SIZE - 8);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->enc_type = ENC_TYPE_V13K | audio->mode;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->samp_rate = 8000;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->channel_mode = AUDREC_CMD_MODE_MONO;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->cfg.cdma_rate = CDMA_RATE_FULL;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->cfg.min_bit_rate = CDMA_RATE_FULL;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->cfg.max_bit_rate = CDMA_RATE_FULL;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->source = INTERNAL_CODEC_TX_SOURCE_MIX_MASK;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->rec_mode = VOC_REC_UPLINK;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	encid = audpreproc_aenc_alloc(audio->enc_type, &audio->module_name,
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:			&audio->queue_ids);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->enc_id = encid;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	rc = msm_adsp_get(audio->module_name, &audio->audrec,
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		audpreproc_aenc_free(audio->enc_id);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->stopped = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->source = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->wflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->rflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->flush_ack = 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->input_buff_handle = handle;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->out_phys = (int32_t)addr;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->map_v_write = ion_map_kernel(client,
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	if (IS_ERR(audio->map_v_write)) {
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->out_data = audio->map_v_write;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:				(unsigned int)audio->out_data);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->out[0].data = audio->out_data + 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->out[0].addr = audio->out_phys + 0;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->out[0].size = OUT_BUFFER_SIZE;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->out[1].data = audio->out_data + OUT_BUFFER_SIZE;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->out[1].addr = audio->out_phys + OUT_BUFFER_SIZE;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->out[1].size = OUT_BUFFER_SIZE;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	MM_DBG("audio->out[0].data = %d  audio->out[1].data = %d",
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:					(unsigned int)audio->out[0].data,
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:					(unsigned int)audio->out[1].data);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->device_events = AUDDEV_EVT_DEV_RDY | AUDDEV_EVT_DEV_RLS |
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->voice_state = msm_get_voice_state();
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	rc = auddev_register_evt_listner(audio->device_events,
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:					AUDDEV_CLNT_ENC, audio->enc_id,
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		iounmap(audio->map_v_write);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:		free_contiguous_memory_by_paddr(audio->out_phys);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->mfield = META_OUT_SIZE;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->opened = 1;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->out_frame_cnt++;
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audio->build_id = socinfo_get_build_id();
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	MM_DBG("Modem build id = %s\n", audio->build_id);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	msm_adsp_put(audio->audrec);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	ion_free(client, audio->input_buff_handle);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	ion_unmap_kernel(client, audio->output_buff_handle);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	audpreproc_aenc_free(audio->enc_id);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	ion_free(client, audio->output_buff_handle);
arch/arm/mach-msm/qdsp5v2/audio_qcelp_in.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/mp3_funcs.c:	cmd.common.dec_id = audio->dec_id;
arch/arm/mach-msm/qdsp5v2/mp3_funcs.c:	cmd.common.input_sampling_frequency = audio->out_sample_rate;
arch/arm/mach-msm/qdsp5v2/audio_out.c:		audio->source |= (0x1 << evt_payload->routing_id);
arch/arm/mach-msm/qdsp5v2/audio_out.c:		if (audio->running == 1 && audio->enabled == 1)
arch/arm/mach-msm/qdsp5v2/audio_out.c:			audpp_route_stream(audio->dec_id, audio->source);
arch/arm/mach-msm/qdsp5v2/audio_out.c:		audio->source &= ~(0x1 << evt_payload->routing_id);
arch/arm/mach-msm/qdsp5v2/audio_out.c:		if (audio->running == 1 && audio->enabled == 1)
arch/arm/mach-msm/qdsp5v2/audio_out.c:			audpp_route_stream(audio->dec_id, audio->source);
arch/arm/mach-msm/qdsp5v2/audio_out.c:		audio->vol_pan.volume = evt_payload->session_vol;
arch/arm/mach-msm/qdsp5v2/audio_out.c:				audio->vol_pan.volume);
arch/arm/mach-msm/qdsp5v2/audio_out.c:		if (audio->running)
arch/arm/mach-msm/qdsp5v2/audio_out.c:			audpp_dsp_set_vol_pan(audio->dec_id, &audio->vol_pan,
arch/arm/mach-msm/qdsp5v2/audio_out.c:		audio->voice_state = evt_payload->voice_state;
arch/arm/mach-msm/qdsp5v2/audio_out.c:		if (audio->running &&
arch/arm/mach-msm/qdsp5v2/audio_out.c:			(audio->source & AUDPP_MIXER_UPLINK_RX) &&
arch/arm/mach-msm/qdsp5v2/audio_out.c:			(audio->voice_state == VOICE_STATE_OFFCALL)) {
arch/arm/mach-msm/qdsp5v2/audio_out.c:					audio->voice_state, audio->source);
arch/arm/mach-msm/qdsp5v2/audio_out.c:			wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_out.c:	wake_lock(&audio->wakelock);
arch/arm/mach-msm/qdsp5v2/audio_out.c:	pm_qos_update_request(&audio->pm_qos_req,
arch/arm/mach-msm/qdsp5v2/audio_out.c:	pm_qos_update_request(&audio->pm_qos_req, PM_QOS_DEFAULT_VALUE);
arch/arm/mach-msm/qdsp5v2/audio_out.c:	wake_unlock(&audio->wakelock);
arch/arm/mach-msm/qdsp5v2/audio_out.c:/* must be called with audio->lock held */
arch/arm/mach-msm/qdsp5v2/audio_out.c:	if (audio->enabled)
arch/arm/mach-msm/qdsp5v2/audio_out.c:	if (!audio->out[0].used || !audio->out[1].used)
arch/arm/mach-msm/qdsp5v2/audio_out.c:	audio->out_tail = 0;
arch/arm/mach-msm/qdsp5v2/audio_out.c:	audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_out.c:	audio->enabled = 1;
arch/arm/mach-msm/qdsp5v2/audio_out.c:/* must be called with audio->lock held */
arch/arm/mach-msm/qdsp5v2/audio_out.c:	if (audio->enabled) {
arch/arm/mach-msm/qdsp5v2/audio_out.c:		audio->enabled = 0;
arch/arm/mach-msm/qdsp5v2/audio_out.c:		wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_out.c:		audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_out.c:		spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_out.c:		if (audio->running) {
arch/arm/mach-msm/qdsp5v2/audio_out.c:			atomic_add(audio->out[idx].used, &audio->out_bytes);
arch/arm/mach-msm/qdsp5v2/audio_out.c:			audio->out[idx].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_out.c:			frame = audio->out + audio->out_tail;
arch/arm/mach-msm/qdsp5v2/audio_out.c:				audio->teos = 0;
arch/arm/mach-msm/qdsp5v2/audio_out.c:					audio, audio->out_tail, frame->used);
arch/arm/mach-msm/qdsp5v2/audio_out.c:				audio->out_tail ^= 1;
arch/arm/mach-msm/qdsp5v2/audio_out.c:				audio->out_needed++;
arch/arm/mach-msm/qdsp5v2/audio_out.c:			wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_out.c:		spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_out.c:		audio->teos++;
arch/arm/mach-msm/qdsp5v2/audio_out.c:		MM_DBG("PCMDMAMISSED Count per Buffer %d\n", audio->teos);
arch/arm/mach-msm/qdsp5v2/audio_out.c:		wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_out.c:			audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_out.c:			audio->running = 1;
arch/arm/mach-msm/qdsp5v2/audio_out.c:			audpp_dsp_set_vol_pan(audio->dec_id, &audio->vol_pan,
arch/arm/mach-msm/qdsp5v2/audio_out.c:			audpp_route_stream(audio->dec_id, audio->source);
arch/arm/mach-msm/qdsp5v2/audio_out.c:			audio->running = 0;
arch/arm/mach-msm/qdsp5v2/audio_out.c:	cmd.stream_id	= audio->dec_id;
arch/arm/mach-msm/qdsp5v2/audio_out.c:		cmd.write_buf1LSW	= audio->out[0].addr;
arch/arm/mach-msm/qdsp5v2/audio_out.c:		cmd.write_buf1MSW	= audio->out[0].addr >> 16;
arch/arm/mach-msm/qdsp5v2/audio_out.c:		if (audio->out[0].used)
arch/arm/mach-msm/qdsp5v2/audio_out.c:			cmd.write_buf1_len	= audio->out[0].used;
arch/arm/mach-msm/qdsp5v2/audio_out.c:			cmd.write_buf1_len	= audio->out[0].size;
arch/arm/mach-msm/qdsp5v2/audio_out.c:		cmd.write_buf2LSW	= audio->out[1].addr;
arch/arm/mach-msm/qdsp5v2/audio_out.c:		cmd.write_buf2MSW	= audio->out[1].addr >> 16;
arch/arm/mach-msm/qdsp5v2/audio_out.c:		if (audio->out[1].used)
arch/arm/mach-msm/qdsp5v2/audio_out.c:			cmd.write_buf2_len	= audio->out[1].used;
arch/arm/mach-msm/qdsp5v2/audio_out.c:			cmd.write_buf2_len	= audio->out[1].size;
arch/arm/mach-msm/qdsp5v2/audio_out.c:		cmd.weight_decoder_to_rx = audio->out_weight;
arch/arm/mach-msm/qdsp5v2/audio_out.c:		cmd.sample_rate		= audio->out_sample_rate;
arch/arm/mach-msm/qdsp5v2/audio_out.c:		cmd.channel_mode	= audio->out_channel_mode;
arch/arm/mach-msm/qdsp5v2/audio_out.c:	cmd.stream_id	= audio->dec_id;
arch/arm/mach-msm/qdsp5v2/audio_out.c:	audio->out[0].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_out.c:	audio->out[1].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_out.c:	audio->out_head = 0;
arch/arm/mach-msm/qdsp5v2/audio_out.c:	audio->out_tail = 0;
arch/arm/mach-msm/qdsp5v2/audio_out.c:	audio->stopped = 0;
arch/arm/mach-msm/qdsp5v2/audio_out.c:		stats.byte_count = atomic_read(&audio->out_bytes);
arch/arm/mach-msm/qdsp5v2/audio_out.c:		spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_out.c:		audio->vol_pan.volume = arg;
arch/arm/mach-msm/qdsp5v2/audio_out.c:		if (audio->running)
arch/arm/mach-msm/qdsp5v2/audio_out.c:			audpp_dsp_set_vol_pan(audio->dec_id, &audio->vol_pan,
arch/arm/mach-msm/qdsp5v2/audio_out.c:		spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_out.c:		spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_out.c:		audio->vol_pan.pan = arg;
arch/arm/mach-msm/qdsp5v2/audio_out.c:		if (audio->running)
arch/arm/mach-msm/qdsp5v2/audio_out.c:			audpp_dsp_set_vol_pan(audio->dec_id, &audio->vol_pan,
arch/arm/mach-msm/qdsp5v2/audio_out.c:		spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_out.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_out.c:		if ((audio->voice_state != VOICE_STATE_INCALL)
arch/arm/mach-msm/qdsp5v2/audio_out.c:			&& (audio->source & AUDPP_MIXER_UPLINK_RX)) {
arch/arm/mach-msm/qdsp5v2/audio_out.c:					audio->voice_state, audio->source);
arch/arm/mach-msm/qdsp5v2/audio_out.c:		audio->stopped = 1;
arch/arm/mach-msm/qdsp5v2/audio_out.c:		if (audio->stopped) {
arch/arm/mach-msm/qdsp5v2/audio_out.c:			 * While audio->stopped write threads will always
arch/arm/mach-msm/qdsp5v2/audio_out.c:			wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_out.c:			mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_out.c:			mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_out.c:		audio->out_sample_rate = config.sample_rate;
arch/arm/mach-msm/qdsp5v2/audio_out.c:		audio->out_channel_mode = config.channel_count;
arch/arm/mach-msm/qdsp5v2/audio_out.c:		config.sample_rate = audio->out_sample_rate;
arch/arm/mach-msm/qdsp5v2/audio_out.c:		if (audio->out_channel_mode == AUDPP_CMD_PCM_INTF_MONO_V)
arch/arm/mach-msm/qdsp5v2/audio_out.c:		if (copy_to_user((void *) arg, &audio->dec_id,
arch/arm/mach-msm/qdsp5v2/audio_out.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_out.c:	if (!audio->running)
arch/arm/mach-msm/qdsp5v2/audio_out.c:	mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_out.c:	rc = wait_event_interruptible(audio->wait,
arch/arm/mach-msm/qdsp5v2/audio_out.c:		(!audio->out[0].used &&
arch/arm/mach-msm/qdsp5v2/audio_out.c:		!audio->out[1].used));
arch/arm/mach-msm/qdsp5v2/audio_out.c:	rc = wait_event_interruptible(audio->wait,
arch/arm/mach-msm/qdsp5v2/audio_out.c:		audio->teos);
arch/arm/mach-msm/qdsp5v2/audio_out.c:	mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_out.c:	if ((audio->voice_state == VOICE_STATE_OFFCALL)
arch/arm/mach-msm/qdsp5v2/audio_out.c:		&& (audio->source & AUDPP_MIXER_UPLINK_RX) &&
arch/arm/mach-msm/qdsp5v2/audio_out.c:							audio->running) {
arch/arm/mach-msm/qdsp5v2/audio_out.c:			audio->voice_state, audio->source, audio->running);
arch/arm/mach-msm/qdsp5v2/audio_out.c:	mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_out.c:		frame = audio->out + audio->out_head;
arch/arm/mach-msm/qdsp5v2/audio_out.c:		rc = wait_event_interruptible(audio->wait,
arch/arm/mach-msm/qdsp5v2/audio_out.c:		      (frame->used == 0) || (audio->stopped) ||
arch/arm/mach-msm/qdsp5v2/audio_out.c:			((audio->voice_state == VOICE_STATE_OFFCALL) &&
arch/arm/mach-msm/qdsp5v2/audio_out.c:			(audio->source & AUDPP_MIXER_UPLINK_RX)));
arch/arm/mach-msm/qdsp5v2/audio_out.c:		if (audio->stopped) {
arch/arm/mach-msm/qdsp5v2/audio_out.c:		} else if ((audio->voice_state == VOICE_STATE_OFFCALL) &&
arch/arm/mach-msm/qdsp5v2/audio_out.c:			(audio->source & AUDPP_MIXER_UPLINK_RX)) {
arch/arm/mach-msm/qdsp5v2/audio_out.c:							audio->voice_state);
arch/arm/mach-msm/qdsp5v2/audio_out.c:		audio->out_head ^= 1;
arch/arm/mach-msm/qdsp5v2/audio_out.c:		spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_out.c:		frame = audio->out + audio->out_tail;
arch/arm/mach-msm/qdsp5v2/audio_out.c:		if (frame->used && audio->out_needed) {
arch/arm/mach-msm/qdsp5v2/audio_out.c:			audio->teos = 0;
arch/arm/mach-msm/qdsp5v2/audio_out.c:			audio_dsp_send_buffer(audio, audio->out_tail,
arch/arm/mach-msm/qdsp5v2/audio_out.c:			audio->out_tail ^= 1;
arch/arm/mach-msm/qdsp5v2/audio_out.c:			audio->out_needed--;
arch/arm/mach-msm/qdsp5v2/audio_out.c:		spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_out.c:	mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_out.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_out.c:	auddev_unregister_evt_listner(AUDDEV_CLNT_DEC, audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_out.c:	audio->opened = 0;
arch/arm/mach-msm/qdsp5v2/audio_out.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_out.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_out.c:	if (audio->opened) {
arch/arm/mach-msm/qdsp5v2/audio_out.c:	audio->dec_id = HOSTPCM_STREAM_ID;
arch/arm/mach-msm/qdsp5v2/audio_out.c:	audio->out_buffer_size = BUFSZ;
arch/arm/mach-msm/qdsp5v2/audio_out.c:	audio->out_sample_rate = 48000;
arch/arm/mach-msm/qdsp5v2/audio_out.c:	audio->out_channel_mode = AUDPP_CMD_PCM_INTF_STEREO_V;
arch/arm/mach-msm/qdsp5v2/audio_out.c:	audio->out_weight = 100;
arch/arm/mach-msm/qdsp5v2/audio_out.c:	audio->out[0].data = audio->data + 0;
arch/arm/mach-msm/qdsp5v2/audio_out.c:	audio->out[0].addr = audio->phys + 0;
arch/arm/mach-msm/qdsp5v2/audio_out.c:	audio->out[0].size = BUFSZ;
arch/arm/mach-msm/qdsp5v2/audio_out.c:	audio->out[1].data = audio->data + BUFSZ;
arch/arm/mach-msm/qdsp5v2/audio_out.c:	audio->out[1].addr = audio->phys + BUFSZ;
arch/arm/mach-msm/qdsp5v2/audio_out.c:	audio->out[1].size = BUFSZ;
arch/arm/mach-msm/qdsp5v2/audio_out.c:	audio->vol_pan.volume = 0x2000;
arch/arm/mach-msm/qdsp5v2/audio_out.c:	audio->vol_pan.pan = 0x0;
arch/arm/mach-msm/qdsp5v2/audio_out.c:	audio->source = 0x0;
arch/arm/mach-msm/qdsp5v2/audio_out.c:	audio->voice_state = msm_get_voice_state();
arch/arm/mach-msm/qdsp5v2/audio_out.c:	MM_DBG("voice_state = %x\n", audio->voice_state);
arch/arm/mach-msm/qdsp5v2/audio_out.c:	audio->device_events = AUDDEV_EVT_DEV_RDY
arch/arm/mach-msm/qdsp5v2/audio_out.c:	rc = auddev_register_evt_listner(audio->device_events,
arch/arm/mach-msm/qdsp5v2/audio_out.c:					audio->dec_id,
arch/arm/mach-msm/qdsp5v2/audio_out.c:	audio->opened = 1;
arch/arm/mach-msm/qdsp5v2/audio_out.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	msm_adsp_write(audio->audrec, ((audio->queue_ids & 0xFFFF0000) >> 16),\
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	msm_adsp_write(audio->audrec, (audio->queue_ids & 0x0000FFFF),\
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		spin_lock_irqsave(&audio->dev_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		audio->dev_cnt++;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		audio->source |= (0x1 << evt_payload->routing_id);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		spin_unlock_irqrestore(&audio->dev_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		if ((audio->running == 1) && (audio->enabled == 1) &&
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:			(audio->mode == MSM_AUD_ENC_MODE_TUNNEL))
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		spin_lock_irqsave(&audio->dev_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		audio->dev_cnt--;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		audio->source &= ~(0x1 << evt_payload->routing_id);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		spin_unlock_irqrestore(&audio->dev_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		if ((!audio->running) || (!audio->enabled))
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		if (audio->mode == MSM_AUD_ENC_MODE_TUNNEL) {
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:			if (audio->source)
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		if ((audio->running == 1) && (audio->enabled == 1)) {
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:				audio->samp_rate) {
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:				if (audio->mode == MSM_AUD_ENC_MODE_TUNNEL)
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:				audio->abort = 1;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:				wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		wake_up(&audio->wait_enable);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:			if(audio->mode == MSM_AUD_ENC_MODE_NONTUNNEL) {
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:			audio->running = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:			if (audio->mode == MSM_AUD_ENC_MODE_TUNNEL)
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:				wake_up(&audio->wait_enable);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		if (audio->mode == MSM_AUD_ENC_MODE_TUNNEL)
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:			audio->running = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		wake_up(&audio->wait_enable);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		audio->running = 1;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		if (audio->mode == MSM_AUD_ENC_MODE_TUNNEL) {
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:			if (audio->dev_cnt > 0)
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:			wake_up(&audio->wait_enable);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		audio->stopped = 1;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		if (audio->mode == MSM_AUD_ENC_MODE_NONTUNNEL)
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:			wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		audio->wflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		audio->rflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		audio->flush_ack = 1;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	MM_DBG("head = %d\n", audio->in_head);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	index = audio->in_head;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	frame = (void *) (((char *)audio->in[index].data) - \
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	audio->in[index].size = frame->frame_length;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	atomic_add(audio->in[index].size, &audio->in_bytes);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	atomic_add(1, &audio->in_samples);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	audio->in_head = (audio->in_head + 1) & (FRAME_NUM - 1);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	if (audio->in_head == audio->in_tail) {
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		audio->in_tail = (audio->in_tail + 1) & (FRAME_NUM - 1);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		audio->in_count++;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	audaac_dsp_read_buffer(audio, audio->dsp_cnt++);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	MM_DBG("head = %d\n", audio->in_head);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	index = audio->in_head;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	nt_frame = (void *) (((char *)audio->in[index].data) - \
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	audio->in[index].size = nt_frame->frame_length;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	atomic_add(audio->in[index].size, &audio->in_bytes);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	atomic_add(1, &audio->in_samples);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	audio->in_head = (audio->in_head + 1) & (FRAME_NUM - 1);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	if (audio->in_head == audio->in_tail)
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		audio->in_count++;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		cmd.buf_address_length[0] = (audio->out[idx].addr &
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		cmd.buf_address_length[1] = (audio->out[idx].addr &
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	audio->out_frame_cnt++;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	cmd.sampling_freq = audio->samp_rate;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	if (!audio->channel_mode)
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	cmd.stream_id = audio->enc_id;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	if (audio->mode == MSM_ADSP_ENC_MODE_NON_TUNNEL)
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	if (audio->build_id[17] == '1') {
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	cmd.stream_id = audio->enc_id;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		cmd.audrec_enc_type = audio->enc_type | ENCODE_ENABLE;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	cmd.common.stream_id = audio->enc_id;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	cmd.aud_rec_samplerate_idx = audio->samp_rate;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	cmd.aud_rec_stereo_mode = audio->channel_mode;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	cmd.recording_quality = audio->record_quality;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:/* To Do: msm_snddev_route_enc(audio->enc_id); */
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	cmd.stream_id = audio->enc_id;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	cmd.source_mix_mask = audio->source;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	if (audio->enc_id == 2) {
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	uint16_t *data = (void *) audio->data;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	cmd.audrec_ext_pkt_start_addr_msw = audio->phys >> 16;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	cmd.audrec_ext_pkt_start_addr_lsw = audio->phys;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	MM_DBG("audio->phys = %x\n", audio->phys);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		if (audio->mode == MSM_AUD_ENC_MODE_TUNNEL) {
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:			audio->in[n].data = data + 4;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:			MM_DBG("0x%8x\n", (int)(audio->in[n].data - 8));
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:			audio->in[n].data = data + 12;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:			MM_DBG("0x%8x\n", (int)(audio->in[n].data - 24));
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:/* must be called with audio->lock held */
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	if (audio->enabled)
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	if (audpreproc_enable(audio->enc_id, &audpreproc_dsp_event, audio)) {
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	if (msm_adsp_enable(audio->audrec)) {
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		audpreproc_disable(audio->enc_id, audio);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	audio->enabled = 1;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:/* must be called with audio->lock held */
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	if (audio->enabled) {
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		audio->enabled = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		wait_event_interruptible_timeout(audio->wait_enable,
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:				audio->running == 0, 1*HZ);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		msm_adsp_disable(audio->audrec);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		audpreproc_disable(audio->enc_id, audio);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	mutex_lock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	mutex_unlock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	audio->dsp_cnt = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	audio->in_head = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	audio->in_tail = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	audio->in_count = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	audio->eos_ack = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		audio->in[i].size = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		audio->in[i].read = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	MM_DBG("in_bytes %d\n", atomic_read(&audio->in_bytes));
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	MM_DBG("in_samples %d\n", atomic_read(&audio->in_samples));
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	atomic_set(&audio->in_bytes, 0);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	atomic_set(&audio->in_samples, 0);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	audio->out_head = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	audio->out_tail = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	audio->out_count = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		audio->out[i].size = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		audio->out[i].read = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		audio->out[i].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		stats.byte_count = atomic_read(&audio->in_bytes);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		stats.sample_count = atomic_read(&audio->in_samples);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		rc = msm_snddev_request_freq(&freq, audio->enc_id,
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:				freq, audio->samp_rate);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:			msm_snddev_withdraw_freq(audio->enc_id,
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		audio->session_info.session_id = audio->enc_id;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		audio->session_info.sampling_freq = audio->samp_rate;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		audpreproc_update_audrec_info(&audio->session_info);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:			wait_event_interruptible_timeout(audio->wait_enable,
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:				audio->running != 0, 1*HZ);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:			MM_DBG("state %d rc = %d\n", audio->running, rc);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:			if (audio->running == 0)
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		audio->stopped = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		audio->session_info.sampling_freq = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		audpreproc_update_audrec_info(&audio->session_info);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		rc = msm_snddev_withdraw_freq(audio->enc_id,
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		audio->stopped = 1;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		audio->abort = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		audio->rflush = 1;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		audio->wflush = 1;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		if (audio->running) {
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:			rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:				!audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:			audio->rflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:			audio->wflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		cfg.buffer_size = audio->buffer_size;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		if (audio->mode == MSM_AUD_ENC_MODE_TUNNEL) {
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		audio->buffer_size = cfg.buffer_size;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		if (audio->channel_mode == AUDREC_CMD_MODE_MONO)
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		cfg.sample_rate = audio->samp_rate;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		cfg.bit_rate = audio->bit_rate;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		audio->samp_rate = cfg.sample_rate;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		audio->channel_mode = cfg.channels;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		audio->bit_rate = cfg.bit_rate;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		audio->record_quality = record_quality;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		MM_DBG(" Record Quality = 0x%8x \n", audio->record_quality);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		if (copy_to_user((void *) arg, &audio->enc_id,
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	mutex_lock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:			audio->wait, (audio->in_count > 0) || audio->stopped ||
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:				audio->abort || audio->rflush);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		if (audio->rflush) {
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		if (audio->stopped && !audio->in_count) {
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		if (audio->abort) {
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		index = audio->in_tail;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		data = (uint8_t *) audio->in[index].data;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		size = audio->in[index].size;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		if (audio->mode == MSM_AUD_ENC_MODE_NONTUNNEL) {
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:				audio->eos_ack = 1;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:			spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:			if (index != audio->in_tail) {
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:				spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:			audio->in[index].size = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:			audio->in_tail = (audio->in_tail + 1) & (FRAME_NUM - 1);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:			audio->in_count--;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:			spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:			if ((audio->mode == MSM_AUD_ENC_MODE_NONTUNNEL) &&
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:						(!audio->eos_ack)) {
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:							audio->dsp_cnt,
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:							audio->in_tail);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:							audio->dsp_cnt++);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	mutex_unlock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	if (!audio->running)
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	if (needed && !audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		audio->out_needed = 1;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		frame = audio->out + audio->out_tail;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:			MM_DBG("frame %d free\n", audio->out_tail);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:			audio->out_tail ^= 1;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:			wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	if (audio->out_needed) {
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		frame = audio->out + audio->out_tail;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:			MM_DBG("frame %d busy\n", audio->out_tail);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:						 audio->out_tail,
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:			audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	if (!audio->running || (audio->mode == MSM_AUD_ENC_MODE_TUNNEL)) {
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:			audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	MM_DBG("waked on by some event audio->wflush = %d\n", audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	else if (audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	frame = audio->out + audio->out_head;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		(audio->out_needed &&
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		audio->out[0].used == 0 &&
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		audio->out[1].used == 0)
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		|| (audio->stopped)
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		|| (audio->wflush));
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	if (audio->stopped || audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	audio->out_head ^= 1;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	frame = audio->out + audio->out_head;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:					|| (audio->stopped)
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:					|| (audio->wflush));
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	if (audio->stopped || audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	if (audio->mfield) {
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:					if (audio->mode ==
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	audio->out_head ^= 1;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	if (!audio->flush_ack)
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		audio->flush_ack = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	msm_snddev_withdraw_freq(audio->enc_id, SNDDEV_CAP_TX,
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	auddev_unregister_evt_listner(AUDDEV_CLNT_ENC, audio->enc_id);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	audio->session_info.sampling_freq = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	audpreproc_update_audrec_info(&audio->session_info);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	msm_adsp_put(audio->audrec);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	audpreproc_aenc_free(audio->enc_id);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	audio->audrec = NULL;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	audio->opened = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	if (audio->data) {
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		iounmap(audio->map_v_read);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		free_contiguous_memory_by_paddr(audio->phys);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		audio->data = NULL;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	if (audio->out_data) {
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		iounmap(audio->map_v_write);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		free_contiguous_memory_by_paddr(audio->out_phys);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		audio->out_data = NULL;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	if (audio->opened) {
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	audio->phys = allocate_contiguous_ebi_nomap(DMASZ, SZ_4K);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	if (audio->phys) {
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		audio->map_v_read = ioremap(audio->phys, DMASZ);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		if (IS_ERR(audio->map_v_read)) {
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:			free_contiguous_memory_by_paddr(audio->phys);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		audio->data = audio->map_v_read;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		(int) audio->data, (int) audio->phys);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		audio->mode = MSM_AUD_ENC_MODE_NONTUNNEL;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		audio->mode = MSM_AUD_ENC_MODE_TUNNEL;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	 if (audio->mode == MSM_AUD_ENC_MODE_NONTUNNEL)
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:			audio->buffer_size = (NT_FRAME_SIZE - 24);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:			audio->buffer_size = (FRAME_SIZE - 8);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	audio->enc_type = ENC_TYPE_AAC | audio->mode;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	audio->samp_rate = 8000;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	audio->channel_mode = AUDREC_CMD_MODE_MONO;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	audio->bit_rate = 14000;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	audio->record_quality = 0x1c00;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	MM_DBG("enc_type = %x\n", audio->enc_type);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	encid = audpreproc_aenc_alloc(audio->enc_type, &audio->module_name,
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:			&audio->queue_ids);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	audio->enc_id = encid;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	rc = msm_adsp_get(audio->module_name, &audio->audrec,
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		audpreproc_aenc_free(audio->enc_id);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	audio->stopped = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	audio->source = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	audio->abort = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	audio->wflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	audio->rflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	audio->flush_ack = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	audio->out_phys = allocate_contiguous_ebi_nomap(BUFFER_SIZE, SZ_4K);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	if (!audio->out_phys) {
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		audio->map_v_write = ioremap(
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:					audio->out_phys, BUFFER_SIZE);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		if (IS_ERR(audio->map_v_write)) {
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:			free_contiguous_memory_by_paddr(audio->out_phys);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		audio->out_data = audio->map_v_write;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:				audio->out_phys, (int)audio->out_data);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	audio->build_id = socinfo_get_build_id();
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	MM_DBG("Modem build id = %s\n", audio->build_id);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	audio->out[0].data = audio->out_data + 0;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	audio->out[0].addr = audio->out_phys + 0;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	audio->out[0].size = OUT_BUFFER_SIZE;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	audio->out[1].data = audio->out_data + OUT_BUFFER_SIZE;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	audio->out[1].addr = audio->out_phys + OUT_BUFFER_SIZE;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	audio->out[1].size = OUT_BUFFER_SIZE;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	MM_DBG("audio->out[0].data = %d  audio->out[1].data = %d",
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:					(unsigned int)audio->out[0].data,
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:					(unsigned int)audio->out[1].data);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	audio->device_events = AUDDEV_EVT_DEV_RDY | AUDDEV_EVT_DEV_RLS |
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	rc = auddev_register_evt_listner(audio->device_events,
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:					AUDDEV_CLNT_ENC, audio->enc_id,
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		iounmap(audio->map_v_write);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:		free_contiguous_memory_by_paddr(audio->out_phys);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	audio->mfield = META_OUT_SIZE;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	audio->opened = 1;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	audio->out_frame_cnt++;
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	msm_adsp_put(audio->audrec);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	audpreproc_aenc_free(audio->enc_id);
arch/arm/mach-msm/qdsp5v2/audio_aac_in.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:/* must be called with audio->lock held */
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	if (audio->enabled)
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	audio->dec_state = MSM_AUD_DECODER_STATE_NONE;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	audio->out_tail = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	if (msm_adsp_enable(audio->audplay)) {
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	if (audpp_enable(audio->dec_id, audamrnb_dsp_event, audio)) {
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		msm_adsp_disable(audio->audplay);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	audio->enabled = 1;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		audio->source |= (0x1 << evt_payload->routing_id);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		if (audio->running == 1 && audio->enabled == 1)
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			audpp_route_stream(audio->dec_id, audio->source);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		audio->source &= ~(0x1 << evt_payload->routing_id);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		if (audio->running == 1 && audio->enabled == 1)
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			audpp_route_stream(audio->dec_id, audio->source);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		audio->vol_pan.volume = evt_payload->session_vol;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:				audio->vol_pan.volume);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		if (audio->running)
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			audpp_dsp_set_vol_pan(audio->dec_id, &audio->vol_pan,
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:/* must be called with audio->lock held */
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	if (audio->enabled) {
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		audio->enabled = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		audio->dec_state = MSM_AUD_DECODER_STATE_NONE;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		rc = wait_event_interruptible_timeout(audio->wait,
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:				audio->dec_state != MSM_AUD_DECODER_STATE_NONE,
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		else if (audio->dec_state != MSM_AUD_DECODER_STATE_CLOSE)
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		wake_up(&audio->read_wait);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		msm_adsp_disable(audio->audplay);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		audpp_disable(audio->dec_id, audio);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	if (audio->rflush)
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		if (audio->in[audio->fill_next].addr ==
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			MM_DBG("in[%d] ready\n", audio->fill_next);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			audio->in[audio->fill_next].used =
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			if ((++audio->fill_next) == audio->pcm_buf_count)
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:				audio->fill_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:				audio->in[audio->fill_next].addr,
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	if (audio->in[audio->fill_next].used == 0) {
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		audio->buf_refresh = 1;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	wake_up(&audio->read_wait);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:					audio->dec_state =
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:					wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:					audio->dec_state =
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:					wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:				if (audio->pcm_feedback)
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:				audpp_route_stream(audio->dec_id,
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:						audio->source);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:				if (audio->pcm_feedback) {
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:				audio->dec_state =
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:				wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			audio->running = 1;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			audpp_dsp_set_vol_pan(audio->dec_id, &audio->vol_pan,
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			audpp_dsp_set_eq(audio->dec_id, audio->eq_enable,
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:					&audio->eq, POPP);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			audio->running = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		audio->wflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		audio->rflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		if (audio->pcm_feedback)
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		audio->teos = 1;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		memcpy(&audio->avsync[0], msg, sizeof(audio->avsync));
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		audio->avsync_flag = 1;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		wake_up(&audio->avsync_wait);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	msm_adsp_write(audio->audplay, audio->queue_id, \
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	cfg_dec_cmd.stream_id = audio->dec_id;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	cmd.common.dec_id = audio->dec_id;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	cmd.object_number = audio->dec_id;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	if (audio->pcm_feedback)
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	if (audio->mfield)
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			(audio->out[idx].mfield_sz >> 1);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		cmd.decoder_id = audio->dec_id;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	cmd.buf_ptr = audio->out[idx].addr;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	refresh_cmd.buf0_address = audio->in[audio->fill_next].addr;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	refresh_cmd.buf0_length = audio->in[audio->fill_next].size -
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	  (audio->in[audio->fill_next].size % AMRNB_DECODED_FRSZ) +
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	  (audio->mfield ? 24 : 0);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	cfg_cmd.max_buffers = audio->pcm_buf_count;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	if (!audio->running)
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	if (needed && !audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		audio->out_needed = 1;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		frame = audio->out + audio->out_tail;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			audio->out_tail ^= 1;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	if (audio->out_needed) {
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		frame = audio->out + audio->out_tail;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			MM_DBG("frame %d busy\n", audio->out_tail);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			audplay_dsp_send_data_avail(audio, audio->out_tail,
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	audio->out[0].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	audio->out[1].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	audio->out_head = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	audio->out_tail = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	atomic_set(&audio->out_bytes, 0);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		audio->in[index].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	audio->buf_refresh = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	audio->read_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	audio->fill_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	wake_up(&audio->read_wait);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	mutex_lock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	mutex_unlock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	audio->avsync_flag = 1;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	wake_up(&audio->avsync_wait);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	spin_lock_irqsave(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	empty = !list_empty(&audio->event_queue);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	spin_unlock_irqrestore(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	return empty || audio->event_abort;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	spin_lock_irqsave(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	list_for_each_safe(ptr, next, &audio->event_queue) {
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		drv_evt = list_first_entry(&audio->event_queue,
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	list_for_each_safe(ptr, next, &audio->free_event_queue) {
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		drv_evt = list_first_entry(&audio->free_event_queue,
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	spin_unlock_irqrestore(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			audio->event_wait, audamrnb_events_pending(audio),
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			audio->event_wait, audamrnb_events_pending(audio));
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	if (audio->event_abort) {
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		audio->event_abort = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	spin_lock_irqsave(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	if (!list_empty(&audio->event_queue)) {
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		drv_evt = list_first_entry(&audio->event_queue,
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		list_add_tail(&drv_evt->list, &audio->free_event_queue);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	spin_unlock_irqrestore(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	if (audio->eq_enable == enable && !audio->eq_needs_commit)
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	audio->eq_enable = enable;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	if (audio->running) {
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		audpp_dsp_set_eq(audio->dec_id,	enable, &audio->eq, POPP);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		audio->eq_needs_commit = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	if (audio->dec_id == audio->avsync[0] && audio->avsync_flag) {
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		stats->sample_count = (audio->avsync[2] << 16) |
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:						(audio->avsync[3]);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		stats->byte_count = (audio->avsync[5] << 16) |
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:						(audio->avsync[6]);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		audio->avsync_flag = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		audio->avsync_flag = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		if (audpp_query_avsync(audio->dec_id) < 0)
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		rc = wait_event_interruptible_timeout(audio->avsync_wait,
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:				(audio->avsync_flag == 1),
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		else if ((rc > 0) || ((rc == 0) && (audio->avsync_flag == 1))) {
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		audio->vol_pan.volume = arg;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		if (audio->running)
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			audpp_dsp_set_vol_pan(audio->dec_id, &audio->vol_pan,
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		audio->vol_pan.pan = arg;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		if (audio->running)
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			audpp_dsp_set_vol_pan(audio->dec_id, &audio->vol_pan,
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		prev_state = audio->eq_enable;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		audio->eq_enable = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		if (copy_from_user(&audio->eq.num_bands, (void *) arg,
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:				sizeof(audio->eq) -
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		audio->eq_enable = prev_state;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		audio->eq_needs_commit = 1;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		if (mutex_trylock(&audio->get_event_lock)) {
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			mutex_unlock(&audio->get_event_lock);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		audio->event_abort = 1;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		wake_up(&audio->event_wait);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			rc = wait_event_interruptible_timeout(audio->wait,
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:				audio->dec_state != MSM_AUD_DECODER_STATE_NONE,
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			MM_INFO("dec_state %d rc = %d\n", audio->dec_state, rc);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			if (audio->dec_state != MSM_AUD_DECODER_STATE_SUCCESS)
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		audio->stopped = 1;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		audio->stopped = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		audio->rflush = 1;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		audio->wflush = 1;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		if (audio->running) {
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			audpp_flush(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:				!audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			audio->rflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			audio->wflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			audio->mfield = config.meta_field;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			config.pcm_feedback = audio->pcm_feedback;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		if (config.pcm_feedback != audio->pcm_feedback) {
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		if ((config.pcm_feedback) && (!audio->read_data)) {
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			audio->read_phys = allocate_contiguous_ebi_nomap(
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			if (!audio->read_phys) {
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			audio->map_v_read = ioremap(
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:						audio->read_phys,
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			if (IS_ERR(audio->map_v_read)) {
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:							audio->read_phys);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:				audio->read_data = audio->map_v_read;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:				audio->buf_refresh = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:				audio->pcm_buf_count =
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:				audio->read_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:				audio->fill_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:					audio->in[index].data =
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:						audio->read_data + offset;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:					audio->in[index].addr =
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:					    audio->read_phys + offset;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:					audio->in[index].size =
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:					audio->in[index].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:					addr 0x%08x\n", audio->read_phys,
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:					(int)audio->read_data);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		if (copy_to_user((void *) arg, &audio->dec_id,
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	if (!audio->running || audio->pcm_feedback) {
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		(!audio->out[0].used &&
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		!audio->out[1].used &&
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		audio->out_needed) || audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	else if (audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	audio->teos = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		audio->teos || audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	if (audio->wflush)
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	if (!audio->pcm_feedback)
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	mutex_lock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		rc = wait_event_interruptible(audio->read_wait,
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			(audio->in[audio->read_next].used > 0) ||
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			(audio->stopped) || (audio->rflush));
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		if (audio->stopped || audio->rflush) {
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		if (count < audio->in[audio->read_next].used) {
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			MM_DBG("read from in[%d]\n", audio->read_next);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			    (buf, audio->in[audio->read_next].data,
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			     audio->in[audio->read_next].used)) {
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			count -= audio->in[audio->read_next].used;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			buf += audio->in[audio->read_next].used;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			audio->in[audio->read_next].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			if ((++audio->read_next) == audio->pcm_buf_count)
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:				audio->read_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	if (audio->buf_refresh && !audio->rflush) {
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		audio->buf_refresh = 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	mutex_unlock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	frame = audio->out + audio->out_head;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		(audio->out_needed &&
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		audio->out[0].used == 0 &&
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		audio->out[1].used == 0)
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		|| (audio->stopped)
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		|| (audio->wflush));
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	if (audio->stopped || audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	audio->out_head ^= 1;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		frame = audio->out + audio->out_head;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:						|| (audio->stopped)
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:						|| (audio->wflush));
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		if (audio->stopped || audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		if (audio->mfield) {
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		audio->out_head ^= 1;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	auddev_unregister_evt_listner(AUDDEV_CLNT_DEC, audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	msm_adsp_put(audio->audplay);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	audpp_adec_free(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	unregister_early_suspend(&audio->suspend_ctl.node);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	audio->event_abort = 1;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	wake_up(&audio->event_wait);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	iounmap(audio->map_v_write);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	free_contiguous_memory_by_paddr(audio->phys);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	if (audio->read_data) {
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		iounmap(audio->map_v_read);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		free_contiguous_memory_by_paddr(audio->read_phys);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	if (audio->dentry)
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		debugfs_remove(audio->dentry);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	spin_lock_irqsave(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	if (!list_empty(&audio->free_event_queue)) {
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		e_node = list_first_entry(&audio->free_event_queue,
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	list_add_tail(&e_node->list, &audio->event_queue);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	spin_unlock_irqrestore(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	wake_up(&audio->event_wait);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	n = scnprintf(buffer, debug_bufmax, "opened %d\n", audio->opened);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			"enabled %d\n", audio->enabled);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			"stopped %d\n", audio->stopped);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			"pcm_feedback %d\n", audio->pcm_feedback);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			"out_buf_sz %d\n", audio->out[0].size);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			"pcm_buf_count %d \n", audio->pcm_buf_count);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			"pcm_buf_sz %d \n", audio->in[0].size);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			"volume %x \n", audio->vol_pan.volume);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			"wflush %d\n", audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			"rflush %d\n", audio->rflush);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			"running %d \n", audio->running);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			"dec state %d \n", audio->dec_state);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			"out_needed %d \n", audio->out_needed);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			"out_head %d \n", audio->out_head);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			"out_tail %d \n", audio->out_tail);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			"out[0].used %d \n", audio->out[0].used);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			"out[1].used %d \n", audio->out[1].used);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			"buffer_refresh %d \n", audio->buf_refresh);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			"read_next %d \n", audio->read_next);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			"fill_next %d \n", audio->fill_next);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	for (i = 0; i < audio->pcm_buf_count; i++)
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:				"in[%d].used %d \n", i, audio->in[i].used);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		audio->pcm_feedback = NON_TUNNEL_MODE_PLAYBACK;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		audio->pcm_feedback = TUNNEL_MODE_PLAYBACK;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	decid = audpp_adec_alloc(dec_attrb, &audio->module_name,
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			&audio->queue_id);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	audio->dec_id = decid & MSM_AUD_DECODER_MASK;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	audio->phys = allocate_contiguous_ebi_nomap(DMASZ, SZ_4K);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	if (!audio->phys) {
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		audpp_adec_free(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		audio->map_v_write = ioremap(audio->phys, DMASZ);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		if (IS_ERR(audio->map_v_write)) {
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			free_contiguous_memory_by_paddr(audio->phys);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			audpp_adec_free(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			free_contiguous_memory_by_paddr(audio->phys);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:		audio->data = audio->map_v_write;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:				0x%08x\n", audio->phys, (int)audio->data);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	rc = msm_adsp_get(audio->module_name, &audio->audplay,
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:				audio->module_name, (int)audio);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	mutex_init(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	mutex_init(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	mutex_init(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	mutex_init(&audio->get_event_lock);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	spin_lock_init(&audio->dsp_lock);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	spin_lock_init(&audio->event_queue_lock);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	INIT_LIST_HEAD(&audio->free_event_queue);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	INIT_LIST_HEAD(&audio->event_queue);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	init_waitqueue_head(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	init_waitqueue_head(&audio->read_wait);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	init_waitqueue_head(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	init_waitqueue_head(&audio->event_wait);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	init_waitqueue_head(&audio->avsync_wait);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	audio->out[0].data = audio->data + 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	audio->out[0].addr = audio->phys + 0;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	audio->out[0].size = BUFSZ;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	audio->out[1].data = audio->data + BUFSZ;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	audio->out[1].addr = audio->phys + BUFSZ;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	audio->out[1].size = BUFSZ;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	audio->vol_pan.volume = 0x2000;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	audio->opened = 1;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	audio->device_events = AUDDEV_EVT_DEV_RDY
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	rc = auddev_register_evt_listner(audio->device_events,
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:					audio->dec_id,
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	snprintf(name, sizeof name, "msm_amrnb_%04x", audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	audio->dentry = debugfs_create_file(name, S_IFREG | S_IRUGO,
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	if (IS_ERR(audio->dentry))
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	audio->suspend_ctl.node.level = EARLY_SUSPEND_LEVEL_DISABLE_FB;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	audio->suspend_ctl.node.resume = audamrnb_resume;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	audio->suspend_ctl.node.suspend = audamrnb_suspend;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	audio->suspend_ctl.audio = audio;
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	register_early_suspend(&audio->suspend_ctl.node);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:			list_add_tail(&e_node->list, &audio->free_event_queue);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	msm_adsp_put(audio->audplay);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	iounmap(audio->map_v_write);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	free_contiguous_memory_by_paddr(audio->phys);
arch/arm/mach-msm/qdsp5v2/audio_amrnb.c:	audpp_adec_free(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/pcm_funcs.c:	cmd.common.dec_id = audio->dec_id;
arch/arm/mach-msm/qdsp5v2/pcm_funcs.c:	cmd.common.input_sampling_frequency = audio->out_sample_rate;
arch/arm/mach-msm/qdsp5v2/pcm_funcs.c:	cmd.stereo_cfg = audio->out_channel_mode;
arch/arm/mach-msm/qdsp5v2/pcm_funcs.c:	cmd.pcm_width = audio->out_bits;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:/* must be called with audio->lock held */
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	if (audio->enabled)
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	audio->dec_state = MSM_AUD_DECODER_STATE_NONE;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	audio->out_tail = 0;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	if (msm_adsp_enable(audio->audplay)) {
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	if (audpp_enable(audio->dec_id, audio_dsp_event, audio)) {
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		msm_adsp_disable(audio->audplay);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	audio->enabled = 1;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		audio->source |= (0x1 << evt_payload->routing_id);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		if (audio->running == 1 && audio->enabled == 1)
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			audpp_route_stream(audio->dec_id, audio->source);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		audio->source &= ~(0x1 << evt_payload->routing_id);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		if (audio->running == 1 && audio->enabled == 1)
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			audpp_route_stream(audio->dec_id, audio->source);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		audio->vol_pan.volume = evt_payload->session_vol;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:				audio->vol_pan.volume);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		if (audio->running)
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			audpp_dsp_set_vol_pan(audio->dec_id, &audio->vol_pan,
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:/* must be called with audio->lock held */
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	if (audio->enabled) {
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		audio->enabled = 0;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		audio->dec_state = MSM_AUD_DECODER_STATE_NONE;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		rc = wait_event_interruptible_timeout(audio->wait,
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:				audio->dec_state != MSM_AUD_DECODER_STATE_NONE,
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		else if (audio->dec_state != MSM_AUD_DECODER_STATE_CLOSE)
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		wake_up(&audio->read_wait);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		msm_adsp_disable(audio->audplay);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		audpp_disable(audio->dec_id, audio);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	if (audio->rflush)
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		if (audio->in[audio->fill_next].addr ==
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:				in[%d] ready\n", audio->fill_next);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			audio->in[audio->fill_next].used =
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			if ((++audio->fill_next) == audio->pcm_buf_count)
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:				audio->fill_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:				audio->in[audio->fill_next].addr,
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	if (audio->in[audio->fill_next].used == 0) {
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		audio->buf_refresh = 1;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	wake_up(&audio->read_wait);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:					audio->dec_state =
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:					wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:					audio->dec_state =
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:					wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:				if (audio->pcm_feedback)
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:				audpp_route_stream(audio->dec_id,
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:						audio->source);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:				if (audio->pcm_feedback) {
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:				audio->dec_state =
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:				wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			audio->running = 1;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			audpp_dsp_set_vol_pan(audio->dec_id, &audio->vol_pan,
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			audpp_dsp_set_eq(audio->dec_id, audio->eq_enable,
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:					&audio->eq, POPP);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			audio->running = 0;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		audio->wflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		audio->rflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		if (audio->pcm_feedback)
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		audio->teos = 1;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		memcpy(&audio->avsync[0], msg, sizeof(audio->avsync));
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		audio->avsync_flag = 1;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		wake_up(&audio->avsync_wait);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	msm_adsp_write(audio->audplay, audio->queue_id, \
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	cfg_dec_cmd.stream_id = audio->dec_id;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	cmd.common.dec_id = audio->dec_id;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	cmd.common.input_sampling_frequency = audio->out_sample_rate;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	cmd.armdatareqthr = audio->wmapro_config.armdatareqthr;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	cmd.numchannels = audio->wmapro_config.numchannels;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	cmd.validbitspersample = audio->wmapro_config.validbitspersample;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	cmd.formattag = audio->wmapro_config.formattag;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	cmd.samplingrate = audio->wmapro_config.samplingrate;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	cmd.avgbytespersecond = audio->wmapro_config.avgbytespersecond;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	cmd.asfpacketlength = audio->wmapro_config.asfpacketlength;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	cmd.channelmask = audio->wmapro_config.channelmask;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	cmd.encodeopt = audio->wmapro_config.encodeopt;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	cmd.advancedencodeopt = audio->wmapro_config.advancedencodeopt;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	cmd.advancedencodeopt2 = audio->wmapro_config.advancedencodeopt2;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	cmd.object_number = audio->dec_id;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	if (audio->pcm_feedback)
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	refresh_cmd.buf0_address = audio->in[audio->fill_next].addr;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	refresh_cmd.buf0_length = audio->in[audio->fill_next].size;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	cfg_cmd.max_buffers = audio->pcm_buf_count;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	if (audio->mfield)
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			(audio->out[idx].mfield_sz >> 1);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		cmd.decoder_id		= audio->dec_id;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	cmd.buf_ptr		= audio->out[idx].addr;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	if (!audio->running)
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	if (audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		audio->out_needed = 1;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	if (needed && !audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		audio->out_needed = 1;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		frame = audio->out + audio->out_tail;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			MM_DBG("frame %d free\n", audio->out_tail);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			audio->out_tail ^= 1;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	if (audio->out_needed) {
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		frame = audio->out + audio->out_tail;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			MM_DBG("frame %d busy\n", audio->out_tail);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			audplay_dsp_send_data_avail(audio, audio->out_tail,
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	audio->out[0].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	audio->out[1].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	audio->out_head = 0;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	audio->out_tail = 0;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	audio->reserved = 0;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	atomic_set(&audio->out_bytes, 0);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		audio->in[index].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	audio->buf_refresh = 0;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	audio->read_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	audio->fill_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	wake_up(&audio->read_wait);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	mutex_lock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	mutex_unlock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	audio->avsync_flag = 1;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	wake_up(&audio->avsync_wait);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	spin_lock_irqsave(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	empty = !list_empty(&audio->event_queue);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	spin_unlock_irqrestore(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	return empty || audio->event_abort;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	spin_lock_irqsave(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	list_for_each_safe(ptr, next, &audio->event_queue) {
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		drv_evt = list_first_entry(&audio->event_queue,
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	list_for_each_safe(ptr, next, &audio->free_event_queue) {
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		drv_evt = list_first_entry(&audio->free_event_queue,
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	spin_unlock_irqrestore(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		rc = wait_event_interruptible_timeout(audio->event_wait,
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			audio->event_wait, audwmapro_events_pending(audio));
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	if (audio->event_abort) {
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		audio->event_abort = 0;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	spin_lock_irqsave(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	if (!list_empty(&audio->event_queue)) {
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		drv_evt = list_first_entry(&audio->event_queue,
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		list_add_tail(&drv_evt->list, &audio->free_event_queue);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	spin_unlock_irqrestore(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	if (audio->eq_enable == enable && !audio->eq_needs_commit)
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	audio->eq_enable = enable;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	if (audio->running) {
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		audpp_dsp_set_eq(audio->dec_id, enable, &audio->eq, POPP);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		audio->eq_needs_commit = 0;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	if (audio->dec_id == audio->avsync[0] && audio->avsync_flag) {
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		stats->sample_count = (audio->avsync[2] << 16) |
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:						(audio->avsync[3]);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		stats->byte_count = (audio->avsync[5] << 16) |
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:						(audio->avsync[6]);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		audio->avsync_flag = 0;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		audio->avsync_flag = 0;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		if (audpp_query_avsync(audio->dec_id) < 0)
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		rc = wait_event_interruptible_timeout(audio->avsync_wait,
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:				(audio->avsync_flag == 1),
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		else if ((rc > 0) || ((rc == 0) && (audio->avsync_flag == 1))) {
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		audio->vol_pan.volume = arg;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		if (audio->running)
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			audpp_dsp_set_vol_pan(audio->dec_id, &audio->vol_pan,
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		audio->vol_pan.pan = arg;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		if (audio->running)
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			audpp_dsp_set_vol_pan(audio->dec_id, &audio->vol_pan,
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		prev_state = audio->eq_enable;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		audio->eq_enable = 0;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		if (copy_from_user(&audio->eq.num_bands, (void *) arg,
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:				sizeof(audio->eq) -
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		audio->eq_enable = prev_state;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		audio->eq_needs_commit = 1;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		if (mutex_trylock(&audio->get_event_lock)) {
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			mutex_unlock(&audio->get_event_lock);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		audio->event_abort = 1;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		wake_up(&audio->event_wait);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			rc = wait_event_interruptible_timeout(audio->wait,
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:				audio->dec_state != MSM_AUD_DECODER_STATE_NONE,
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			MM_INFO("dec_state %d rc = %d\n", audio->dec_state, rc);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			if (audio->dec_state != MSM_AUD_DECODER_STATE_SUCCESS)
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		audio->stopped = 1;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		audio->stopped = 0;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		audio->rflush = 1;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		audio->wflush = 1;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		if (audio->running) {
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			audpp_flush(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:				!audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			audio->rflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			audio->wflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		audio->mfield = config.meta_field;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		audio->out_sample_rate = config.sample_rate;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		audio->out_channel_mode = config.channel_count;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		config.buffer_size = (audio->out_dma_sz >> 1);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		config.sample_rate = audio->out_sample_rate;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		if (audio->out_channel_mode == AUDPP_CMD_PCM_INTF_MONO_V)
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			if (copy_to_user((void *)arg, &audio->wmapro_config,
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:				sizeof(audio->wmapro_config)))
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		audio->wmapro_config = usr_config;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		audio->wmapro_config.advancedencodeopt2 =
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			((audio->wmapro_config.advancedencodeopt2 & 0xFFFF0000)
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			 >> 16) | ((audio->wmapro_config.advancedencodeopt2
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			config.pcm_feedback = audio->pcm_feedback;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			if (config.pcm_feedback != audio->pcm_feedback) {
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			if ((config.pcm_feedback) && (!audio->read_data)) {
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:				audio->read_phys =
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:				if (!audio->read_phys) {
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:				audio->map_v_read = ioremap(
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:							audio->read_phys,
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:				if (IS_ERR(audio->map_v_read)) {
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:							audio->read_phys);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:					audio->read_data =
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:						audio->map_v_read;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:					audio->pcm_feedback = 1;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:					audio->buf_refresh = 0;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:					audio->pcm_buf_count =
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:					audio->read_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:					audio->fill_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:						audio->in[index].data =
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:						    audio->read_data + offset;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:						audio->in[index].addr =
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:						    audio->read_phys + offset;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:						audio->in[index].size =
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:						audio->in[index].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:						audio->read_phys,
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:						(int)audio->read_data);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		rc = audpp_pause(audio->dec_id, (int) arg);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		if (copy_to_user((void *) arg, &audio->dec_id,
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	if (!audio->running || audio->pcm_feedback) {
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		(!audio->out[0].used &&
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		!audio->out[1].used &&
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		audio->out_needed) || audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	else if (audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	if (audio->reserved) {
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		frame = audio->out + audio->out_tail;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		((char *) frame->data)[0] = audio->rsv_byte;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			(!audio->out[0].used &&
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			!audio->out[1].used &&
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			audio->out_needed) || audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		else if (audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	audio->teos = 0;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		audio->teos || audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	if (audio->wflush)
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	if (!audio->pcm_feedback)
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	mutex_lock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		rc = wait_event_interruptible(audio->read_wait,
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			(audio->in[audio->read_next].used > 0) ||
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			(audio->stopped) || (audio->rflush));
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		if (audio->stopped || audio->rflush) {
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		if (count < audio->in[audio->read_next].used) {
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:					audio->read_next);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			    (buf, audio->in[audio->read_next].data,
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			     audio->in[audio->read_next].used)) {
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			count -= audio->in[audio->read_next].used;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			buf += audio->in[audio->read_next].used;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			audio->in[audio->read_next].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			if ((++audio->read_next) == audio->pcm_buf_count)
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:				audio->read_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	if (audio->buf_refresh && !audio->rflush) {
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		audio->buf_refresh = 0;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	mutex_unlock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	if (audio->reserved) {
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		frame = audio->out + audio->out_head;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:				|| (audio->stopped)
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:				|| (audio->wflush));
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		if (audio->stopped || audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		buf_ptr[0] = audio->rsv_byte;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		audio->out_head ^= 1;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		audio->reserved = 0;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	frame = audio->out + audio->out_head;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		(audio->out_needed &&
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		audio->out[0].used == 0 &&
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		audio->out[1].used == 0)
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		|| (audio->stopped)
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		|| (audio->wflush));
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	if (audio->stopped || audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	audio->out_head ^= 1;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		frame = audio->out + audio->out_head;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:					      || (audio->stopped)
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:						  || (audio->wflush));
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		if (audio->stopped || audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		if (audio->mfield) {
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		if (audio->reserved) {
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			MM_DBG("append reserved byte %x\n", audio->rsv_byte);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			*cpy_ptr = audio->rsv_byte;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			audio->reserved = 0;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			audio->rsv_byte = ((char *) frame->data)[dsize - 1];
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:					audio->rsv_byte);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			audio->reserved = 1;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			audio->out_head ^= 1;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	auddev_unregister_evt_listner(AUDDEV_CLNT_DEC, audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	msm_adsp_put(audio->audplay);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	audpp_adec_free(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	unregister_early_suspend(&audio->suspend_ctl.node);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	audio->event_abort = 1;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	wake_up(&audio->event_wait);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	iounmap(audio->map_v_write);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	free_contiguous_memory_by_paddr(audio->phys);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	if (audio->read_data) {
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		iounmap(audio->map_v_read);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		free_contiguous_memory_by_paddr(audio->read_phys);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	if (audio->dentry)
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		debugfs_remove(audio->dentry);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	spin_lock_irqsave(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	if (!list_empty(&audio->free_event_queue)) {
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		e_node = list_first_entry(&audio->free_event_queue,
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	list_add_tail(&e_node->list, &audio->event_queue);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	spin_unlock_irqrestore(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	wake_up(&audio->event_wait);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	n = scnprintf(buffer, debug_bufmax, "opened %d\n", audio->opened);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:				   "enabled %d\n", audio->enabled);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:				   "stopped %d\n", audio->stopped);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:				   "pcm_feedback %d\n", audio->pcm_feedback);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:				   "out_buf_sz %d\n", audio->out[0].size);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:				   "pcm_buf_count %d \n", audio->pcm_buf_count);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:				   "pcm_buf_sz %d \n", audio->in[0].size);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:				   "volume %x \n", audio->vol_pan.volume);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:				   "sample rate %d \n", audio->out_sample_rate);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		"channel mode %d \n", audio->out_channel_mode);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:				   "wflush %d\n", audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:				   "rflush %d\n", audio->rflush);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:				   "running %d \n", audio->running);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			"dec state %d \n", audio->dec_state);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:				   "out_needed %d \n", audio->out_needed);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:				   "out_head %d \n", audio->out_head);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:				   "out_tail %d \n", audio->out_tail);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:				   "out[0].used %d \n", audio->out[0].used);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:				   "out[1].used %d \n", audio->out[1].used);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:				   "buffer_refresh %d \n", audio->buf_refresh);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:				   "read_next %d \n", audio->read_next);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:				   "fill_next %d \n", audio->fill_next);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	for (i = 0; i < audio->pcm_buf_count; i++)
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			"in[%d].size %d \n", i, audio->in[i].used);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		audio->pcm_feedback = NON_TUNNEL_MODE_PLAYBACK;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		audio->pcm_feedback = TUNNEL_MODE_PLAYBACK;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	decid = audpp_adec_alloc(dec_attrb, &audio->module_name,
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			&audio->queue_id);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	audio->dec_id = decid & MSM_AUD_DECODER_MASK;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		audio->phys = allocate_contiguous_ebi_nomap(pmem_sz, SZ_4K);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:		if (audio->phys) {
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			audio->map_v_write = ioremap(audio->phys, pmem_sz);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			if (IS_ERR(audio->map_v_write)) {
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:				free_contiguous_memory_by_paddr(audio->phys);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:				audpp_adec_free(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			audio->data = audio->map_v_write;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:				0x%08x\n", audio->phys, (int)audio->data);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			audpp_adec_free(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	audio->out_dma_sz = pmem_sz;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	rc = msm_adsp_get(audio->module_name, &audio->audplay,
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:				audio->module_name, (int)audio);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	mutex_init(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	mutex_init(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	mutex_init(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	mutex_init(&audio->get_event_lock);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	spin_lock_init(&audio->dsp_lock);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	init_waitqueue_head(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	init_waitqueue_head(&audio->read_wait);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	INIT_LIST_HEAD(&audio->free_event_queue);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	INIT_LIST_HEAD(&audio->event_queue);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	init_waitqueue_head(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	init_waitqueue_head(&audio->event_wait);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	spin_lock_init(&audio->event_queue_lock);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	init_waitqueue_head(&audio->avsync_wait);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	audio->out[0].data = audio->data + 0;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	audio->out[0].addr = audio->phys + 0;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	audio->out[0].size = audio->out_dma_sz >> 1;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	audio->out[1].data = audio->data + audio->out[0].size;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	audio->out[1].addr = audio->phys + audio->out[0].size;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	audio->out[1].size = audio->out[0].size;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	/*audio->wmapro_config.armdatareqthr =  1268;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	audio->wmapro_config.numchannels = 2;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	audio->wmapro_config.avgbytespersecond = 6003;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	audio->wmapro_config.samplingrate = 44100;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	audio->wmapro_config.encodeopt = 224;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	audio->wmapro_config.validbitspersample = 16;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	audio->wmapro_config.formattag = 354;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	audio->wmapro_config.asfpacketlength = 2230;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	audio->wmapro_config.channelmask = 3;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	audio->wmapro_config.advancedencodeopt = 32834;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	audio->wmapro_config.advancedencodeopt2 = 0;*/
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	audio->out_sample_rate = 44100;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	audio->out_channel_mode = AUDPP_CMD_PCM_INTF_STEREO_V;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	audio->vol_pan.volume = 0x2000;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	audio->opened = 1;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	audio->device_events = AUDDEV_EVT_DEV_RDY
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	rc = auddev_register_evt_listner(audio->device_events,
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:					audio->dec_id,
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	snprintf(name, sizeof name, "msm_wmapro_%04x", audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	audio->dentry = debugfs_create_file(name, S_IFREG | S_IRUGO,
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	if (IS_ERR(audio->dentry))
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	audio->suspend_ctl.node.level = EARLY_SUSPEND_LEVEL_DISABLE_FB;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	audio->suspend_ctl.node.resume = audwmapro_resume;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	audio->suspend_ctl.node.suspend = audwmapro_suspend;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	audio->suspend_ctl.audio = audio;
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	register_early_suspend(&audio->suspend_ctl.node);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:			list_add_tail(&e_node->list, &audio->free_event_queue);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	msm_adsp_put(audio->audplay);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	iounmap(audio->map_v_write);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	free_contiguous_memory_by_paddr(audio->phys);
arch/arm/mach-msm/qdsp5v2/audio_wmapro.c:	audpp_adec_free(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	msm_adsp_write(audio->audrec, ((audio->queue_ids & 0xFFFF0000) >> 16),\
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	msm_adsp_write(audio->audrec, (audio->queue_ids & 0x0000FFFF),\
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		spin_lock_irqsave(&audio->dev_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		audio->dev_cnt++;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		if (!audio->in_call)
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:			audio->source |= (0x1 << evt_payload->routing_id);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		spin_unlock_irqrestore(&audio->dev_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		if ((audio->running == 1) && (audio->enabled == 1) &&
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:			(audio->mode == MSM_AUD_ENC_MODE_TUNNEL))
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		spin_lock_irqsave(&audio->dev_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		audio->dev_cnt--;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		if (!audio->in_call)
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:			audio->source &= ~(0x1 << evt_payload->routing_id);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		spin_unlock_irqrestore(&audio->dev_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		if ((!audio->running) || (!audio->enabled))
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		if (audio->mode == MSM_AUD_ENC_MODE_TUNNEL) {
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:			if (audio->source)
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		audio->voice_state = evt_payload->voice_state;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		if (audio->in_call && audio->running &&
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		   (audio->mode == MSM_AUD_ENC_MODE_TUNNEL)) {
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:			if (audio->voice_state == VOICE_STATE_INCALL)
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:			else if (audio->voice_state == VOICE_STATE_OFFCALL) {
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:				wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		wake_up(&audio->wait_enable);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:			if(audio->mode == MSM_AUD_ENC_MODE_NONTUNNEL) {
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:			audio->running = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:			if (audio->mode == MSM_AUD_ENC_MODE_TUNNEL)
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:				wake_up(&audio->wait_enable);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		if (audio->mode == MSM_AUD_ENC_MODE_TUNNEL)
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:			audio->running = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		wake_up(&audio->wait_enable);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		audio->running = 1;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		if (audio->mode == MSM_AUD_ENC_MODE_TUNNEL) {
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:			if ((!audio->in_call && (audio->dev_cnt > 0)) ||
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:				(audio->in_call &&
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:					(audio->voice_state \
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:			wake_up(&audio->wait_enable);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		audio->stopped = 1;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		if (audio->mode == MSM_AUD_ENC_MODE_NONTUNNEL)
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:			wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		audio->wflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		audio->rflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		audio->flush_ack = 1;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	index = audio->in_head;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	frame = (void *) (((char *)audio->in[index].data) - \
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->in[index].size = frame->frame_length;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	atomic_add(audio->in[index].size, &audio->in_bytes);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	atomic_add(1, &audio->in_samples);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->in_head = (audio->in_head + 1) & (FRAME_NUM - 1);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	if (audio->in_head == audio->in_tail) {
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		audio->in_tail = (audio->in_tail + 1) & (FRAME_NUM - 1);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		MM_ERR("in_count = %d\n", audio->in_count);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		audio->in_count++;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audevrc_dsp_read_buffer(audio, audio->dsp_cnt++);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	index = audio->in_head;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	nt_frame = (void *) (((char *)audio->in[index].data) - \
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->in[index].size = nt_frame->frame_length;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	atomic_add(audio->in[index].size, &audio->in_bytes);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	atomic_add(1, &audio->in_samples);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->in_head = (audio->in_head + 1) & (FRAME_NUM - 1);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	if (audio->in_head == audio->in_tail)
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		audio->in_count++;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		cmd.buf_address_length[0] = (audio->out[idx].addr &
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		cmd.buf_address_length[1] = (audio->out[idx].addr &
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->out_frame_cnt++;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	cmd.sampling_freq = audio->samp_rate;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	if (!audio->channel_mode)
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	cmd.stream_id = audio->enc_id;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	if (audio->mode == MSM_ADSP_ENC_MODE_NON_TUNNEL)
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	if (audio->build_id[17] == '1') {
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	cmd.stream_id = audio->enc_id;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		cmd.audrec_enc_type = audio->enc_type | ENCODE_ENABLE;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	cmd.common.stream_id = audio->enc_id;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	cmd.enc_min_rate = audio->cfg.min_bit_rate;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	cmd.enc_max_rate = audio->cfg.max_bit_rate;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:/* To Do: msm_snddev_route_enc(audio->enc_id); */
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	cmd.stream_id = audio->enc_id;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	cmd.source_mix_mask = audio->source;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	if (audio->enc_id == 2) {
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	uint16_t *data = (void *) audio->data;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	cmd.audrec_ext_pkt_start_addr_msw = audio->phys >> 16;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	cmd.audrec_ext_pkt_start_addr_lsw = audio->phys;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	MM_DBG("audio->phys = %x\n", audio->phys);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		if (audio->mode == MSM_AUD_ENC_MODE_TUNNEL) {
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:			audio->in[n].data = data + 4;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:			MM_DBG("0x%8x\n", (int)(audio->in[n].data - 8));
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:			audio->in[n].data = data + 12;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:			MM_DBG("0x%8x\n", (int)(audio->in[n].data - 24));
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:/* must be called with audio->lock held */
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	if (audio->enabled)
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	if (audpreproc_enable(audio->enc_id, &audpreproc_dsp_event, audio)) {
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	if (msm_adsp_enable(audio->audrec)) {
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		audpreproc_disable(audio->enc_id, audio);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->enabled = 1;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:/* must be called with audio->lock held */
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	if (audio->enabled) {
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		audio->enabled = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		wait_event_interruptible_timeout(audio->wait_enable,
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:				audio->running == 0, 1*HZ);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		msm_adsp_disable(audio->audrec);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		audpreproc_disable(audio->enc_id, audio);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	mutex_lock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	mutex_unlock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->dsp_cnt = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->in_head = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->in_tail = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->in_count = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->eos_ack = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		audio->in[i].size = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		audio->in[i].read = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	MM_DBG("in_bytes %d\n", atomic_read(&audio->in_bytes));
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	MM_DBG("in_samples %d\n", atomic_read(&audio->in_samples));
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	atomic_set(&audio->in_bytes, 0);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	atomic_set(&audio->in_samples, 0);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->out_head = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->out_tail = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->out_count = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		audio->out[i].size = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		audio->out[i].read = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		audio->out[i].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		stats.byte_count = atomic_read(&audio->in_bytes);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		stats.sample_count = atomic_read(&audio->in_samples);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		if (audio->in_call && (audio->voice_state !=
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		rc = msm_snddev_request_freq(&freq, audio->enc_id,
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:			msm_snddev_withdraw_freq(audio->enc_id,
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		audio->session_info.session_id = audio->enc_id;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		audio->session_info.sampling_freq = audio->samp_rate;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		audpreproc_update_audrec_info(&audio->session_info);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:			wait_event_interruptible_timeout(audio->wait_enable,
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:				audio->running != 0, 1*HZ);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:			MM_DBG("state %d rc = %d\n", audio->running, rc);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:			if (audio->running == 0)
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		audio->stopped = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		audio->session_info.sampling_freq = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		audpreproc_update_audrec_info(&audio->session_info);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		rc = msm_snddev_withdraw_freq(audio->enc_id,
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		audio->stopped = 1;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		audio->rflush = 1;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		audio->wflush = 1;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		if (audio->running) {
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:			rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:				!audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:			audio->rflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:			audio->wflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		if (audio->mode == MSM_AUD_ENC_MODE_TUNNEL) {
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		audio->buffer_size = cfg.buffer_size;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		cfg.buffer_size = audio->buffer_size;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		if (copy_to_user((void *) arg, &audio->cfg, sizeof(audio->cfg)))
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		memcpy(&audio->cfg, &cfg, sizeof(cfg));
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		cfg.sample_rate = audio->samp_rate;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		cfg.channel_count = audio->channel_mode;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		if (audio->mode == MSM_AUD_ENC_MODE_TUNNEL) {
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:				spin_lock_irqsave(&audio->dev_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:					audio->source = \
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:					audio->source = \
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:					audio->source = \
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:				audio->in_call = 1;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:				spin_unlock_irqrestore(&audio->dev_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		if (copy_to_user((void *) arg, &audio->enc_id,
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	mutex_lock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:			audio->wait, (audio->in_count > 0) || audio->stopped ||
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:			audio->rflush ||
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:			((audio->mode == MSM_AUD_ENC_MODE_TUNNEL) &&
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:			 audio->in_call && audio->running &&
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:			(audio->voice_state == VOICE_STATE_OFFCALL)));
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		if (audio->rflush) {
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		if (audio->stopped && !audio->in_count) {
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:			} else if ((audio->mode == MSM_AUD_ENC_MODE_TUNNEL) &&
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:					audio->in_call && audio->running &&
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:					(audio->voice_state \
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		index = audio->in_tail;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		data = (uint8_t *) audio->in[index].data;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		size = audio->in[index].size;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		if (audio->mode == MSM_AUD_ENC_MODE_NONTUNNEL) {
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:				audio->eos_ack = 1;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:			spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:			if (index != audio->in_tail) {
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:				spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:			audio->in[index].size = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:			audio->in_tail = (audio->in_tail + 1) & (FRAME_NUM - 1);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:			audio->in_count--;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:			spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:			if ((audio->mode == MSM_AUD_ENC_MODE_NONTUNNEL)) {
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:				if (!audio->eos_ack) {
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:							audio->dsp_cnt,
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:							audio->in_tail);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:							audio->dsp_cnt++);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	mutex_unlock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	if (!audio->running)
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	if (needed && !audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		audio->out_needed = 1;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		frame = audio->out + audio->out_tail;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:			MM_DBG("frame %d free\n", audio->out_tail);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:			audio->out_tail ^= 1;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:			wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	if (audio->out_needed) {
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		frame = audio->out + audio->out_tail;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:						 audio->out_tail,
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:			audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	if (!audio->running || (audio->mode == MSM_AUD_ENC_MODE_TUNNEL)) {
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:			audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	MM_DBG("waked on by some event audio->wflush = %d\n", audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	else if (audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	frame = audio->out + audio->out_head;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		(audio->out_needed &&
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		audio->out[0].used == 0 &&
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		audio->out[1].used == 0)
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		|| (audio->stopped)
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		|| (audio->wflush));
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	if (audio->stopped || audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->out_head ^= 1;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	if (audio->mode != MSM_AUD_ENC_MODE_NONTUNNEL)
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	frame = audio->out + audio->out_head;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:					|| (audio->stopped)
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:					|| (audio->wflush));
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	if (audio->stopped || audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	if (audio->mfield) {
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->out_head ^= 1;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	if (!audio->flush_ack)
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		audio->flush_ack = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->in_call = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	msm_snddev_withdraw_freq(audio->enc_id, SNDDEV_CAP_TX,
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	auddev_unregister_evt_listner(AUDDEV_CLNT_ENC, audio->enc_id);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->session_info.sampling_freq = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audpreproc_update_audrec_info(&audio->session_info);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	msm_adsp_put(audio->audrec);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audpreproc_aenc_free(audio->enc_id);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->audrec = NULL;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->opened = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	if (audio->data) {
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		ion_unmap_kernel(audio->client, audio->input_buff_handle);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		ion_free(audio->client, audio->input_buff_handle);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		audio->data = NULL;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	if (audio->out_data) {
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		ion_unmap_kernel(audio->client, audio->output_buff_handle);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		ion_free(audio->client, audio->output_buff_handle);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		audio->out_data = NULL;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	ion_client_destroy(audio->client);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	if (audio->opened) {
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->client = client;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->output_buff_handle = handle;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->phys = (int32_t)addr;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->map_v_read = ion_map_kernel(client, handle);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	if (IS_ERR(audio->map_v_read)) {
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->data = audio->map_v_read;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		(int) audio->data, (int) audio->phys);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		audio->mode = MSM_AUD_ENC_MODE_NONTUNNEL;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		audio->mode = MSM_AUD_ENC_MODE_TUNNEL;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	if (audio->mode == MSM_AUD_ENC_MODE_NONTUNNEL)
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:			audio->buffer_size = (EVRC_FRAME_SIZE + 14);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:			audio->buffer_size = (FRAME_SIZE - 8);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->enc_type = ENC_TYPE_EVRC | audio->mode;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->samp_rate = 8000;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->channel_mode = AUDREC_CMD_MODE_MONO;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->cfg.cdma_rate = CDMA_RATE_FULL;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->cfg.min_bit_rate = CDMA_RATE_FULL;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->cfg.max_bit_rate = CDMA_RATE_FULL;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	encid = audpreproc_aenc_alloc(audio->enc_type, &audio->module_name,
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:			&audio->queue_ids);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->enc_id = encid;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	rc = msm_adsp_get(audio->module_name, &audio->audrec,
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		audpreproc_aenc_free(audio->enc_id);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->stopped = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->source = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->wflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->rflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->flush_ack = 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->input_buff_handle = handle;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->out_phys = (int32_t)addr;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->map_v_write = ion_map_kernel(client,
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	if (IS_ERR(audio->map_v_write)) {
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->out_data = audio->map_v_write;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:				(unsigned int)audio->out_data);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->out[0].data = audio->out_data + 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->out[0].addr = audio->out_phys + 0;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->out[0].size = OUT_BUFFER_SIZE;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->out[1].data = audio->out_data + OUT_BUFFER_SIZE;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->out[1].addr = audio->out_phys + OUT_BUFFER_SIZE;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->out[1].size = OUT_BUFFER_SIZE;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	MM_DBG("audio->out[0].data = %d  audio->out[1].data = %d",
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:					(unsigned int)audio->out[0].data,
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:					(unsigned int)audio->out[1].data);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->device_events = AUDDEV_EVT_DEV_RDY | AUDDEV_EVT_DEV_RLS |
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->voice_state = msm_get_voice_state();
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	rc = auddev_register_evt_listner(audio->device_events,
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:					AUDDEV_CLNT_ENC, audio->enc_id,
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		iounmap(audio->map_v_write);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:		free_contiguous_memory_by_paddr(audio->out_phys);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->mfield = META_OUT_SIZE;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->opened = 1;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->out_frame_cnt++;
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audio->build_id = socinfo_get_build_id();
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	MM_DBG("Modem build id = %s\n", audio->build_id);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	msm_adsp_put(audio->audrec);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	ion_free(client, audio->input_buff_handle);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	ion_unmap_kernel(client, audio->output_buff_handle);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	audpreproc_aenc_free(audio->enc_id);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	ion_free(client, audio->output_buff_handle);
arch/arm/mach-msm/qdsp5v2/audio_evrc_in.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:/* must be called with audio->lock held */
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	if (audio->enabled)
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->dec_state = MSM_AUD_DECODER_STATE_NONE;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->out_tail = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	if (msm_adsp_enable(audio->audplay)) {
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	if (audpp_enable(audio->dec_id, audio_dsp_event, audio)) {
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		msm_adsp_disable(audio->audplay);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->enabled = 1;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		audio->source |= (0x1 << evt_payload->routing_id);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		if (audio->running == 1 && audio->enabled == 1)
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			audpp_route_stream(audio->dec_id, audio->source);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		audio->source &= ~(0x1 << evt_payload->routing_id);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		if (audio->running == 1 && audio->enabled == 1)
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			audpp_route_stream(audio->dec_id, audio->source);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		audio->vol_pan.volume = evt_payload->session_vol;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:				audio->vol_pan.volume);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		if (audio->running)
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			audpp_dsp_set_vol_pan(audio->dec_id, &audio->vol_pan,
arch/arm/mach-msm/qdsp5v2/audio_aac.c:/* must be called with audio->lock held */
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	if (audio->enabled) {
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		audio->enabled = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		audio->dec_state = MSM_AUD_DECODER_STATE_NONE;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		rc = wait_event_interruptible_timeout(audio->wait,
arch/arm/mach-msm/qdsp5v2/audio_aac.c:				audio->dec_state != MSM_AUD_DECODER_STATE_NONE,
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		else if (audio->dec_state != MSM_AUD_DECODER_STATE_CLOSE)
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		wake_up(&audio->read_wait);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		msm_adsp_disable(audio->audplay);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		audpp_disable(audio->dec_id, audio);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	if (audio->rflush)
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		if (audio->in[audio->fill_next].addr ==
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			MM_DBG("in[%d] ready\n", audio->fill_next);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			audio->in[audio->fill_next].used =
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			if ((++audio->fill_next) == audio->pcm_buf_count)
arch/arm/mach-msm/qdsp5v2/audio_aac.c:				audio->fill_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:				audio->in[audio->fill_next].addr,
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	if (audio->in[audio->fill_next].used == 0) {
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		audio->buf_refresh = 1;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	wake_up(&audio->read_wait);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->bitstream_error_info.dec_id = payload[0];
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->bitstream_error_info.err_msg_indicator = payload[1];
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->bitstream_error_info.err_type = payload[2];
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			audio->bitstream_error_info.err_type, (0x0000FFFF &
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			audio->bitstream_error_info.err_msg_indicator));
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	e_payload.error_info = audio->bitstream_error_info;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->stream_info.codec_type = AUDIO_CODEC_TYPE_AAC;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->stream_info.chan_info = (0x0000FFFF & payload[1]);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->stream_info.sample_rate = (0x0000FFFF & payload[2]);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->stream_info.bit_stream_info = (0x0000FFFF & payload[3]);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->stream_info.bit_rate = payload[4];
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			audio->stream_info.chan_info,
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			audio->stream_info.sample_rate,
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			audio->stream_info.bit_stream_info);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	e_payload.stream_info = audio->stream_info;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		audio->rflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		wake_up(&audio->read_wait);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		if (audio->pcm_feedback)
arch/arm/mach-msm/qdsp5v2/audio_aac.c:					audio->dec_state =
arch/arm/mach-msm/qdsp5v2/audio_aac.c:					wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:					audio->dec_state =
arch/arm/mach-msm/qdsp5v2/audio_aac.c:					wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:				if (audio->pcm_feedback)
arch/arm/mach-msm/qdsp5v2/audio_aac.c:				audpp_route_stream(audio->dec_id,
arch/arm/mach-msm/qdsp5v2/audio_aac.c:						audio->source);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:				if (audio->pcm_feedback) {
arch/arm/mach-msm/qdsp5v2/audio_aac.c:				audio->dec_state =
arch/arm/mach-msm/qdsp5v2/audio_aac.c:				wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			audio->running = 1;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			audpp_dsp_set_vol_pan(audio->dec_id, &audio->vol_pan,
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			audpp_dsp_set_eq(audio->dec_id, audio->eq_enable,
arch/arm/mach-msm/qdsp5v2/audio_aac.c:					&audio->eq, POPP);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			audio->running = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		audio->wflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		audio->rflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		if (audio->pcm_feedback)
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		audio->teos = 1;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		memcpy(&audio->avsync[0], msg, sizeof(audio->avsync));
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		audio->avsync_flag = 1;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		wake_up(&audio->avsync_wait);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	msm_adsp_write(audio->audplay, audio->queue_id,\
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	cfg_dec_cmd.stream_id = audio->dec_id;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	cmd.common.dec_id = audio->dec_id;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	cmd.common.input_sampling_frequency = audio->out_sample_rate;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	cmd.format = audio->aac_config.format;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	cmd.audio_object = audio->aac_config.audio_object;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	cmd.ep_config = audio->aac_config.ep_config;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		audio->aac_config.aac_section_data_resilience_flag;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		audio->aac_config.aac_scalefactor_data_resilience_flag;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		audio->aac_config.aac_spectral_data_resilience_flag;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	cmd.sbr_on_flag = audio->aac_config.sbr_on_flag;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	cmd.sbr_ps_on_flag = audio->aac_config.sbr_ps_on_flag;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	cmd.channel_configuration = audio->aac_config.channel_configuration;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	cmd.object_number = audio->dec_id;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	if (audio->pcm_feedback)
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	if (audio->mfield)
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			(audio->out[idx].mfield_sz >> 1);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	    cmd.decoder_id = audio->dec_id;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	cmd.buf_ptr = audio->out[idx].addr;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	refresh_cmd.buf0_address = audio->in[audio->fill_next].addr;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	refresh_cmd.buf0_length = audio->in[audio->fill_next].size -
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		(audio->in[audio->fill_next].size % 1024)
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		+ (audio->mfield ? 24 : 0);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		audio->bitstream_error_threshold_value;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	cfg_cmd.max_buffers = audio->pcm_buf_count;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	if (!audio->running)
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	if (needed && !audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		audio->out_needed = 1;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		frame = audio->out + audio->out_tail;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			MM_DBG("frame %d free\n", audio->out_tail);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			audio->out_tail ^= 1;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	if (audio->out_needed) {
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		frame = audio->out + audio->out_tail;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			MM_DBG("frame %d busy\n", audio->out_tail);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			audplay_dsp_send_data_avail(audio, audio->out_tail,
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->out[0].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->out[1].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->out_head = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->out_tail = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->reserved = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	atomic_set(&audio->out_bytes, 0);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		audio->in[index].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->buf_refresh = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->read_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->fill_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	wake_up(&audio->read_wait);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	mutex_lock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	mutex_unlock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->avsync_flag = 1;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	wake_up(&audio->avsync_wait);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	spin_lock_irqsave(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	empty = !list_empty(&audio->event_queue);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	spin_unlock_irqrestore(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	return empty || audio->event_abort;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	spin_lock_irqsave(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	list_for_each_safe(ptr, next, &audio->event_queue) {
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		drv_evt = list_first_entry(&audio->event_queue,
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	list_for_each_safe(ptr, next, &audio->free_event_queue) {
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		drv_evt = list_first_entry(&audio->free_event_queue,
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	spin_unlock_irqrestore(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			audio->event_wait, audaac_events_pending(audio),
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			audio->event_wait, audaac_events_pending(audio));
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	if (audio->event_abort) {
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		audio->event_abort = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	spin_lock_irqsave(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	if (!list_empty(&audio->event_queue)) {
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		drv_evt = list_first_entry(&audio->event_queue,
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		list_add_tail(&drv_evt->list, &audio->free_event_queue);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	spin_unlock_irqrestore(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	if (audio->eq_enable == enable && !audio->eq_needs_commit)
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->eq_enable = enable;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	if (audio->running) {
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		audpp_dsp_set_eq(audio->dec_id, enable, &audio->eq, POPP);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		audio->eq_needs_commit = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	if (audio->dec_id == audio->avsync[0] && audio->avsync_flag) {
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		stats->sample_count = (audio->avsync[2] << 16) |
arch/arm/mach-msm/qdsp5v2/audio_aac.c:							(audio->avsync[3]);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		stats->byte_count = (audio->avsync[5] << 16) |
arch/arm/mach-msm/qdsp5v2/audio_aac.c:							(audio->avsync[6]);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		audio->avsync_flag = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		audio->avsync_flag = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		if (audpp_query_avsync(audio->dec_id) < 0)
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		rc = wait_event_interruptible_timeout(audio->avsync_wait,
arch/arm/mach-msm/qdsp5v2/audio_aac.c:				(audio->avsync_flag == 1),
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		else if ((rc > 0) || ((rc == 0) && (audio->avsync_flag == 1))) {
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		audio->vol_pan.volume = arg;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		if (audio->running)
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			audpp_dsp_set_vol_pan(audio->dec_id, &audio->vol_pan,
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		audio->vol_pan.pan = arg;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		if (audio->running)
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			audpp_dsp_set_vol_pan(audio->dec_id, &audio->vol_pan,
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		prev_state = audio->eq_enable;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		audio->eq_enable = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		if (copy_from_user(&audio->eq.num_bands, (void *) arg,
arch/arm/mach-msm/qdsp5v2/audio_aac.c:				sizeof(audio->eq) -
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		audio->eq_enable = prev_state;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		audio->eq_needs_commit = 1;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		if (mutex_trylock(&audio->get_event_lock)) {
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			mutex_unlock(&audio->get_event_lock);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		audio->event_abort = 1;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		wake_up(&audio->event_wait);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			rc = wait_event_interruptible_timeout(audio->wait,
arch/arm/mach-msm/qdsp5v2/audio_aac.c:				audio->dec_state != MSM_AUD_DECODER_STATE_NONE,
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			MM_INFO("dec_state %d rc = %d\n", audio->dec_state, rc);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			if (audio->dec_state != MSM_AUD_DECODER_STATE_SUCCESS)
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		audio->stopped = 1;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		audio->stopped = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		MM_DBG("AUDIO_FLUSH running=%d\n", audio->running);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		audio->rflush = 1;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		audio->wflush = 1;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		if (audio->running) {
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			audpp_flush(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_aac.c:				!audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			audio->rflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			audio->wflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		audio->rflush = 1;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		wake_up(&audio->read_wait);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		mutex_lock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		mutex_unlock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		rc = wait_event_interruptible(audio->read_wait,
arch/arm/mach-msm/qdsp5v2/audio_aac.c:				!audio->rflush);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			audio->out_sample_rate = config.sample_rate;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			audio->out_channel_mode = config.channel_count;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			audio->mfield = config.meta_field;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			config.buffer_size = (audio->out_dma_sz >> 1);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			config.sample_rate = audio->out_sample_rate;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			if (audio->out_channel_mode ==
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			if (copy_to_user((void *)arg, &audio->aac_config,
arch/arm/mach-msm/qdsp5v2/audio_aac.c:				sizeof(audio->aac_config)))
arch/arm/mach-msm/qdsp5v2/audio_aac.c:				audio->aac_config = usr_config;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			config.pcm_feedback = audio->pcm_feedback;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			if (config.pcm_feedback != audio->pcm_feedback) {
arch/arm/mach-msm/qdsp5v2/audio_aac.c:					audio->buf_refresh = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:					audio->read_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:					audio->fill_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		rc = audpp_pause(audio->dec_id, (int) arg);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		if (audio->stream_info.sample_rate == 0) {
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		if (copy_to_user((void *)arg, &audio->stream_info,
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		if ((audio->bitstream_error_info.err_msg_indicator &
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		if (copy_to_user((void *)arg, &audio->bitstream_error_info,
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		if (copy_to_user((void *) arg, &audio->dec_id,
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		if (copy_from_user(&audio->bitstream_error_threshold_value,
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	if (!audio->running || audio->pcm_feedback) {
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		(!audio->out[0].used &&
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		!audio->out[1].used &&
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		audio->out_needed) || audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	else if (audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	if (audio->reserved) {
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		frame = audio->out + audio->out_tail;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		((char *) frame->data)[0] = audio->rsv_byte;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			(!audio->out[0].used &&
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			!audio->out[1].used &&
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			audio->out_needed) || audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		else if (audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->teos = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		audio->teos || audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	if (audio->wflush)
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	if (!audio->pcm_feedback)
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	mutex_lock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		rc = wait_event_interruptible_timeout(audio->read_wait,
arch/arm/mach-msm/qdsp5v2/audio_aac.c:					      (audio->in[audio->read_next].
arch/arm/mach-msm/qdsp5v2/audio_aac.c:						used > 0) || (audio->stopped)
arch/arm/mach-msm/qdsp5v2/audio_aac.c:						|| (audio->rflush),
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		if (audio->stopped || audio->rflush) {
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		if (count < audio->in[audio->read_next].used) {
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			MM_DBG("read from in[%d]\n", audio->read_next);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			    (buf, audio->in[audio->read_next].data,
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			     audio->in[audio->read_next].used)) {
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			count -= audio->in[audio->read_next].used;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			buf += audio->in[audio->read_next].used;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			audio->in[audio->read_next].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			if ((++audio->read_next) == audio->pcm_buf_count)
arch/arm/mach-msm/qdsp5v2/audio_aac.c:				audio->read_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	if (audio->buf_refresh && !audio->rflush) {
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		audio->buf_refresh = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	mutex_unlock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	MM_DBG("signal input EOS reserved=%d\n", audio->reserved);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	if (audio->reserved) {
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		frame = audio->out + audio->out_head;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_aac.c:					|| (audio->stopped)
arch/arm/mach-msm/qdsp5v2/audio_aac.c:					|| (audio->wflush));
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	if (audio->stopped || audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	buf_ptr[0] = audio->rsv_byte;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->out_head ^= 1;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->reserved = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		audio->out[0].used, audio->out[1].used, audio->out_needed);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	frame = audio->out + audio->out_head;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		(audio->out_needed &&
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		audio->out[0].used == 0 &&
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		audio->out[1].used == 0)
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		|| (audio->stopped)
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		|| (audio->wflush));
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	if (audio->stopped || audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->out_head ^= 1;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		frame = audio->out + audio->out_head;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_aac.c:						|| (audio->stopped)
arch/arm/mach-msm/qdsp5v2/audio_aac.c:						|| (audio->wflush));
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		if (audio->stopped || audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		if (audio->mfield) {
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		if (audio->reserved) {
arch/arm/mach-msm/qdsp5v2/audio_aac.c:				audio->rsv_byte);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			*cpy_ptr = audio->rsv_byte;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			audio->reserved = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			audio->rsv_byte = ((char *) frame->data)[dsize - 1];
arch/arm/mach-msm/qdsp5v2/audio_aac.c:					audio->rsv_byte);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			audio->reserved = 1;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			audio->out_head ^= 1;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	auddev_unregister_evt_listner(AUDDEV_CLNT_DEC, audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	msm_adsp_put(audio->audplay);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audpp_adec_free(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	unregister_early_suspend(&audio->suspend_ctl.node);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->event_abort = 1;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	wake_up(&audio->event_wait);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	iounmap(audio->map_v_write);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	free_contiguous_memory_by_paddr(audio->phys);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	iounmap(audio->map_v_read);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	free_contiguous_memory_by_paddr(audio->read_phys);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	if (audio->dentry)
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		debugfs_remove(audio->dentry);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	spin_lock_irqsave(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	if (!list_empty(&audio->free_event_queue)) {
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		e_node = list_first_entry(&audio->free_event_queue,
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	list_add_tail(&e_node->list, &audio->event_queue);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	spin_unlock_irqrestore(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	wake_up(&audio->event_wait);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	n = scnprintf(buffer, debug_bufmax, "opened %d\n", audio->opened);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			"enabled %d\n", audio->enabled);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			"stopped %d\n", audio->stopped);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			"pcm_feedback %d\n", audio->pcm_feedback);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			"out_buf_sz %d\n", audio->out[0].size);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			"pcm_buf_count %d \n", audio->pcm_buf_count);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			"pcm_buf_sz %d \n", audio->in[0].size);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			"volume %x \n", audio->vol_pan.volume);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			"sample rate %d \n", audio->out_sample_rate);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			"channel mode %d \n", audio->out_channel_mode);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			"wflush %d\n", audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			"rflush %d\n", audio->rflush);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			"running %d \n", audio->running);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			"dec state %d \n", audio->dec_state);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			"out_needed %d \n", audio->out_needed);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			"out_head %d \n", audio->out_head);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			"out_tail %d \n", audio->out_tail);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			"out[0].used %d \n", audio->out[0].used);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			"out[1].used %d \n", audio->out[1].used);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			"buffer_refresh %d \n", audio->buf_refresh);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			"read_next %d \n", audio->read_next);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			"fill_next %d \n", audio->fill_next);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	for (i = 0; i < audio->pcm_buf_count; i++)
arch/arm/mach-msm/qdsp5v2/audio_aac.c:				"in[%d].used %d \n", i, audio->in[i].used);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		audio->pcm_feedback = NON_TUNNEL_MODE_PLAYBACK;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		audio->pcm_feedback = TUNNEL_MODE_PLAYBACK;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	decid = audpp_adec_alloc(dec_attrb, &audio->module_name,
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			&audio->queue_id);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->dec_id = decid & MSM_AUD_DECODER_MASK;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		audio->phys = allocate_contiguous_ebi_nomap(pmem_sz, SZ_4K);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		if (audio->phys) {
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			audio->map_v_write =
arch/arm/mach-msm/qdsp5v2/audio_aac.c:					ioremap(audio->phys,
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			if (IS_ERR(audio->map_v_write)) {
arch/arm/mach-msm/qdsp5v2/audio_aac.c:				free_contiguous_memory_by_paddr(audio->phys);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:				audpp_adec_free(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			audio->data = (u8 *)audio->map_v_write;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:				0x%08x\n", audio->phys, (int)audio->data);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			audpp_adec_free(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->out_dma_sz = pmem_sz;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->read_phys = allocate_contiguous_ebi_nomap(PCM_BUFSZ_MIN
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	if (!audio->read_phys) {
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		iounmap(audio->map_v_write);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		free_contiguous_memory_by_paddr(audio->phys);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		audpp_adec_free(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->map_v_read = ioremap(audio->read_phys,
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	if (IS_ERR(audio->map_v_read)) {
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		iounmap(audio->map_v_write);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		free_contiguous_memory_by_paddr(audio->phys);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		free_contiguous_memory_by_paddr(audio->read_phys);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		audpp_adec_free(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->read_data = audio->map_v_read;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:				audio->read_phys, (int)audio->read_data);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	rc = msm_adsp_get(audio->module_name, &audio->audplay,
arch/arm/mach-msm/qdsp5v2/audio_aac.c:				audio->module_name, (int)audio);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	mutex_init(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	mutex_init(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	mutex_init(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	mutex_init(&audio->get_event_lock);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	spin_lock_init(&audio->dsp_lock);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	spin_lock_init(&audio->event_queue_lock);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	INIT_LIST_HEAD(&audio->free_event_queue);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	INIT_LIST_HEAD(&audio->event_queue);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	init_waitqueue_head(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	init_waitqueue_head(&audio->read_wait);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	init_waitqueue_head(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	init_waitqueue_head(&audio->event_wait);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	init_waitqueue_head(&audio->avsync_wait);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->out[0].data = audio->data + 0;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->out[0].addr = audio->phys + 0;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->out[0].size = audio->out_dma_sz >> 1;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->out[1].data = audio->data + audio->out[0].size;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->out[1].addr = audio->phys + audio->out[0].size;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->out[1].size = audio->out[0].size;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->pcm_buf_count = PCM_BUF_MAX_COUNT;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		audio->in[index].data = audio->read_data + offset;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		audio->in[index].addr = audio->read_phys + offset;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		audio->in[index].size = PCM_BUFSZ_MIN;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:		audio->in[index].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->out_sample_rate = 44100;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->out_channel_mode = AUDPP_CMD_PCM_INTF_STEREO_V;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->aac_config.format = AUDIO_AAC_FORMAT_ADTS;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->aac_config.audio_object = AUDIO_AAC_OBJECT_LC;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->aac_config.ep_config = 0;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->aac_config.aac_section_data_resilience_flag =
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->aac_config.aac_scalefactor_data_resilience_flag =
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->aac_config.aac_spectral_data_resilience_flag =
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->aac_config.sbr_on_flag = AUDIO_AAC_SBR_ON_FLAG_ON;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->aac_config.sbr_on_flag = AUDIO_AAC_SBR_ON_FLAG_OFF;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->aac_config.sbr_ps_on_flag = AUDIO_AAC_SBR_PS_ON_FLAG_ON;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->aac_config.sbr_ps_on_flag = AUDIO_AAC_SBR_PS_ON_FLAG_OFF;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->aac_config.dual_mono_mode = AUDIO_AAC_DUAL_MONO_PL_SR;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->aac_config.channel_configuration = 2;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->vol_pan.volume = 0x2000;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->bitstream_error_threshold_value =
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->opened = 1;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->device_events = AUDDEV_EVT_DEV_RDY
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	rc = auddev_register_evt_listner(audio->device_events,
arch/arm/mach-msm/qdsp5v2/audio_aac.c:					audio->dec_id,
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	snprintf(name, sizeof name, "msm_aac_%04x", audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->dentry = debugfs_create_file(name, S_IFREG | S_IRUGO,
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	if (IS_ERR(audio->dentry))
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->suspend_ctl.node.level = EARLY_SUSPEND_LEVEL_DISABLE_FB;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->suspend_ctl.node.resume = audaac_resume;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->suspend_ctl.node.suspend = audaac_suspend;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audio->suspend_ctl.audio = audio;
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	register_early_suspend(&audio->suspend_ctl.node);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:			list_add_tail(&e_node->list, &audio->free_event_queue);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	memset(&audio->stream_info, 0, sizeof(struct msm_audio_bitstream_info));
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	memset(&audio->bitstream_error_info, 0,
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	msm_adsp_put(audio->audplay);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	iounmap(audio->map_v_write);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	free_contiguous_memory_by_paddr(audio->phys);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	iounmap(audio->map_v_read);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	free_contiguous_memory_by_paddr(audio->read_phys);
arch/arm/mach-msm/qdsp5v2/audio_aac.c:	audpp_adec_free(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:/* must be called with audio->lock held */
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	if (audio->enabled)
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	audio->dec_state = MSM_AUD_DECODER_STATE_NONE;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	audio->out_tail = 0;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	if (msm_adsp_enable(audio->audplay)) {
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	if (audpp_enable(audio->dec_id, audio_dsp_event, audio)) {
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		msm_adsp_disable(audio->audplay);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	audio->enabled = 1;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		audio->source |= (0x1 << evt_payload->routing_id);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		if (audio->running == 1 && audio->enabled == 1)
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			audpp_route_stream(audio->dec_id, audio->source);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		if (audio->dec_state == MSM_AUD_DECODER_STATE_SUCCESS &&
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:							audio->enabled == 1)
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			audpp_route_stream(audio->dec_id,
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:				msm_snddev_route_dec(audio->dec_id));
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		audio->vol_pan.volume = evt_payload->session_vol;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:				audio->vol_pan.volume);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		if (audio->running)
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			audpp_dsp_set_vol_pan(audio->dec_id, &audio->vol_pan,
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:/* must be called with audio->lock held */
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	if (audio->enabled) {
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		audio->enabled = 0;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		audio->dec_state = MSM_AUD_DECODER_STATE_NONE;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		rc = wait_event_interruptible_timeout(audio->wait,
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:				audio->dec_state != MSM_AUD_DECODER_STATE_NONE,
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		else if (audio->dec_state != MSM_AUD_DECODER_STATE_CLOSE)
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		wake_up(&audio->read_wait);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		msm_adsp_disable(audio->audplay);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		audpp_disable(audio->dec_id, audio);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	if (audio->rflush)
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		if (audio->in[audio->fill_next].addr ==
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:				in[%d] ready\n", audio->fill_next);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			audio->in[audio->fill_next].used =
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			if ((++audio->fill_next) == audio->pcm_buf_count)
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:				audio->fill_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:				audio->in[audio->fill_next].addr,
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	if (audio->in[audio->fill_next].used == 0) {
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		audio->buf_refresh = 1;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	wake_up(&audio->read_wait);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:					audio->dec_state =
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:					wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:					audio->dec_state =
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:					wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:				if (audio->pcm_feedback)
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:				audpp_route_stream(audio->dec_id,
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:						audio->source);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:				if (audio->pcm_feedback) {
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:				audio->dec_state =
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:				wake_up(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			audio->running = 1;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			audpp_dsp_set_vol_pan(audio->dec_id, &audio->vol_pan,
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			audpp_dsp_set_eq(audio->dec_id,	audio->eq_enable,
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:					&audio->eq, POPP);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			audio->running = 0;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		audio->wflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		audio->rflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		if (audio->pcm_feedback)
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		audio->teos = 1;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		memcpy(&audio->avsync[0], msg, sizeof(audio->avsync));
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		audio->avsync_flag = 1;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		wake_up(&audio->avsync_wait);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	msm_adsp_write(audio->audplay, audio->queue_id, \
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	cfg_dec_cmd.stream_id = audio->dec_id;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	cmd.common.dec_id = audio->dec_id;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	cmd.common.input_sampling_frequency = audio->out_sample_rate;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	cmd.stereo_cfg =  audio->out_channel_mode;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	cmd.block_size =  audio->out_block_size;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	cmd.object_number = audio->dec_id;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	if (audio->pcm_feedback)
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	refresh_cmd.buf0_address = audio->in[audio->fill_next].addr;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	refresh_cmd.buf0_length = audio->in[audio->fill_next].size;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	cfg_cmd.max_buffers = audio->pcm_buf_count;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	if (audio->mfield)
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		(audio->out[idx].mfield_sz >> 1);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		cmd.decoder_id		= audio->dec_id;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	cmd.buf_ptr		= audio->out[idx].addr;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	if (!audio->running)
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	if (audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		audio->out_needed = 1;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	if (needed && !audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		audio->out_needed = 1;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		frame = audio->out + audio->out_tail;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			MM_DBG("frame %d free\n", audio->out_tail);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			audio->out_tail ^= 1;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	if (audio->out_needed) {
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		frame = audio->out + audio->out_tail;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			MM_DBG("frame %d busy\n", audio->out_tail);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			audplay_dsp_send_data_avail(audio, audio->out_tail,
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			audio->out_needed = 0;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	audio->out[0].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	audio->out[1].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	audio->out_head = 0;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	audio->out_tail = 0;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	audio->reserved = 0;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	atomic_set(&audio->out_bytes, 0);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		audio->in[index].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	audio->buf_refresh = 0;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	audio->read_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	audio->fill_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	wake_up(&audio->read_wait);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	mutex_lock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	mutex_unlock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	audio->avsync_flag = 1;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	wake_up(&audio->avsync_wait);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	spin_lock_irqsave(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	empty = !list_empty(&audio->event_queue);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	spin_unlock_irqrestore(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	return empty || audio->event_abort;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	spin_lock_irqsave(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	list_for_each_safe(ptr, next, &audio->event_queue) {
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		drv_evt = list_first_entry(&audio->event_queue,
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	list_for_each_safe(ptr, next, &audio->free_event_queue) {
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		drv_evt = list_first_entry(&audio->free_event_queue,
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	spin_unlock_irqrestore(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			audio->event_wait, audadpcm_events_pending(audio),
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			audio->event_wait, audadpcm_events_pending(audio));
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	if (audio->event_abort) {
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		audio->event_abort = 0;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	spin_lock_irqsave(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	if (!list_empty(&audio->event_queue)) {
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		drv_evt = list_first_entry(&audio->event_queue,
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		list_add_tail(&drv_evt->list, &audio->free_event_queue);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	spin_unlock_irqrestore(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	if (audio->eq_enable == enable && !audio->eq_needs_commit)
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	audio->eq_enable = enable;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	if (audio->running) {
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		audpp_dsp_set_eq(audio->dec_id,	enable, &audio->eq, POPP);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		audio->eq_needs_commit = 0;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	if (audio->dec_id == audio->avsync[0] && audio->avsync_flag) {
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		stats->sample_count = (audio->avsync[2] << 16) |
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:						(audio->avsync[3]);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		stats->byte_count = (audio->avsync[5] << 16) |
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:						(audio->avsync[6]);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		audio->avsync_flag = 0;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		audio->avsync_flag = 0;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		if (audpp_query_avsync(audio->dec_id) < 0)
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		rc = wait_event_interruptible_timeout(audio->avsync_wait,
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:				(audio->avsync_flag == 1),
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		else if ((rc > 0) || ((rc == 0) && (audio->avsync_flag == 1))) {
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		audio->vol_pan.volume = arg;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		if (audio->running)
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			audpp_dsp_set_vol_pan(audio->dec_id, &audio->vol_pan,
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		audio->vol_pan.pan = arg;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		if (audio->running)
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			audpp_dsp_set_vol_pan(audio->dec_id, &audio->vol_pan,
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		prev_state = audio->eq_enable;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		audio->eq_enable = 0;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		if (copy_from_user(&audio->eq.num_bands, (void *) arg,
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:				sizeof(audio->eq) -
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		audio->eq_enable = prev_state;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		audio->eq_needs_commit = 1;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		if (mutex_trylock(&audio->get_event_lock)) {
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			mutex_unlock(&audio->get_event_lock);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		audio->event_abort = 1;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		wake_up(&audio->event_wait);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			rc = wait_event_interruptible_timeout(audio->wait,
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:				audio->dec_state != MSM_AUD_DECODER_STATE_NONE,
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			MM_INFO("dec_state %d rc = %d\n", audio->dec_state, rc);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			if (audio->dec_state != MSM_AUD_DECODER_STATE_SUCCESS)
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		audio->stopped = 1;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		audio->stopped = 0;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		audio->rflush = 1;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		audio->wflush = 1;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		if (audio->running) {
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			audpp_flush(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:				!audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			audio->rflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			audio->wflush = 0;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		audio->mfield = config.meta_field;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		audio->out_sample_rate = config.sample_rate;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		audio->out_channel_mode = config.channel_count;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		audio->out_block_size = config.bits;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		config.buffer_size = (audio->out_dma_sz >> 1);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		config.sample_rate = audio->out_sample_rate;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		if (audio->out_channel_mode == AUDPP_CMD_PCM_INTF_MONO_V)
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			config.pcm_feedback = audio->pcm_feedback;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			if (config.pcm_feedback != audio->pcm_feedback) {
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			if ((config.pcm_feedback) && (!audio->read_data)) {
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:				audio->read_phys =
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:				if (!audio->read_phys) {
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:				audio->map_v_read = ioremap(
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:							audio->read_phys,
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:				if (IS_ERR(audio->map_v_read)) {
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:							audio->read_phys);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:					audio->read_data =
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:						audio->map_v_read;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:					audio->buf_refresh = 0;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:					audio->pcm_buf_count =
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:					audio->read_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:					audio->fill_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:						audio->in[index].data =
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:						    audio->read_data + offset;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:						audio->in[index].addr =
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:						    audio->read_phys + offset;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:						audio->in[index].size =
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:						audio->in[index].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:						audio->read_phys,
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:						(int)audio->read_data);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		rc = audpp_pause(audio->dec_id, (int) arg);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		if (copy_to_user((void *) arg, &audio->dec_id,
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	if (!audio->running || audio->pcm_feedback) {
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		(!audio->out[0].used &&
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		!audio->out[1].used &&
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		audio->out_needed) || audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	else if (audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	if (audio->reserved) {
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		frame = audio->out + audio->out_tail;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		((char *) frame->data)[0] = audio->rsv_byte;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			(!audio->out[0].used &&
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			!audio->out[1].used &&
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			audio->out_needed) || audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		else if (audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	audio->teos = 0;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		audio->teos || audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	if (audio->wflush)
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	if (!audio->pcm_feedback)
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	mutex_lock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		rc = wait_event_interruptible(audio->read_wait,
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			(audio->in[audio->read_next].used > 0) ||
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			(audio->stopped) || (audio->rflush));
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		if (audio->stopped || audio->rflush) {
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		if (count < audio->in[audio->read_next].used) {
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:					audio->read_next);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			    (buf, audio->in[audio->read_next].data,
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			     audio->in[audio->read_next].used)) {
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			count -= audio->in[audio->read_next].used;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			buf += audio->in[audio->read_next].used;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			audio->in[audio->read_next].used = 0;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			if ((++audio->read_next) == audio->pcm_buf_count)
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:				audio->read_next = 0;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	if (audio->buf_refresh && !audio->rflush) {
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		audio->buf_refresh = 0;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	mutex_unlock(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	if (audio->reserved) {
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		frame = audio->out + audio->out_head;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:				|| (audio->stopped)
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:				|| (audio->wflush));
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		if (audio->stopped || audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		buf_ptr[0] = audio->rsv_byte;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		audio->out_head ^= 1;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		audio->reserved = 0;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	frame = audio->out + audio->out_head;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		(audio->out_needed &&
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		audio->out[0].used == 0 &&
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		audio->out[1].used == 0)
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		|| (audio->stopped)
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		|| (audio->wflush));
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	if (audio->stopped || audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	audio->out_head ^= 1;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		frame = audio->out + audio->out_head;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:					      || (audio->stopped)
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:						  || (audio->wflush));
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		if (audio->stopped || audio->wflush) {
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		if (audio->mfield) {
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		if (audio->reserved) {
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			MM_DBG("append reserved byte %x\n", audio->rsv_byte);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			*cpy_ptr = audio->rsv_byte;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			audio->reserved = 0;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			audio->rsv_byte = ((char *) frame->data)[dsize - 1];
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:					audio->rsv_byte);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			audio->reserved = 1;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			audio->out_head ^= 1;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	auddev_unregister_evt_listner(AUDDEV_CLNT_DEC, audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	msm_adsp_put(audio->audplay);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	audpp_adec_free(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	unregister_early_suspend(&audio->suspend_ctl.node);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	audio->event_abort = 1;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	wake_up(&audio->event_wait);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	iounmap(audio->map_v_write);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	free_contiguous_memory_by_paddr(audio->phys);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	if (audio->read_data) {
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		iounmap(audio->map_v_read);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		free_contiguous_memory_by_paddr(audio->read_phys);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	if (audio->dentry)
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		debugfs_remove(audio->dentry);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	spin_lock_irqsave(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	if (!list_empty(&audio->free_event_queue)) {
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		e_node = list_first_entry(&audio->free_event_queue,
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	list_add_tail(&e_node->list, &audio->event_queue);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	spin_unlock_irqrestore(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	wake_up(&audio->event_wait);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	n = scnprintf(buffer, debug_bufmax, "opened %d\n", audio->opened);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:				   "enabled %d\n", audio->enabled);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:				   "stopped %d\n", audio->stopped);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:				   "pcm_feedback %d\n", audio->pcm_feedback);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:				   "out_buf_sz %d\n", audio->out[0].size);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:				   "pcm_buf_count %d \n", audio->pcm_buf_count);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:				   "pcm_buf_sz %d \n", audio->in[0].size);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:				   "volume %x \n", audio->vol_pan.volume);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:				   "sample rate %d \n", audio->out_sample_rate);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		"channel mode %d \n", audio->out_channel_mode);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:				   "wflush %d\n", audio->wflush);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:				   "rflush %d\n", audio->rflush);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:				   "running %d \n", audio->running);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			"dec state %d \n", audio->dec_state);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:				   "out_needed %d \n", audio->out_needed);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:				   "out_head %d \n", audio->out_head);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:				   "out_tail %d \n", audio->out_tail);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:				   "out[0].used %d \n", audio->out[0].used);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:				   "out[1].used %d \n", audio->out[1].used);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:				   "buffer_refresh %d \n", audio->buf_refresh);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:				   "read_next %d \n", audio->read_next);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:				   "fill_next %d \n", audio->fill_next);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	for (i = 0; i < audio->pcm_buf_count; i++)
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			"in[%d].size %d \n", i, audio->in[i].used);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		audio->pcm_feedback = NON_TUNNEL_MODE_PLAYBACK;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		audio->pcm_feedback = TUNNEL_MODE_PLAYBACK;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	decid = audpp_adec_alloc(dec_attrb, &audio->module_name,
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			&audio->queue_id);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	audio->dec_id = decid & MSM_AUD_DECODER_MASK;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		audio->phys = allocate_contiguous_ebi_nomap(pmem_sz,
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:		if (audio->phys) {
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			audio->map_v_write = ioremap(audio->phys, pmem_sz);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			if (IS_ERR(audio->map_v_write)) {
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:				free_contiguous_memory_by_paddr(audio->phys);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:				audpp_adec_free(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			audio->data = audio->map_v_write;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:				0x%08x\n", audio->phys, (int)audio->data);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			audpp_adec_free(audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	audio->out_dma_sz = pmem_sz;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	rc = msm_adsp_get(audio->module_name, &audio->audplay,
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:				audio->module_name, (int)audio);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	mutex_init(&audio->lock);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	mutex_init(&audio->write_lock);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	mutex_init(&audio->read_lock);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	mutex_init(&audio->get_event_lock);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	spin_lock_init(&audio->dsp_lock);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	init_waitqueue_head(&audio->write_wait);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	init_waitqueue_head(&audio->read_wait);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	INIT_LIST_HEAD(&audio->free_event_queue);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	INIT_LIST_HEAD(&audio->event_queue);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	init_waitqueue_head(&audio->wait);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	init_waitqueue_head(&audio->event_wait);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	spin_lock_init(&audio->event_queue_lock);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	init_waitqueue_head(&audio->avsync_wait);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	audio->out[0].data = audio->data + 0;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	audio->out[0].addr = audio->phys + 0;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	audio->out[0].size = audio->out_dma_sz >> 1;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	audio->out[1].data = audio->data + audio->out[0].size;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	audio->out[1].addr = audio->phys + audio->out[0].size;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	audio->out[1].size = audio->out[0].size;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	audio->out_sample_rate = 44100;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	audio->out_channel_mode = AUDPP_CMD_PCM_INTF_STEREO_V;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	audio->vol_pan.volume = 0x2000;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	audio->opened = 1;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	audio->device_events = AUDDEV_EVT_DEV_RDY
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	rc = auddev_register_evt_listner(audio->device_events,
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:					audio->dec_id,
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	snprintf(name, sizeof name, "msm_adpcm_%04x", audio->dec_id);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	audio->dentry = debugfs_create_file(name, S_IFREG | S_IRUGO,
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	if (IS_ERR(audio->dentry))
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	audio->suspend_ctl.node.level = EARLY_SUSPEND_LEVEL_DISABLE_FB;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	audio->suspend_ctl.node.resume = audadpcm_resume;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	audio->suspend_ctl.node.suspend = audadpcm_suspend;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	audio->suspend_ctl.audio = audio;
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	register_early_suspend(&audio->suspend_ctl.node);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:			list_add_tail(&e_node->list, &audio->free_event_queue);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	msm_adsp_put(audio->audplay);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	iounmap(audio->map_v_write);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	free_contiguous_memory_by_paddr(audio->phys);
arch/arm/mach-msm/qdsp5v2/audio_adpcm.c:	audpp_adec_free(audio->dec_id);
arch/arm/mach-msm/qdsp6v2/audio_evrc.c:						audio, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_evrc.c:		if (audio->feedback == NON_TUNNEL_MODE) {
arch/arm/mach-msm/qdsp6v2/audio_evrc.c:			rc = q6asm_enc_cfg_blk_pcm(audio->ac,
arch/arm/mach-msm/qdsp6v2/audio_evrc.c:					audio->pcm_cfg.sample_rate,
arch/arm/mach-msm/qdsp6v2/audio_evrc.c:					audio->pcm_cfg.channel_count);
arch/arm/mach-msm/qdsp6v2/audio_evrc.c:		audio->eos_rsp = 0;
arch/arm/mach-msm/qdsp6v2/audio_evrc.c:		audio->eos_flag = 0;
arch/arm/mach-msm/qdsp6v2/audio_evrc.c:			audio->enabled = 1;
arch/arm/mach-msm/qdsp6v2/audio_evrc.c:			audio->enabled = 0;
arch/arm/mach-msm/qdsp6v2/audio_evrc.c:						audio->ac->session,
arch/arm/mach-msm/qdsp6v2/audio_evrc.c:						audio->enabled);
arch/arm/mach-msm/qdsp6v2/audio_evrc.c:		if (audio->stopped == 1)
arch/arm/mach-msm/qdsp6v2/audio_evrc.c:			audio->stopped = 0;
arch/arm/mach-msm/qdsp6v2/audio_evrc.c:		rc = audio->codec_ioctl(file, cmd, arg);
arch/arm/mach-msm/qdsp6v2/audio_evrc.c:	audio->pcm_cfg.buffer_size = PCM_BUFSZ_MIN;
arch/arm/mach-msm/qdsp6v2/audio_evrc.c:	audio->ac = q6asm_audio_client_alloc((app_cb) q6_audio_cb,
arch/arm/mach-msm/qdsp6v2/audio_evrc.c:	if (!audio->ac) {
arch/arm/mach-msm/qdsp6v2/audio_evrc.c:		rc = q6asm_open_read_write(audio->ac, FORMAT_LINEAR_PCM,
arch/arm/mach-msm/qdsp6v2/audio_evrc.c:		audio->feedback = NON_TUNNEL_MODE;
arch/arm/mach-msm/qdsp6v2/audio_evrc.c:		audio->buf_cfg.frames_per_buf = 0x01;
arch/arm/mach-msm/qdsp6v2/audio_evrc.c:		audio->buf_cfg.meta_info_enable = 0x01;
arch/arm/mach-msm/qdsp6v2/audio_evrc.c:		rc = q6asm_open_write(audio->ac, FORMAT_EVRC);
arch/arm/mach-msm/qdsp6v2/audio_evrc.c:		audio->feedback = TUNNEL_MODE;
arch/arm/mach-msm/qdsp6v2/audio_evrc.c:		audio->buf_cfg.meta_info_enable = 0x00;
arch/arm/mach-msm/qdsp6v2/audio_evrc.c:	snprintf(name, sizeof name, "msm_evrc_%04x", audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_evrc.c:	audio->dentry = debugfs_create_file(name, S_IFREG | S_IRUGO,
arch/arm/mach-msm/qdsp6v2/audio_evrc.c:	if (IS_ERR(audio->dentry))
arch/arm/mach-msm/qdsp6v2/audio_evrc.c:						audio->feedback,
arch/arm/mach-msm/qdsp6v2/audio_evrc.c:						audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_evrc.c:	q6asm_audio_client_free(audio->ac);
arch/arm/mach-msm/qdsp6v2/q6audio_v1_aio.c:		if (audio->feedback) { /* Non-Tunnel mode */
arch/arm/mach-msm/qdsp6v2/q6audio_v1_aio.c:			audio->eos_rsp = 1;
arch/arm/mach-msm/qdsp6v2/q6audio_v1_aio.c:			if (audio->eos_flag &&
arch/arm/mach-msm/qdsp6v2/q6audio_v1_aio.c:				(audio->eos_write_payload.aio_buf.buf_addr)) {
arch/arm/mach-msm/qdsp6v2/q6audio_v1_aio.c:						audio->eos_write_payload);
arch/arm/mach-msm/qdsp6v2/q6audio_v1_aio.c:				memset(&audio->eos_write_payload , 0,
arch/arm/mach-msm/qdsp6v2/q6audio_v1_aio.c:				audio->eos_flag = 0;
arch/arm/mach-msm/qdsp6v2/q6audio_v1_aio.c:			audio->eos_rsp = 1;
arch/arm/mach-msm/qdsp6v2/q6audio_v1_aio.c:			wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp6v2/q6audio_v1_aio.c:			wake_up(&audio->cmd_wait);
arch/arm/mach-msm/qdsp6v2/q6audio_v1_aio.c:		__func__, audio, audio->pcm_cfg.sample_rate,
arch/arm/mach-msm/qdsp6v2/q6audio_v1_aio.c:		audio->pcm_cfg.channel_count);
arch/arm/mach-msm/qdsp6v2/q6audio_v1_aio.c:		audio->pcm_cfg.sample_rate = payload[0];
arch/arm/mach-msm/qdsp6v2/q6audio_v1_aio.c:		audio->pcm_cfg.channel_count = payload[1] & 0xFFFF;
arch/arm/mach-msm/qdsp6v2/q6audio_v1_aio.c:		e_payload.stream_info.chan_info = audio->pcm_cfg.channel_count;
arch/arm/mach-msm/qdsp6v2/q6audio_v1_aio.c:		e_payload.stream_info.sample_rate = audio->pcm_cfg.sample_rate;
arch/arm/mach-msm/qdsp6v2/q6audio_v1_aio.c:				audio->wflush = 0;
arch/arm/mach-msm/qdsp6v2/q6audio_v1_aio.c:				audio->rflush = 0;
arch/arm/mach-msm/qdsp6v2/q6audio_v1_aio.c:				audio->wflush = 0;
arch/arm/mach-msm/qdsp6v2/q6audio_v1_aio.c:				audio->rflush = 0;
arch/arm/mach-msm/qdsp6v2/q6audio_v1_aio.c:	if (audio->rflush)
arch/arm/mach-msm/qdsp6v2/q6audio_v1_aio.c:	atomic_add(payload[2], &audio->in_bytes);
arch/arm/mach-msm/qdsp6v2/q6audio_v1_aio.c:	atomic_add(payload[7], &audio->in_samples);
arch/arm/mach-msm/qdsp6v2/q6audio_v1_aio.c:	spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp6v2/q6audio_v1_aio.c:	BUG_ON(list_empty(&audio->in_queue));
arch/arm/mach-msm/qdsp6v2/q6audio_v1_aio.c:	filled_buf = list_first_entry(&audio->in_queue,
arch/arm/mach-msm/qdsp6v2/q6audio_v1_aio.c:		spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp6v2/q6audio_v1_aio.c:		if (audio->eos_rsp == 0x1) {
arch/arm/mach-msm/qdsp6v2/q6audio_v1_aio.c:			audio->eos_rsp = 0;
arch/arm/mach-msm/qdsp6v2/q6audio_v1_aio.c:			audio->eos_rsp = 0;
arch/arm/mach-msm/qdsp6v2/q6audio_v1_aio.c:		spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:		enc_cfg = audio->enc_cfg;
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:				audio->ac->session, audio->buf_alloc);
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:		if (audio->enabled == 1) {
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:				__func__, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:		rc = q6asm_enc_cfg_blk_amrnb(audio->ac,
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:			audio->buf_cfg.frames_per_buf,
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:				"failed\n", __func__, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:		if (audio->feedback == NON_TUNNEL_MODE) {
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:			rc = q6asm_media_format_block_pcm(audio->ac,
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:				audio->pcm_cfg.sample_rate,
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:				audio->pcm_cfg.channel_count);
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:				"failed\n", __func__, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:				__func__, audio->ac->session,
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:				audio->enabled);
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:			audio->enabled = 1;
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:			audio->enabled = 0;
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:					audio->ac->session, rc);
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:		while (cnt++ < audio->str_cfg.buffer_count)
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:			q6asm_read(audio->ac); /* Push buffer to DSP */
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:				__func__, audio->ac->session, audio->enabled);
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:				audio->ac->session, rc);
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:		if (copy_to_user((void *)arg, audio->enc_cfg,
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:		enc_cfg = audio->enc_cfg;
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:				__func__, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:				__func__, audio->ac->session,
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:	audio->enc_cfg = kzalloc(sizeof(struct msm_audio_amrnb_enc_config_v2),
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:	if (audio->enc_cfg == NULL) {
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:				"config param\n", __func__, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:	enc_cfg = audio->enc_cfg;
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:	mutex_init(&audio->lock);
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:	mutex_init(&audio->read_lock);
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:	mutex_init(&audio->write_lock);
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:	spin_lock_init(&audio->dsp_lock);
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:	init_waitqueue_head(&audio->read_wait);
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:	init_waitqueue_head(&audio->write_wait);
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:	audio->str_cfg.buffer_size = FRAME_SIZE;
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:	audio->str_cfg.buffer_count = FRAME_NUM;
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:	audio->min_frame_size = 32;
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:	audio->max_frames_per_buf = 10;
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:	audio->pcm_cfg.buffer_size = PCM_BUF_SIZE;
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:	audio->pcm_cfg.buffer_count = PCM_BUF_COUNT;
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:	audio->pcm_cfg.channel_count = 1;
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:	audio->pcm_cfg.sample_rate = 8000;
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:	audio->buf_cfg.meta_info_enable = 0x01;
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:	audio->buf_cfg.frames_per_buf = 0x01;
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:	audio->ac = q6asm_audio_client_alloc((app_cb)q6asm_in_cb,
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:	if (!audio->ac) {
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:		kfree(audio->enc_cfg);
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:		audio->feedback = NON_TUNNEL_MODE;
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:		rc = q6asm_open_read_write(audio->ac, FORMAT_AMRNB,
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:				__func__, audio->ac->session, rc);
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:				__func__, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:		audio->feedback = TUNNEL_MODE;
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:		rc = q6asm_open_read(audio->ac, FORMAT_AMRNB);
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:				__func__, audio->ac->session, rc);
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:		rc = q6asm_reg_tx_overflow(audio->ac, 0x01);
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:				"failed rc=%d\n", __func__, audio->ac->session,
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:				__func__, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:				audio->ac->session);
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:	audio->opened = 1;
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:	atomic_set(&audio->in_count, PCM_BUF_COUNT);
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:	atomic_set(&audio->out_count, 0x00);
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:	audio->enc_ioctl = amrnb_in_ioctl;
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:	pr_info("%s:session id %d: success\n", __func__, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:	q6asm_audio_client_free(audio->ac);
arch/arm/mach-msm/qdsp6v2/amrnb_in.c:	kfree(audio->enc_cfg);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:	rc = q6asm_cmd(audio->ac, CMD_PAUSE);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:				audio->ac->session, rc);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:	pr_debug("%s:session id %d: flush\n", __func__, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:	if (audio->enabled) {
arch/arm/mach-msm/qdsp6v2/audio_utils.c:				 __func__, audio->ac->session, rc);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		rc = q6asm_cmd(audio->ac, CMD_FLUSH);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:				__func__, audio->ac->session, rc);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		q6asm_run(audio->ac, 0x00, 0x00, 0x00);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:	audio->rflush = 1;
arch/arm/mach-msm/qdsp6v2/audio_utils.c:	audio->wflush = 1;
arch/arm/mach-msm/qdsp6v2/audio_utils.c:	memset(audio->out_frame_info, 0, sizeof(audio->out_frame_info));
arch/arm/mach-msm/qdsp6v2/audio_utils.c:	wake_up(&audio->read_wait);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:	mutex_lock(&audio->read_lock);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:	audio->rflush = 0;
arch/arm/mach-msm/qdsp6v2/audio_utils.c:	mutex_unlock(&audio->read_lock);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:	wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:	mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:	audio->wflush = 0;
arch/arm/mach-msm/qdsp6v2/audio_utils.c:	mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:			audio->ac->session, atomic_read(&audio->in_bytes));
arch/arm/mach-msm/qdsp6v2/audio_utils.c:			audio->ac->session, atomic_read(&audio->in_samples));
arch/arm/mach-msm/qdsp6v2/audio_utils.c:	atomic_set(&audio->in_bytes, 0);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:	atomic_set(&audio->in_samples, 0);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:	atomic_set(&audio->out_count, 0);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:/* must be called with audio->lock held */
arch/arm/mach-msm/qdsp6v2/audio_utils.c:	if (audio->enabled)
arch/arm/mach-msm/qdsp6v2/audio_utils.c:	return q6asm_run(audio->ac, 0x00, 0x00, 0x00);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:/* must be called with audio->lock held */
arch/arm/mach-msm/qdsp6v2/audio_utils.c:	if (audio->opened) {
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		audio->enabled = 0;
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		audio->opened = 0;
arch/arm/mach-msm/qdsp6v2/audio_utils.c:				__func__, audio->ac->session,
arch/arm/mach-msm/qdsp6v2/audio_utils.c:				atomic_read(&audio->in_bytes),
arch/arm/mach-msm/qdsp6v2/audio_utils.c:				atomic_read(&audio->in_samples));
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		rc = q6asm_cmd(audio->ac, CMD_CLOSE);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:				"session rc=%d\n", __func__, audio->ac->session,
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		audio->stopped = 1;
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		memset(audio->out_frame_info, 0,
arch/arm/mach-msm/qdsp6v2/audio_utils.c:				sizeof(audio->out_frame_info));
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		wake_up(&audio->read_wait);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:			audio->ac->session, audio->enabled);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:	switch (audio->buf_alloc) {
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		if (audio->feedback == NON_TUNNEL_MODE) {
arch/arm/mach-msm/qdsp6v2/audio_utils.c:				audio->ac,
arch/arm/mach-msm/qdsp6v2/audio_utils.c:				ALIGN_BUF_SIZE(audio->pcm_cfg.buffer_size),
arch/arm/mach-msm/qdsp6v2/audio_utils.c:				audio->pcm_cfg.buffer_count);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:						audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:			audio->buf_alloc |= BUF_ALLOC_IN;
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		rc = q6asm_audio_client_buf_alloc(OUT, audio->ac,
arch/arm/mach-msm/qdsp6v2/audio_utils.c:				ALIGN_BUF_SIZE(audio->str_cfg.buffer_size),
arch/arm/mach-msm/qdsp6v2/audio_utils.c:				audio->str_cfg.buffer_count);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:					__func__, audio->ac->session, rc);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		audio->buf_alloc |= BUF_ALLOC_OUT;
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		rc = q6asm_audio_client_buf_alloc(OUT, audio->ac,
arch/arm/mach-msm/qdsp6v2/audio_utils.c:				ALIGN_BUF_SIZE(audio->str_cfg.buffer_size),
arch/arm/mach-msm/qdsp6v2/audio_utils.c:				audio->str_cfg.buffer_count);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:					__func__, audio->ac->session, rc);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		audio->buf_alloc |= BUF_ALLOC_OUT;
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		if (audio->feedback == NON_TUNNEL_MODE) {
arch/arm/mach-msm/qdsp6v2/audio_utils.c:			rc = q6asm_audio_client_buf_alloc(IN, audio->ac,
arch/arm/mach-msm/qdsp6v2/audio_utils.c:				ALIGN_BUF_SIZE(audio->pcm_cfg.buffer_size),
arch/arm/mach-msm/qdsp6v2/audio_utils.c:				audio->pcm_cfg.buffer_count);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:					audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:			audio->buf_alloc |= BUF_ALLOC_IN;
arch/arm/mach-msm/qdsp6v2/audio_utils.c:					audio->ac->session, audio->buf_alloc);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		stats.byte_count = atomic_read(&audio->in_bytes);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		stats.sample_count = atomic_read(&audio->in_samples);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		* While audio->stopped read threads will always
arch/arm/mach-msm/qdsp6v2/audio_utils.c:					__func__, audio->ac->session, rc);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:			while (cnt++ < audio->str_cfg.buffer_count)
arch/arm/mach-msm/qdsp6v2/audio_utils.c:				q6asm_read(audio->ac); /* Push buffer to DSP */
arch/arm/mach-msm/qdsp6v2/audio_utils.c:					audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		if (audio->enabled)
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		cfg.buffer_size = audio->str_cfg.buffer_size;
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		cfg.buffer_count = audio->str_cfg.buffer_count;
arch/arm/mach-msm/qdsp6v2/audio_utils.c:				__func__, audio->ac->session, cfg.buffer_size,
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		if ((cfg.buffer_size < (audio->min_frame_size+ \
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		audio->str_cfg.buffer_size = cfg.buffer_size;
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		audio->str_cfg.buffer_count = cfg.buffer_count;
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		rc = q6asm_audio_client_buf_alloc(OUT, audio->ac,
arch/arm/mach-msm/qdsp6v2/audio_utils.c:				ALIGN_BUF_SIZE(audio->str_cfg.buffer_size),
arch/arm/mach-msm/qdsp6v2/audio_utils.c:				audio->str_cfg.buffer_count);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:					__func__, audio->ac->session, rc);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		audio->buf_alloc |= BUF_ALLOC_OUT;
arch/arm/mach-msm/qdsp6v2/audio_utils.c:				__func__, audio->ac->session,
arch/arm/mach-msm/qdsp6v2/audio_utils.c:				audio->str_cfg.buffer_size,
arch/arm/mach-msm/qdsp6v2/audio_utils.c:				audio->str_cfg.buffer_count);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		if (copy_to_user((void *) arg, &audio->ac->session,
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		if ((audio->feedback == NON_TUNNEL_MODE) &&
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		if (cfg.frames_per_buf > audio->max_frames_per_buf) {
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		audio->buf_cfg.meta_info_enable = cfg.meta_info_enable;
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		audio->buf_cfg.frames_per_buf = cfg.frames_per_buf;
arch/arm/mach-msm/qdsp6v2/audio_utils.c:				audio->ac->session, cfg.meta_info_enable,
arch/arm/mach-msm/qdsp6v2/audio_utils.c:			audio->ac->session, audio->buf_cfg.meta_info_enable,
arch/arm/mach-msm/qdsp6v2/audio_utils.c:			audio->buf_cfg.frames_per_buf);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		if (copy_to_user((void *)arg, &audio->buf_cfg,
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		if (copy_to_user((void *)arg, &audio->pcm_cfg,
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		if (audio->feedback != NON_TUNNEL_MODE) {
arch/arm/mach-msm/qdsp6v2/audio_utils.c:					audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		audio->pcm_cfg.buffer_count = cfg.buffer_count;
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		audio->pcm_cfg.buffer_size  = cfg.buffer_size;
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		audio->pcm_cfg.channel_count = cfg.channel_count;
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		audio->pcm_cfg.sample_rate = cfg.sample_rate;
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		rc = q6asm_audio_client_buf_alloc(IN, audio->ac,
arch/arm/mach-msm/qdsp6v2/audio_utils.c:			ALIGN_BUF_SIZE(audio->pcm_cfg.buffer_size),
arch/arm/mach-msm/qdsp6v2/audio_utils.c:			audio->pcm_cfg.buffer_count);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:				__func__, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		audio->buf_alloc |= BUF_ALLOC_IN;
arch/arm/mach-msm/qdsp6v2/audio_utils.c:			audio->ac->session, audio->pcm_cfg.buffer_count,
arch/arm/mach-msm/qdsp6v2/audio_utils.c:			audio->pcm_cfg.buffer_size);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		rc = audio->enc_ioctl(file, cmd, arg);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:	uint32_t mfield_size = (audio->buf_cfg.meta_info_enable == 0) ? 0 :
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		(sizeof(struct meta_out_dsp)*(audio->buf_cfg.frames_per_buf)));
arch/arm/mach-msm/qdsp6v2/audio_utils.c:	pr_debug("%s:session id %d: read - %d\n", __func__, audio->ac->session,
arch/arm/mach-msm/qdsp6v2/audio_utils.c:	if (!audio->enabled)
arch/arm/mach-msm/qdsp6v2/audio_utils.c:	mutex_lock(&audio->read_lock);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:			audio->read_wait,
arch/arm/mach-msm/qdsp6v2/audio_utils.c:			((atomic_read(&audio->out_count) > 0) ||
arch/arm/mach-msm/qdsp6v2/audio_utils.c:			(audio->stopped) ||
arch/arm/mach-msm/qdsp6v2/audio_utils.c:			 audio->rflush || audio->eos_rsp));
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		if ((audio->stopped && !(atomic_read(&audio->out_count))) ||
arch/arm/mach-msm/qdsp6v2/audio_utils.c:			audio->rflush) {
arch/arm/mach-msm/qdsp6v2/audio_utils.c:				audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		if (!(atomic_read(&audio->out_count)) &&
arch/arm/mach-msm/qdsp6v2/audio_utils.c:			(audio->eos_rsp == 1) &&
arch/arm/mach-msm/qdsp6v2/audio_utils.c:				__func__, audio->ac->session, audio->eos_rsp);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:			audio->eos_rsp = 0;
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		data = (unsigned char *)q6asm_is_cpu_buf_avail(OUT, audio->ac,
arch/arm/mach-msm/qdsp6v2/audio_utils.c:			if (audio->buf_cfg.meta_info_enable) {
arch/arm/mach-msm/qdsp6v2/audio_utils.c:					&audio->out_frame_info[idx][0],
arch/arm/mach-msm/qdsp6v2/audio_utils.c:					(size + audio->out_frame_info[idx][1]);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:				offset = audio->out_frame_info[idx][1];
arch/arm/mach-msm/qdsp6v2/audio_utils.c:					__func__, audio->ac->session,
arch/arm/mach-msm/qdsp6v2/audio_utils.c:					audio->out_frame_info[idx][1],
arch/arm/mach-msm/qdsp6v2/audio_utils.c:					audio->out_frame_info[idx][0]);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:				audio->ac->session,
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		atomic_dec(&audio->out_count);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		q6asm_read(audio->ac);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:	mutex_unlock(&audio->read_lock);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:			audio->ac->session, (buf-start));
arch/arm/mach-msm/qdsp6v2/audio_utils.c:	uint32_t mfield_size = (audio->buf_cfg.meta_info_enable == 0) ? 0 :
arch/arm/mach-msm/qdsp6v2/audio_utils.c:			audio->ac->session, count);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:	if (!audio->enabled)
arch/arm/mach-msm/qdsp6v2/audio_utils.c:	mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp6v2/audio_utils.c:				     ((atomic_read(&audio->in_count) > 0) ||
arch/arm/mach-msm/qdsp6v2/audio_utils.c:				      (audio->stopped) ||
arch/arm/mach-msm/qdsp6v2/audio_utils.c:				      (audio->wflush)));
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		if (audio->stopped || audio->wflush) {
arch/arm/mach-msm/qdsp6v2/audio_utils.c:					audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:				audio->ac->session, nflags);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		data = (unsigned char *)q6asm_is_cpu_buf_avail(IN, audio->ac,
arch/arm/mach-msm/qdsp6v2/audio_utils.c:				__func__, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		if (audio->buf_cfg.meta_info_enable) {
arch/arm/mach-msm/qdsp6v2/audio_utils.c:				"buffer\n", __func__, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		xfer = (count > (audio->pcm_cfg.buffer_size)) ?
arch/arm/mach-msm/qdsp6v2/audio_utils.c:				(audio->pcm_cfg.buffer_size) : count;
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		rc = q6asm_write(audio->ac, xfer, msw_ts, lsw_ts, 0x00);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		atomic_dec(&audio->in_count);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:	mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:			"start[0x%x]\n", __func__, audio->ac->session,
arch/arm/mach-msm/qdsp6v2/audio_utils.c:		rc = q6asm_cmd(audio->ac, CMD_EOS);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:				audio->ac->session, audio->eos_rsp);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:			audio->ac->session, (buf - start - mfield_size),
arch/arm/mach-msm/qdsp6v2/audio_utils.c:			atomic_read(&audio->in_count));
arch/arm/mach-msm/qdsp6v2/audio_utils.c:	pr_info("%s: session id %d\n", __func__, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:	q6asm_audio_client_free(audio->ac);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:	kfree(audio->enc_cfg);
arch/arm/mach-msm/qdsp6v2/audio_utils.c:	kfree(audio->codec_cfg);
arch/arm/mach-msm/qdsp6v2/q6audio_v1.c:			audio->ac->session, opcode);
arch/arm/mach-msm/qdsp6v2/q6audio_v1.c:	spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp6v2/q6audio_v1.c:		atomic_inc(&audio->in_count);
arch/arm/mach-msm/qdsp6v2/q6audio_v1.c:		wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp6v2/q6audio_v1.c:		audio->eos_rsp = 1;
arch/arm/mach-msm/qdsp6v2/q6audio_v1.c:		wake_up(&audio->read_wait);
arch/arm/mach-msm/qdsp6v2/q6audio_v1.c:			__func__, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/q6audio_v1.c:			audio->ac->session, opcode);
arch/arm/mach-msm/qdsp6v2/q6audio_v1.c:	spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp6v2/q6audio_v1.c:			__func__, audio->ac->session, token, payload[7],
arch/arm/mach-msm/qdsp6v2/q6audio_v1.c:			audio->ac->session, payload[4], payload[5]);
arch/arm/mach-msm/qdsp6v2/q6audio_v1.c:			audio->ac->session, payload[6], payload[8]);
arch/arm/mach-msm/qdsp6v2/q6audio_v1.c:			audio->ac->session, payload[2]);
arch/arm/mach-msm/qdsp6v2/q6audio_v1.c:	audio->out_frame_info[index][0] = payload[7];
arch/arm/mach-msm/qdsp6v2/q6audio_v1.c:	audio->out_frame_info[index][1] = payload[3];
arch/arm/mach-msm/qdsp6v2/q6audio_v1.c:	atomic_add(payload[2], &audio->in_bytes);
arch/arm/mach-msm/qdsp6v2/q6audio_v1.c:	atomic_add(payload[7], &audio->in_samples);
arch/arm/mach-msm/qdsp6v2/q6audio_v1.c:	if (atomic_read(&audio->out_count) <= audio->str_cfg.buffer_count) {
arch/arm/mach-msm/qdsp6v2/q6audio_v1.c:		atomic_inc(&audio->out_count);
arch/arm/mach-msm/qdsp6v2/q6audio_v1.c:		wake_up(&audio->read_wait);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	n = scnprintf(buffer, debug_bufmax, "opened %d\n", audio->opened);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			"enabled %d\n", audio->enabled);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			"stopped %d\n", audio->stopped);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			"feedback %d\n", audio->feedback);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			"wflush %d\n", audio->wflush);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			"rflush %d\n", audio->rflush);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			"inqueue empty %d\n", list_empty(&audio->in_queue));
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			"outqueue empty %d\n", list_empty(&audio->out_queue));
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		if (audio->buf_cfg.meta_info_enable)
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	list_for_each_entry(region_elt, &audio->ion_region_queue, list) {
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		list_for_each_entry(region_elt, &audio->ion_region_queue,
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			audio->enabled);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	if (audio->enabled) {
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		rc = q6asm_cmd(audio->ac, CMD_PAUSE);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	if (audio->enabled) {
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		if (!(audio->drv_status & ADRV_STATUS_PAUSE)) {
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:				audio->drv_status |= ADRV_STATUS_PAUSE;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		rc = q6asm_cmd(audio->ac, CMD_FLUSH);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		if (audio->stopped == 0) {
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:				audio->enabled = 1;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:				if (audio->drv_status & ADRV_STATUS_PAUSE)
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:					audio->drv_status &= ~ADRV_STATUS_PAUSE;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			__func__, audio, atomic_read(&audio->in_bytes));
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			__func__, audio, atomic_read(&audio->in_samples));
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	atomic_set(&audio->in_bytes, 0);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	atomic_set(&audio->in_samples, 0);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	rc = q6asm_cmd(audio->ac, CMD_OUT_FLUSH);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	if (audio->wflush)
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	BUG_ON(list_empty(&audio->out_queue));
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	used_buf = list_first_entry(&audio->out_queue,
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		if (list_empty(&audio->out_queue) &&
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			(audio->drv_status & ADRV_STATUS_FSYNC)) {
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	if (audio->eos_flag && (audio->eos_write_payload.aio_buf.buf_addr)) {
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:				audio->eos_write_payload);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		memset(&audio->eos_write_payload , 0,
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	list_for_each_safe(ptr, next, &audio->out_queue) {
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	list_for_each_safe(ptr, next, &audio->in_queue) {
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		if ((audio->eos_rsp != 1) && audio->eos_flag) {
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			audio->eos_flag = 0;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	return q6asm_run(audio->ac, 0x00, 0x00, 0x00);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	if (audio->opened) {
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		audio->enabled = 0;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		audio->opened = 0;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			audio, atomic_read(&audio->in_bytes),
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			atomic_read(&audio->in_samples));
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		rc = q6asm_cmd(audio->ac, CMD_CLOSE);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		audio->stopped = 1;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		wake_up(&audio->cmd_wait);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	pr_debug("%s[%p]:enabled[%d]\n", __func__, audio, audio->enabled);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	list_for_each_safe(ptr, next, &audio->ion_region_queue) {
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		ion_unmap_kernel(audio->client, region->handle);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		ion_free(audio->client, region->handle);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	spin_lock_irqsave(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	list_for_each_safe(ptr, next, &audio->event_queue) {
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		drv_evt = list_first_entry(&audio->event_queue,
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	list_for_each_safe(ptr, next, &audio->free_event_queue) {
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		drv_evt = list_first_entry(&audio->free_event_queue,
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	spin_unlock_irqrestore(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	list_for_each_safe(ptr, next, &audio->ion_region_queue) {
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			rc = q6asm_memory_unmap(audio->ac,
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	audio->wflush = 1;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	if (audio->enabled)
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	audio->wflush = 0;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	audio->drv_ops.out_flush(audio);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	audio->drv_ops.in_flush(audio);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	if (audio->stopped == 1)
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	ion_client_destroy(audio->client);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	audio->event_abort = 1;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	wake_up(&audio->event_wait);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	q6asm_audio_client_free(audio->ac);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	mutex_destroy(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	mutex_destroy(&audio->read_lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	mutex_destroy(&audio->write_lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	mutex_destroy(&audio->get_event_lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	if (audio->dentry)
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		debugfs_remove(audio->dentry);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	kfree(audio->codec_cfg);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	if (!audio->enabled || audio->feedback)
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	audio->drv_status |= ADRV_STATUS_FSYNC;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	audio->eos_rsp = 0;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:					(list_empty(&audio->out_queue)) ||
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:					audio->wflush || audio->stopped);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	rc = q6asm_cmd(audio->ac, CMD_EOS);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:					(audio->eos_rsp || audio->wflush ||
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:					audio->stopped));
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	if (audio->eos_rsp == 1) {
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			audio->drv_status &= ~ADRV_STATUS_PAUSE;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			audio->enabled = 1;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	if (audio->stopped || audio->wflush)
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	audio->drv_status &= ~ADRV_STATUS_FSYNC;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	spin_lock_irqsave(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	empty = !list_empty(&audio->event_queue);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	spin_unlock_irqrestore(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	return empty || audio->event_abort;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		rc = wait_event_interruptible_timeout(audio->event_wait,
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		rc = wait_event_interruptible(audio->event_wait,
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	if (audio->event_abort) {
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		audio->event_abort = 0;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	spin_lock_irqsave(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	if (!list_empty(&audio->event_queue)) {
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		drv_evt = list_first_entry(&audio->event_queue,
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		list_add_tail(&drv_evt->list, &audio->free_event_queue);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		spin_unlock_irqrestore(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	spin_unlock_irqrestore(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		mutex_lock(&audio->read_lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		mutex_unlock(&audio->read_lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	if (audio->eos_rsp && !list_empty(&audio->in_queue)) {
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		audio->rflush = 1;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		audio->wflush = 1;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			audio->rflush = 0;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			audio->wflush = 0;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	list_for_each_entry(region_elt, &audio->ion_region_queue, list) {
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	handle = ion_import_dma_buf(audio->client, info->fd);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	rc = ion_handle_get_flags(audio->client, handle, &ionflag);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	temp_ptr = ion_map_kernel(audio->client, handle);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	rc = ion_phys(audio->client, handle, &paddr, &len);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	list_add_tail(&region->list, &audio->ion_region_queue);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	rc = q6asm_memory_map(audio->ac, (uint32_t) paddr, IN, (uint32_t) len,
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	ion_unmap_kernel(audio->client, handle);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	ion_free(audio->client, handle);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	list_for_each_safe(ptr, next, &audio->ion_region_queue) {
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			rc = q6asm_memory_unmap(audio->ac,
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			ion_unmap_kernel(audio->client, region->handle);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			ion_free(audio->client, region->handle);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		audio->buf_cfg.meta_info_enable);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	ac = audio->ac;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	if (audio->feedback) {
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	if (audio->buf_cfg.meta_info_enable)
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	spin_lock_irqsave(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	if (!list_empty(&audio->free_event_queue)) {
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		e_node = list_first_entry(&audio->free_event_queue,
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			spin_unlock_irqrestore(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	list_add_tail(&e_node->list, &audio->event_queue);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	spin_unlock_irqrestore(&audio->event_queue_lock, flags);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	wake_up(&audio->event_wait);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	ac = audio->ac;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			(!audio->feedback && !buf_node->buf.data_len)) {
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			list_add_tail(&buf_node->list, &audio->out_queue);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			if (!audio->wflush) {
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:				audio->eos_write_payload.aio_buf =\
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:				audio->eos_flag = 1;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:				audio->eos_rsp = 0;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:				q6asm_cmd(audio->ac, CMD_EOS);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		if (!audio->eos_rsp && !audio->rflush) {
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			list_add_tail(&buf_node->list, &audio->in_queue);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	if (audio->drv_status & ADRV_STATUS_AIO_INTF) {
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		if (audio->drv_status & ADRV_STATUS_FSYNC) {
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			audio->drv_ops.out_flush(audio);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			audio->drv_ops.out_flush(audio);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		audio->drv_ops.in_flush(audio);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	audio->str_cfg.buffer_size = FRAME_SIZE;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	audio->str_cfg.buffer_count = FRAME_NUM;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	audio->pcm_cfg.buffer_count = PCM_BUF_COUNT;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	audio->pcm_cfg.sample_rate = 48000;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	audio->pcm_cfg.channel_count = 2;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		audio->drv_status |= ADRV_STATUS_AIO_INTF;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		audio->drv_ops.out_flush = audio_aio_async_out_flush;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		audio->drv_ops.in_flush = audio_aio_async_in_flush;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		q6asm_set_io_mode(audio->ac, ASYNC_IO_MODE);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	mutex_init(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	mutex_init(&audio->read_lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	mutex_init(&audio->write_lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	mutex_init(&audio->get_event_lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	spin_lock_init(&audio->dsp_lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	spin_lock_init(&audio->event_queue_lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	init_waitqueue_head(&audio->cmd_wait);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	init_waitqueue_head(&audio->write_wait);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	init_waitqueue_head(&audio->event_wait);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	INIT_LIST_HEAD(&audio->out_queue);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	INIT_LIST_HEAD(&audio->in_queue);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	INIT_LIST_HEAD(&audio->ion_region_queue);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	INIT_LIST_HEAD(&audio->free_event_queue);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	INIT_LIST_HEAD(&audio->event_queue);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	audio->drv_ops.out_flush(audio);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	audio->opened = 1;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	audio->rflush = 0;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	audio->wflush = 0;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	audio->codec_ioctl = audio_aio_ioctl;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			list_add_tail(&e_node->list, &audio->free_event_queue);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	audio->client = msm_ion_client_create(UINT_MAX, "Audio_Dec_Client");
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	if (IS_ERR_OR_NULL(audio->client)) {
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:	pr_debug("Ion client create in audio_aio_open %p", audio->client);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		stats.byte_count = atomic_read(&audio->in_bytes);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		stats.sample_count = atomic_read(&audio->in_samples);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		if (mutex_trylock(&audio->get_event_lock)) {
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			mutex_unlock(&audio->get_event_lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		audio->event_abort = 1;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		wake_up(&audio->event_wait);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		if (audio->drv_status & ADRV_STATUS_FSYNC)
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			if (audio->enabled)
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		mutex_lock(&audio->read_lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		if ((audio->feedback) && (audio->enabled))
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		mutex_unlock(&audio->read_lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		mutex_lock(&audio->read_lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		mutex_unlock(&audio->read_lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:				audio, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		audio->stopped = 1;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		audio->rflush = 1;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		audio->wflush = 1;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			audio->rflush = 0;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			audio->wflush = 0;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		audio->enabled = 0;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		audio->drv_status &= ~ADRV_STATUS_PAUSE;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:				mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			audio->drv_status |= ADRV_STATUS_PAUSE;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			if (audio->drv_status & ADRV_STATUS_PAUSE) {
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:					audio->drv_status &= ~ADRV_STATUS_PAUSE;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:					audio->enabled = 1;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			audio, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		audio->rflush = 1;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		audio->wflush = 1;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			audio->rflush = 0;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			audio->wflush = 0;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		audio->eos_flag = 0;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		audio->eos_rsp = 0;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		cfg.buffer_size = audio->str_cfg.buffer_size;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		cfg.buffer_count = audio->str_cfg.buffer_count;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		audio->str_cfg.buffer_size = FRAME_SIZE;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		audio->str_cfg.buffer_count = FRAME_NUM;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		if (copy_to_user((void *)arg, &audio->pcm_cfg, sizeof(cfg)))
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		if (audio->feedback != NON_TUNNEL_MODE) {
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		audio->pcm_cfg.buffer_count = config.buffer_count;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		audio->pcm_cfg.buffer_size = config.buffer_size;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		audio->pcm_cfg.channel_count = config.channel_count;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		audio->pcm_cfg.sample_rate = config.sample_rate;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		if ((audio->feedback == NON_TUNNEL_MODE) &&
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		audio->buf_cfg.meta_info_enable = cfg.meta_info_enable;
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:				audio->ac->session, cfg.meta_info_enable);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			audio->ac->session, audio->buf_cfg.meta_info_enable,
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:			audio->buf_cfg.frames_per_buf);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		if (copy_to_user((void *)arg, &audio->buf_cfg,
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		if (copy_to_user((void *)arg, &audio->ac->session,
arch/arm/mach-msm/qdsp6v2/audio_utils_aio.c:		mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:	spin_lock_irqsave(&audio->dsp_lock, dsp_flags);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:	if (!list_empty(&audio->free_out_queue)) {
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:		buf_node = list_first_entry(&audio->free_out_queue,
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:		switch (audio->mvs_mode) {
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:			list_add_tail(&buf_node->list, &audio->out_queue);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:			list_add_tail(&buf_node->list, &audio->out_queue);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:			list_add_tail(&buf_node->list, &audio->out_queue);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:			if (!list_empty(&audio->free_out_queue)) {
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:					list_first_entry(&audio->free_out_queue,
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:					      &audio->out_queue);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:			if (audio->mvs_mode == MVS_MODE_G711A)
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:			list_add_tail(&buf_node->list, &audio->out_queue);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:			if (!list_empty(&audio->free_out_queue)) {
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:					list_first_entry(&audio->free_out_queue,
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:				if (audio->mvs_mode == MVS_MODE_G711A)
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:					      &audio->out_queue);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:			list_add_tail(&buf_node->list, &audio->out_queue);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:			list_add_tail(&buf_node->list, &audio->out_queue);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:			list_add_tail(&buf_node->list, &audio->out_queue);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:	spin_unlock_irqrestore(&audio->dsp_lock, dsp_flags);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:	wake_up(&audio->out_wait);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:	spin_lock_irqsave(&audio->dsp_lock, dsp_flags);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:	if (!list_empty(&audio->in_queue)) {
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:		uint32_t rate_type = audio_mvs_get_rate(audio->mvs_mode,
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:							audio->rate_type);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:		buf_node = list_first_entry(&audio->in_queue,
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:		switch (audio->mvs_mode) {
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:			list_add_tail(&buf_node->list, &audio->free_in_queue);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:			list_add_tail(&buf_node->list, &audio->free_in_queue);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:			list_add_tail(&buf_node->list, &audio->free_in_queue);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:			if (!list_empty(&audio->in_queue)) {
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:				buf_node = list_first_entry(&audio->in_queue,
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:					      &audio->free_in_queue);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:			list_add_tail(&buf_node->list, &audio->free_in_queue);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:			if (!list_empty(&audio->in_queue)) {
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:				buf_node = list_first_entry(&audio->in_queue,
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:					      &audio->free_in_queue);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:			list_add_tail(&buf_node->list, &audio->free_in_queue);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:			if (audio->mvs_mode == MVS_MODE_HR) {
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:			list_add_tail(&buf_node->list, &audio->free_in_queue);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:			list_add_tail(&buf_node->list, &audio->free_in_queue);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:	spin_unlock_irqrestore(&audio->dsp_lock, dsp_flags);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:	wake_up(&audio->in_wait);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:	wake_lock(&audio->suspend_lock);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:	pm_qos_update_request(&audio->pm_qos_req,
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:		    audio_mvs_get_media_type(audio->mvs_mode, audio->rate_type),
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:		    audio_mvs_get_rate(audio->mvs_mode, audio->rate_type),
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:		    audio_mvs_get_network_type(audio->mvs_mode),
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:		    audio->dtx_mode,
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:		    audio->min_max_rate);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:		audio->state = AUDIO_MVS_STARTED;
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:	audio->state = AUDIO_MVS_STOPPED;
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:	pm_qos_update_request(&audio->pm_qos_req, PM_QOS_DEFAULT_VALUE);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:	wake_unlock(&audio->suspend_lock);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:	if (audio->state == AUDIO_MVS_STARTED)
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:	mutex_lock(&audio->in_lock);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:	list_for_each_safe(ptr, next, &audio->in_queue) {
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:	list_for_each_safe(ptr, next, &audio->free_in_queue) {
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:	mutex_unlock(&audio->in_lock);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:	mutex_lock(&audio->out_lock);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:	list_for_each_safe(ptr, next, &audio->out_queue) {
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:	list_for_each_safe(ptr, next, &audio->free_out_queue) {
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:	mutex_unlock(&audio->out_lock);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:	kfree(audio->memory_chunk);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:	audio->memory_chunk = NULL;
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:	audio->state = AUDIO_MVS_CLOSED;
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:	rc = wait_event_interruptible_timeout(audio->out_wait,
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:					     (!list_empty(&audio->out_queue) ||
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:					     audio->state == AUDIO_MVS_STOPPED),
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:		mutex_lock(&audio->out_lock);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:		if ((audio->state == AUDIO_MVS_STARTED) &&
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:		    (!list_empty(&audio->out_queue))) {
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:				buf_node = list_first_entry(&audio->out_queue,
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:					      &audio->free_out_queue);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:			       __func__, audio->state);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:		mutex_unlock(&audio->out_lock);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:	rc = wait_event_interruptible_timeout(audio->in_wait,
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:		(!list_empty(&audio->free_in_queue) ||
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:		audio->state == AUDIO_MVS_STOPPED), 1 * HZ);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:		mutex_lock(&audio->in_lock);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:		if (audio->state == AUDIO_MVS_STARTED) {
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:				if (!list_empty(&audio->free_in_queue)) {
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:					list_first_entry(&audio->free_in_queue,
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:						      &audio->in_queue);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:			       __func__, audio->state);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:		mutex_unlock(&audio->in_lock);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:		mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:		config.mvs_mode = audio->mvs_mode;
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:		config.rate_type = audio->rate_type;
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:		config.dtx_mode = audio->dtx_mode;
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:		config.min_max_rate.min_rate = audio->min_max_rate.min_rate;
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:		config.min_max_rate.max_rate = audio->min_max_rate.max_rate;
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:		mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:			mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:			if (audio->state == AUDIO_MVS_STOPPED) {
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:				audio->mvs_mode = config.mvs_mode;
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:				audio->rate_type = config.rate_type;
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:				audio->dtx_mode = config.dtx_mode;
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:				audio->min_max_rate.min_rate =
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:				audio->min_max_rate.max_rate =
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:				       __func__, audio->state);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:			mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:		mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:		if (audio->state == AUDIO_MVS_STOPPED) {
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:			       __func__, audio->state);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:		mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:		mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:		if (audio->state == AUDIO_MVS_STARTED) {
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:			       __func__, audio->state);
arch/arm/mach-msm/qdsp6v2/audio_mvs.c:		mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_mp3.c:						audio, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_mp3.c:		if (audio->feedback == NON_TUNNEL_MODE) {
arch/arm/mach-msm/qdsp6v2/audio_mp3.c:			rc = q6asm_enc_cfg_blk_pcm(audio->ac,
arch/arm/mach-msm/qdsp6v2/audio_mp3.c:					audio->pcm_cfg.sample_rate,
arch/arm/mach-msm/qdsp6v2/audio_mp3.c:					audio->pcm_cfg.channel_count);
arch/arm/mach-msm/qdsp6v2/audio_mp3.c:		audio->eos_rsp = 0;
arch/arm/mach-msm/qdsp6v2/audio_mp3.c:		audio->eos_flag = 0;
arch/arm/mach-msm/qdsp6v2/audio_mp3.c:			audio->enabled = 1;
arch/arm/mach-msm/qdsp6v2/audio_mp3.c:			audio->enabled = 0;
arch/arm/mach-msm/qdsp6v2/audio_mp3.c:						audio->ac->session,
arch/arm/mach-msm/qdsp6v2/audio_mp3.c:						audio->enabled);
arch/arm/mach-msm/qdsp6v2/audio_mp3.c:		if (audio->stopped == 1)
arch/arm/mach-msm/qdsp6v2/audio_mp3.c:			audio->stopped = 0;
arch/arm/mach-msm/qdsp6v2/audio_mp3.c:		rc = audio->codec_ioctl(file, cmd, arg);
arch/arm/mach-msm/qdsp6v2/audio_mp3.c:	audio->pcm_cfg.buffer_size = PCM_BUFSZ_MIN;
arch/arm/mach-msm/qdsp6v2/audio_mp3.c:	audio->ac = q6asm_audio_client_alloc((app_cb) q6_audio_cb,
arch/arm/mach-msm/qdsp6v2/audio_mp3.c:	if (!audio->ac) {
arch/arm/mach-msm/qdsp6v2/audio_mp3.c:		rc = q6asm_open_read_write(audio->ac, FORMAT_LINEAR_PCM,
arch/arm/mach-msm/qdsp6v2/audio_mp3.c:		audio->feedback = NON_TUNNEL_MODE;
arch/arm/mach-msm/qdsp6v2/audio_mp3.c:		audio->buf_cfg.frames_per_buf = 0x01;*/
arch/arm/mach-msm/qdsp6v2/audio_mp3.c:		audio->buf_cfg.meta_info_enable = 0x01;
arch/arm/mach-msm/qdsp6v2/audio_mp3.c:		rc = q6asm_open_write(audio->ac, FORMAT_MP3);
arch/arm/mach-msm/qdsp6v2/audio_mp3.c:		audio->feedback = TUNNEL_MODE;
arch/arm/mach-msm/qdsp6v2/audio_mp3.c:		audio->buf_cfg.meta_info_enable = 0x00;
arch/arm/mach-msm/qdsp6v2/audio_mp3.c:	snprintf(name, sizeof name, "msm_mp3_%04x", audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_mp3.c:	audio->dentry = debugfs_create_file(name, S_IFREG | S_IRUGO,
arch/arm/mach-msm/qdsp6v2/audio_mp3.c:	if (IS_ERR(audio->dentry))
arch/arm/mach-msm/qdsp6v2/audio_mp3.c:						audio->feedback,
arch/arm/mach-msm/qdsp6v2/audio_mp3.c:						audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_mp3.c:	q6asm_audio_client_free(audio->ac);
arch/arm/mach-msm/qdsp6v2/q6audio_common.h:#include <sound/apr_audio-v2.h>
arch/arm/mach-msm/qdsp6v2/fm.c:	if (audio->enabled)
arch/arm/mach-msm/qdsp6v2/fm.c:		audio->fm_dst_copp_id, audio->fm_src_copp_id);
arch/arm/mach-msm/qdsp6v2/fm.c:	if (audio->fm_dest && audio->fm_source) {
arch/arm/mach-msm/qdsp6v2/fm.c:		if (afe_loopback(FM_ENABLE, audio->fm_dst_copp_id,
arch/arm/mach-msm/qdsp6v2/fm.c:					audio->fm_src_copp_id) < 0) {
arch/arm/mach-msm/qdsp6v2/fm.c:		audio->running = 1;
arch/arm/mach-msm/qdsp6v2/fm.c:	audio->enabled = 1;
arch/arm/mach-msm/qdsp6v2/fm.c:			audio->fm_source = 1;
arch/arm/mach-msm/qdsp6v2/fm.c:			audio->fm_src_copp_id = FM_COPP;
arch/arm/mach-msm/qdsp6v2/fm.c:			audio->fm_dest = 1;
arch/arm/mach-msm/qdsp6v2/fm.c:			audio->fm_dst_copp_id = evt_payload->routing_id;
arch/arm/mach-msm/qdsp6v2/fm.c:		if (audio->enabled &&
arch/arm/mach-msm/qdsp6v2/fm.c:			audio->fm_dest &&
arch/arm/mach-msm/qdsp6v2/fm.c:			audio->fm_source) {
arch/arm/mach-msm/qdsp6v2/fm.c:			afe_loopback_gain(audio->fm_src_copp_id,
arch/arm/mach-msm/qdsp6v2/fm.c:						audio->volume);
arch/arm/mach-msm/qdsp6v2/fm.c:			afe_loopback(FM_ENABLE, audio->fm_dst_copp_id,
arch/arm/mach-msm/qdsp6v2/fm.c:						audio->fm_src_copp_id);
arch/arm/mach-msm/qdsp6v2/fm.c:			audio->running = 1;
arch/arm/mach-msm/qdsp6v2/fm.c:		if (evt_payload->routing_id == audio->fm_src_copp_id)
arch/arm/mach-msm/qdsp6v2/fm.c:			audio->fm_source = 0;
arch/arm/mach-msm/qdsp6v2/fm.c:			audio->fm_dest = 0;
arch/arm/mach-msm/qdsp6v2/fm.c:		if (audio->running
arch/arm/mach-msm/qdsp6v2/fm.c:			&& (!audio->fm_dest || !audio->fm_source)) {
arch/arm/mach-msm/qdsp6v2/fm.c:			afe_loopback(FM_DISABLE, audio->fm_dst_copp_id,
arch/arm/mach-msm/qdsp6v2/fm.c:						audio->fm_src_copp_id);
arch/arm/mach-msm/qdsp6v2/fm.c:			audio->running = 0;
arch/arm/mach-msm/qdsp6v2/fm.c:		if (audio->fm_source) {
arch/arm/mach-msm/qdsp6v2/fm.c:			audio->volume = evt_payload->session_vol;
arch/arm/mach-msm/qdsp6v2/fm.c:			afe_loopback_gain(audio->fm_src_copp_id,
arch/arm/mach-msm/qdsp6v2/fm.c:					audio->volume);
arch/arm/mach-msm/qdsp6v2/fm.c:	afe_loopback(FM_DISABLE, audio->fm_dst_copp_id, audio->fm_src_copp_id);
arch/arm/mach-msm/qdsp6v2/fm.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/fm.c:		audio->running = 0;
arch/arm/mach-msm/qdsp6v2/fm.c:		audio->enabled = 0;
arch/arm/mach-msm/qdsp6v2/fm.c:		if (copy_to_user((void *) arg, &audio->dec_id,
arch/arm/mach-msm/qdsp6v2/fm.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/fm.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/fm.c:	auddev_unregister_evt_listner(AUDDEV_CLNT_DEC, audio->dec_id);
arch/arm/mach-msm/qdsp6v2/fm.c:	audio->running = 0;
arch/arm/mach-msm/qdsp6v2/fm.c:	audio->enabled = 0;
arch/arm/mach-msm/qdsp6v2/fm.c:	audio->opened = 0;
arch/arm/mach-msm/qdsp6v2/fm.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/fm.c:	if (audio->opened)
arch/arm/mach-msm/qdsp6v2/fm.c:	audio->dec_id = SESSION_ID_FM;
arch/arm/mach-msm/qdsp6v2/fm.c:	audio->running = 0;
arch/arm/mach-msm/qdsp6v2/fm.c:	audio->fm_source = 0;
arch/arm/mach-msm/qdsp6v2/fm.c:	audio->fm_dest = 0;
arch/arm/mach-msm/qdsp6v2/fm.c:	audio->device_events = AUDDEV_EVT_DEV_RDY
arch/arm/mach-msm/qdsp6v2/fm.c:	rc = auddev_register_evt_listner(audio->device_events,
arch/arm/mach-msm/qdsp6v2/fm.c:					audio->dec_id,
arch/arm/mach-msm/qdsp6v2/fm.c:	audio->opened = 1;
arch/arm/mach-msm/qdsp6v2/fm.c:	mutex_init(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_amrwb.c:						audio, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_amrwb.c:		if (audio->feedback == NON_TUNNEL_MODE) {
arch/arm/mach-msm/qdsp6v2/audio_amrwb.c:			rc = q6asm_enc_cfg_blk_pcm(audio->ac,
arch/arm/mach-msm/qdsp6v2/audio_amrwb.c:					audio->pcm_cfg.sample_rate,
arch/arm/mach-msm/qdsp6v2/audio_amrwb.c:					audio->pcm_cfg.channel_count);
arch/arm/mach-msm/qdsp6v2/audio_amrwb.c:		audio->eos_rsp = 0;
arch/arm/mach-msm/qdsp6v2/audio_amrwb.c:		audio->eos_flag = 0;
arch/arm/mach-msm/qdsp6v2/audio_amrwb.c:			audio->enabled = 1;
arch/arm/mach-msm/qdsp6v2/audio_amrwb.c:			audio->enabled = 0;
arch/arm/mach-msm/qdsp6v2/audio_amrwb.c:						audio->ac->session,
arch/arm/mach-msm/qdsp6v2/audio_amrwb.c:						audio->enabled);
arch/arm/mach-msm/qdsp6v2/audio_amrwb.c:		if (audio->stopped == 1)
arch/arm/mach-msm/qdsp6v2/audio_amrwb.c:			audio->stopped = 0;
arch/arm/mach-msm/qdsp6v2/audio_amrwb.c:		rc = audio->codec_ioctl(file, cmd, arg);
arch/arm/mach-msm/qdsp6v2/audio_amrwb.c:	audio->pcm_cfg.buffer_size = PCM_BUFSZ_MIN;
arch/arm/mach-msm/qdsp6v2/audio_amrwb.c:	audio->ac = q6asm_audio_client_alloc((app_cb) q6_audio_cb,
arch/arm/mach-msm/qdsp6v2/audio_amrwb.c:	if (!audio->ac) {
arch/arm/mach-msm/qdsp6v2/audio_amrwb.c:		rc = q6asm_open_read_write(audio->ac, FORMAT_LINEAR_PCM,
arch/arm/mach-msm/qdsp6v2/audio_amrwb.c:		audio->feedback = NON_TUNNEL_MODE;
arch/arm/mach-msm/qdsp6v2/audio_amrwb.c:		audio->buf_cfg.frames_per_buf = 0x01;
arch/arm/mach-msm/qdsp6v2/audio_amrwb.c:		audio->buf_cfg.meta_info_enable = 0x01;
arch/arm/mach-msm/qdsp6v2/audio_amrwb.c:		rc = q6asm_open_write(audio->ac, FORMAT_AMRWB);
arch/arm/mach-msm/qdsp6v2/audio_amrwb.c:		audio->feedback = TUNNEL_MODE;
arch/arm/mach-msm/qdsp6v2/audio_amrwb.c:		audio->buf_cfg.meta_info_enable = 0x00;
arch/arm/mach-msm/qdsp6v2/audio_amrwb.c:	snprintf(name, sizeof name, "msm_amrwb_%04x", audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_amrwb.c:	audio->dentry = debugfs_create_file(name, S_IFREG | S_IRUGO,
arch/arm/mach-msm/qdsp6v2/audio_amrwb.c:	if (IS_ERR(audio->dentry))
arch/arm/mach-msm/qdsp6v2/audio_amrwb.c:						audio->feedback,
arch/arm/mach-msm/qdsp6v2/audio_amrwb.c:						audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_amrwb.c:	q6asm_audio_client_free(audio->ac);
arch/arm/mach-msm/qdsp6v2/q6audio_v2.c:			audio->ac->session, opcode);
arch/arm/mach-msm/qdsp6v2/q6audio_v2.c:	spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp6v2/q6audio_v2.c:		atomic_inc(&audio->in_count);
arch/arm/mach-msm/qdsp6v2/q6audio_v2.c:		wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp6v2/q6audio_v2.c:		audio->eos_rsp = 1;
arch/arm/mach-msm/qdsp6v2/q6audio_v2.c:		wake_up(&audio->read_wait);
arch/arm/mach-msm/qdsp6v2/q6audio_v2.c:			__func__, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/q6audio_v2.c:			audio->ac->session, opcode);
arch/arm/mach-msm/qdsp6v2/q6audio_v2.c:	spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp6v2/q6audio_v2.c:			__func__, audio->ac->session, token, payload[9],
arch/arm/mach-msm/qdsp6v2/q6audio_v2.c:			audio->ac->session, payload[7], payload[6]);
arch/arm/mach-msm/qdsp6v2/q6audio_v2.c:			audio->ac->session, payload[8], payload[10]);
arch/arm/mach-msm/qdsp6v2/q6audio_v2.c:			audio->ac->session, payload[4]);
arch/arm/mach-msm/qdsp6v2/q6audio_v2.c:	audio->out_frame_info[index][0] = payload[9];
arch/arm/mach-msm/qdsp6v2/q6audio_v2.c:	audio->out_frame_info[index][1] = payload[5];
arch/arm/mach-msm/qdsp6v2/q6audio_v2.c:	atomic_add(payload[4], &audio->in_bytes);
arch/arm/mach-msm/qdsp6v2/q6audio_v2.c:	atomic_add(payload[9], &audio->in_samples);
arch/arm/mach-msm/qdsp6v2/q6audio_v2.c:	if (atomic_read(&audio->out_count) <= audio->str_cfg.buffer_count) {
arch/arm/mach-msm/qdsp6v2/q6audio_v2.c:		atomic_inc(&audio->out_count);
arch/arm/mach-msm/qdsp6v2/q6audio_v2.c:		wake_up(&audio->read_wait);
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:		enc_cfg = audio->enc_cfg;
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:				audio->ac->session, audio->buf_alloc);
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:		if (audio->enabled == 1) {
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:				__func__, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:		rc = q6asm_enc_cfg_blk_qcelp(audio->ac,
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:			audio->buf_cfg.frames_per_buf,
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:				"failed\n", __func__, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:		if (audio->feedback == NON_TUNNEL_MODE) {
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:			rc = q6asm_media_format_block_pcm(audio->ac,
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:				audio->pcm_cfg.sample_rate,
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:				audio->pcm_cfg.channel_count);
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:				"failed\n", __func__, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:				audio->ac->session, audio->enabled);
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:			audio->enabled = 1;
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:			audio->enabled = 0;
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:				"rc=%d\n", __func__, audio->ac->session, rc);
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:		while (cnt++ < audio->str_cfg.buffer_count)
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:			q6asm_read(audio->ac); /* Push buffer to DSP */
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:				__func__, audio->ac->session, audio->enabled);
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:				audio->ac->session);
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:					"rc=%d\n", __func__, audio->ac->session,
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:		if (copy_to_user((void *)arg, audio->enc_cfg,
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:		enc_cfg = audio->enc_cfg;
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:					__func__, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:					__func__, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:			audio->ac->session, enc_cfg->min_bit_rate,
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:	audio->enc_cfg = kzalloc(sizeof(struct msm_audio_qcelp_enc_config),
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:	if (audio->enc_cfg == NULL) {
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:				"config param\n", __func__, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:	enc_cfg = audio->enc_cfg;
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:	mutex_init(&audio->lock);
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:	mutex_init(&audio->read_lock);
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:	mutex_init(&audio->write_lock);
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:	spin_lock_init(&audio->dsp_lock);
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:	init_waitqueue_head(&audio->read_wait);
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:	init_waitqueue_head(&audio->write_wait);
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:	audio->str_cfg.buffer_size = FRAME_SIZE;
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:	audio->str_cfg.buffer_count = FRAME_NUM;
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:	audio->min_frame_size = 35;
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:	audio->max_frames_per_buf = 10;
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:	audio->pcm_cfg.buffer_size = PCM_BUF_SIZE;
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:	audio->pcm_cfg.buffer_count = PCM_BUF_COUNT;
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:	audio->pcm_cfg.channel_count = 1;
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:	audio->pcm_cfg.sample_rate = 8000;
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:	audio->buf_cfg.meta_info_enable = 0x01;
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:	audio->buf_cfg.frames_per_buf = 0x01;
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:	audio->ac = q6asm_audio_client_alloc((app_cb)q6asm_in_cb,
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:	if (!audio->ac) {
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:		kfree(audio->enc_cfg);
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:		audio->feedback = NON_TUNNEL_MODE;
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:		rc = q6asm_open_read_write(audio->ac, FORMAT_V13K,
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:				__func__, audio->ac->session, rc);
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:				audio->ac->session);
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:		audio->feedback = TUNNEL_MODE;
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:		rc = q6asm_open_read(audio->ac, FORMAT_V13K);
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:				__func__, audio->ac->session, rc);
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:		rc = q6asm_reg_tx_overflow(audio->ac, 0x01);
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:			"failed rc=%d\n", __func__, audio->ac->session, rc);
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:				audio->ac->session);
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:				audio->ac->session);
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:	audio->opened = 1;
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:	atomic_set(&audio->in_count, PCM_BUF_COUNT);
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:	atomic_set(&audio->out_count, 0x00);
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:	audio->enc_ioctl = qcelp_in_ioctl;
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:	pr_info("%s:session id %d: success\n", __func__, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:	q6asm_audio_client_free(audio->ac);
arch/arm/mach-msm/qdsp6v2/qcelp_in.c:	kfree(audio->enc_cfg);
arch/arm/mach-msm/qdsp6v2/audio_multi_aac.c:		aac_config = (struct msm_audio_aac_config *)audio->codec_cfg;
arch/arm/mach-msm/qdsp6v2/audio_multi_aac.c:		aac_cfg.sample_rate =  audio->pcm_cfg.sample_rate;
arch/arm/mach-msm/qdsp6v2/audio_multi_aac.c:						audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_multi_aac.c:		if (audio->feedback == NON_TUNNEL_MODE) {
arch/arm/mach-msm/qdsp6v2/audio_multi_aac.c:			rc = q6asm_enc_cfg_blk_pcm_native(audio->ac,
arch/arm/mach-msm/qdsp6v2/audio_multi_aac.c:		rc = q6asm_enable_sbrps(audio->ac, sbr_ps);
arch/arm/mach-msm/qdsp6v2/audio_multi_aac.c:		rc = q6asm_media_format_block_multi_aac(audio->ac, &aac_cfg);
arch/arm/mach-msm/qdsp6v2/audio_multi_aac.c:			rc = q6asm_set_encdec_chan_map(audio->ac, 2);
arch/arm/mach-msm/qdsp6v2/audio_multi_aac.c:		audio->eos_rsp = 0;
arch/arm/mach-msm/qdsp6v2/audio_multi_aac.c:		audio->eos_flag = 0;
arch/arm/mach-msm/qdsp6v2/audio_multi_aac.c:			audio->enabled = 1;
arch/arm/mach-msm/qdsp6v2/audio_multi_aac.c:			audio->enabled = 0;
arch/arm/mach-msm/qdsp6v2/audio_multi_aac.c:						audio->ac->session,
arch/arm/mach-msm/qdsp6v2/audio_multi_aac.c:						audio->enabled);
arch/arm/mach-msm/qdsp6v2/audio_multi_aac.c:		if (audio->stopped == 1)
arch/arm/mach-msm/qdsp6v2/audio_multi_aac.c:			audio->stopped = 0;
arch/arm/mach-msm/qdsp6v2/audio_multi_aac.c:		if (copy_to_user((void *)arg, audio->codec_cfg,
arch/arm/mach-msm/qdsp6v2/audio_multi_aac.c:		if (copy_from_user(audio->codec_cfg, (void *)arg,
arch/arm/mach-msm/qdsp6v2/audio_multi_aac.c:			aac_config = audio->codec_cfg;
arch/arm/mach-msm/qdsp6v2/audio_multi_aac.c:				rc = q6asm_cfg_dual_mono_aac(audio->ac,
arch/arm/mach-msm/qdsp6v2/audio_multi_aac.c:		if (copy_from_user(audio->codec_cfg, (void *)arg,
arch/arm/mach-msm/qdsp6v2/audio_multi_aac.c:				 (unsigned long *)audio->codec_cfg;
arch/arm/mach-msm/qdsp6v2/audio_multi_aac.c:			rc = q6asm_cfg_aac_sel_mix_coef(audio->ac, *mix_coeff);
arch/arm/mach-msm/qdsp6v2/audio_multi_aac.c:		rc = audio->codec_ioctl(file, cmd, arg);
arch/arm/mach-msm/qdsp6v2/audio_multi_aac.c:	audio->codec_cfg = kzalloc(sizeof(struct msm_audio_aac_config),
arch/arm/mach-msm/qdsp6v2/audio_multi_aac.c:	if (audio->codec_cfg == NULL) {
arch/arm/mach-msm/qdsp6v2/audio_multi_aac.c:	aac_config = audio->codec_cfg;
arch/arm/mach-msm/qdsp6v2/audio_multi_aac.c:	audio->pcm_cfg.buffer_size = PCM_BUFSZ_MIN_AACM;
arch/arm/mach-msm/qdsp6v2/audio_multi_aac.c:	audio->ac = q6asm_audio_client_alloc((app_cb) q6_audio_cb,
arch/arm/mach-msm/qdsp6v2/audio_multi_aac.c:	if (!audio->ac) {
arch/arm/mach-msm/qdsp6v2/audio_multi_aac.c:		kfree(audio->codec_cfg);
arch/arm/mach-msm/qdsp6v2/audio_multi_aac.c:		rc = q6asm_open_read_write(audio->ac, FORMAT_LINEAR_PCM,
arch/arm/mach-msm/qdsp6v2/audio_multi_aac.c:		audio->feedback = NON_TUNNEL_MODE;
arch/arm/mach-msm/qdsp6v2/audio_multi_aac.c:		audio->buf_cfg.frames_per_buf = 0x01;*/
arch/arm/mach-msm/qdsp6v2/audio_multi_aac.c:		audio->buf_cfg.meta_info_enable = 0x01;
arch/arm/mach-msm/qdsp6v2/audio_multi_aac.c:		rc = q6asm_open_write(audio->ac, FORMAT_MPEG4_MULTI_AAC);
arch/arm/mach-msm/qdsp6v2/audio_multi_aac.c:		audio->feedback = TUNNEL_MODE;
arch/arm/mach-msm/qdsp6v2/audio_multi_aac.c:		audio->buf_cfg.meta_info_enable = 0x00;
arch/arm/mach-msm/qdsp6v2/audio_multi_aac.c:	snprintf(name, sizeof name, "msm_multi_aac_%04x", audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_multi_aac.c:	audio->dentry = debugfs_create_file(name, S_IFREG | S_IRUGO,
arch/arm/mach-msm/qdsp6v2/audio_multi_aac.c:	if (IS_ERR(audio->dentry))
arch/arm/mach-msm/qdsp6v2/audio_multi_aac.c:		__func__, audio->feedback, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_multi_aac.c:	q6asm_audio_client_free(audio->ac);
arch/arm/mach-msm/qdsp6v2/audio_multi_aac.c:	kfree(audio->codec_cfg);
arch/arm/mach-msm/qdsp6v2/audio_qcelp.c:						audio, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_qcelp.c:		if (audio->feedback == NON_TUNNEL_MODE) {
arch/arm/mach-msm/qdsp6v2/audio_qcelp.c:			rc = q6asm_enc_cfg_blk_pcm(audio->ac,
arch/arm/mach-msm/qdsp6v2/audio_qcelp.c:					audio->pcm_cfg.sample_rate,
arch/arm/mach-msm/qdsp6v2/audio_qcelp.c:					audio->pcm_cfg.channel_count);
arch/arm/mach-msm/qdsp6v2/audio_qcelp.c:		audio->eos_rsp = 0;
arch/arm/mach-msm/qdsp6v2/audio_qcelp.c:		audio->eos_flag = 0;
arch/arm/mach-msm/qdsp6v2/audio_qcelp.c:			audio->enabled = 1;
arch/arm/mach-msm/qdsp6v2/audio_qcelp.c:			audio->enabled = 0;
arch/arm/mach-msm/qdsp6v2/audio_qcelp.c:						audio->ac->session,
arch/arm/mach-msm/qdsp6v2/audio_qcelp.c:						audio->enabled);
arch/arm/mach-msm/qdsp6v2/audio_qcelp.c:		if (audio->stopped == 1)
arch/arm/mach-msm/qdsp6v2/audio_qcelp.c:			audio->stopped = 0;
arch/arm/mach-msm/qdsp6v2/audio_qcelp.c:		rc = audio->codec_ioctl(file, cmd, arg);
arch/arm/mach-msm/qdsp6v2/audio_qcelp.c:	audio->str_cfg.buffer_size = FRAME_SIZE_DEC_QCELP;
arch/arm/mach-msm/qdsp6v2/audio_qcelp.c:	audio->str_cfg.buffer_count = FRAME_NUM;
arch/arm/mach-msm/qdsp6v2/audio_qcelp.c:	audio->pcm_cfg.buffer_size = PCM_BUFSZ_MIN;
arch/arm/mach-msm/qdsp6v2/audio_qcelp.c:	audio->pcm_cfg.buffer_count = PCM_BUF_COUNT;
arch/arm/mach-msm/qdsp6v2/audio_qcelp.c:	audio->pcm_cfg.sample_rate = 8000;
arch/arm/mach-msm/qdsp6v2/audio_qcelp.c:	audio->pcm_cfg.channel_count = 1;
arch/arm/mach-msm/qdsp6v2/audio_qcelp.c:	audio->ac = q6asm_audio_client_alloc((app_cb) q6_audio_cb,
arch/arm/mach-msm/qdsp6v2/audio_qcelp.c:	if (!audio->ac) {
arch/arm/mach-msm/qdsp6v2/audio_qcelp.c:		rc = q6asm_open_read_write(audio->ac, FORMAT_LINEAR_PCM,
arch/arm/mach-msm/qdsp6v2/audio_qcelp.c:		audio->feedback = NON_TUNNEL_MODE;
arch/arm/mach-msm/qdsp6v2/audio_qcelp.c:		audio->buf_cfg.frames_per_buf = 0x01;
arch/arm/mach-msm/qdsp6v2/audio_qcelp.c:		audio->buf_cfg.meta_info_enable = 0x01;
arch/arm/mach-msm/qdsp6v2/audio_qcelp.c:		rc = q6asm_open_write(audio->ac, FORMAT_V13K);
arch/arm/mach-msm/qdsp6v2/audio_qcelp.c:		audio->feedback = TUNNEL_MODE;
arch/arm/mach-msm/qdsp6v2/audio_qcelp.c:		audio->buf_cfg.meta_info_enable = 0x00;
arch/arm/mach-msm/qdsp6v2/audio_qcelp.c:	snprintf(name, sizeof name, "msm_qcelp_%04x", audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_qcelp.c:	audio->dentry = debugfs_create_file(name, S_IFREG | S_IRUGO,
arch/arm/mach-msm/qdsp6v2/audio_qcelp.c:	if (IS_ERR(audio->dentry))
arch/arm/mach-msm/qdsp6v2/audio_qcelp.c:						audio->feedback,
arch/arm/mach-msm/qdsp6v2/audio_qcelp.c:						audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_qcelp.c:	q6asm_audio_client_free(audio->ac);
arch/arm/mach-msm/qdsp6v2/audio_wma.c:						audio, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_wma.c:		if (audio->feedback == NON_TUNNEL_MODE) {
arch/arm/mach-msm/qdsp6v2/audio_wma.c:			rc = q6asm_enc_cfg_blk_pcm(audio->ac,
arch/arm/mach-msm/qdsp6v2/audio_wma.c:					audio->pcm_cfg.sample_rate,
arch/arm/mach-msm/qdsp6v2/audio_wma.c:					audio->pcm_cfg.channel_count);
arch/arm/mach-msm/qdsp6v2/audio_wma.c:		wma_config = (struct msm_audio_wma_config_v2 *)audio->codec_cfg;
arch/arm/mach-msm/qdsp6v2/audio_wma.c:		rc = q6asm_media_format_block_wma(audio->ac, &wma_cfg);
arch/arm/mach-msm/qdsp6v2/audio_wma.c:		audio->eos_rsp = 0;
arch/arm/mach-msm/qdsp6v2/audio_wma.c:		audio->eos_flag = 0;
arch/arm/mach-msm/qdsp6v2/audio_wma.c:			audio->enabled = 1;
arch/arm/mach-msm/qdsp6v2/audio_wma.c:			audio->enabled = 0;
arch/arm/mach-msm/qdsp6v2/audio_wma.c:		pr_debug("AUDIO_START success enable[%d]\n", audio->enabled);
arch/arm/mach-msm/qdsp6v2/audio_wma.c:		if (audio->stopped == 1)
arch/arm/mach-msm/qdsp6v2/audio_wma.c:			audio->stopped = 0;
arch/arm/mach-msm/qdsp6v2/audio_wma.c:		if (copy_to_user((void *)arg, audio->codec_cfg,
arch/arm/mach-msm/qdsp6v2/audio_wma.c:		if (copy_from_user(audio->codec_cfg, (void *)arg,
arch/arm/mach-msm/qdsp6v2/audio_wma.c:		rc = audio->codec_ioctl(file, cmd, arg);
arch/arm/mach-msm/qdsp6v2/audio_wma.c:	audio->codec_cfg = kzalloc(sizeof(struct msm_audio_wma_config_v2),
arch/arm/mach-msm/qdsp6v2/audio_wma.c:	if (audio->codec_cfg == NULL) {
arch/arm/mach-msm/qdsp6v2/audio_wma.c:	audio->pcm_cfg.buffer_size = PCM_BUFSZ_MIN;
arch/arm/mach-msm/qdsp6v2/audio_wma.c:	audio->ac = q6asm_audio_client_alloc((app_cb) q6_audio_cb,
arch/arm/mach-msm/qdsp6v2/audio_wma.c:	if (!audio->ac) {
arch/arm/mach-msm/qdsp6v2/audio_wma.c:		kfree(audio->codec_cfg);
arch/arm/mach-msm/qdsp6v2/audio_wma.c:		rc = q6asm_open_read_write(audio->ac, FORMAT_LINEAR_PCM,
arch/arm/mach-msm/qdsp6v2/audio_wma.c:		audio->feedback = NON_TUNNEL_MODE;
arch/arm/mach-msm/qdsp6v2/audio_wma.c:		audio->buf_cfg.frames_per_buf = 0x01;
arch/arm/mach-msm/qdsp6v2/audio_wma.c:		audio->buf_cfg.meta_info_enable = 0x01;
arch/arm/mach-msm/qdsp6v2/audio_wma.c:		rc = q6asm_open_write(audio->ac, FORMAT_WMA_V9);
arch/arm/mach-msm/qdsp6v2/audio_wma.c:		audio->feedback = TUNNEL_MODE;
arch/arm/mach-msm/qdsp6v2/audio_wma.c:		audio->buf_cfg.meta_info_enable = 0x00;
arch/arm/mach-msm/qdsp6v2/audio_wma.c:	snprintf(name, sizeof name, "msm_wma_%04x", audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_wma.c:	audio->dentry = debugfs_create_file(name, S_IFREG | S_IRUGO,
arch/arm/mach-msm/qdsp6v2/audio_wma.c:	if (IS_ERR(audio->dentry))
arch/arm/mach-msm/qdsp6v2/audio_wma.c:						audio->feedback,
arch/arm/mach-msm/qdsp6v2/audio_wma.c:						audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_wma.c:	q6asm_audio_client_free(audio->ac);
arch/arm/mach-msm/qdsp6v2/audio_wma.c:	kfree(audio->codec_cfg);
arch/arm/mach-msm/qdsp6v2/pcm_out.c:	wake_lock(&audio->wakelock);
arch/arm/mach-msm/qdsp6v2/pcm_out.c:	wake_unlock(&audio->wakelock);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		audio->volume = evt_payload->session_vol;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:				 "enabled = %d\n", __func__, audio->volume,
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:				 audio->out_enabled);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		if (audio->out_enabled == 1) {
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:			if (audio->ac) {
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:				rc = q6asm_set_volume(audio->ac, audio->volume);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	wake_lock(&audio->wakelock);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	wake_unlock(&audio->wakelock);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:/* must be called with audio->lock held */
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	return q6asm_run(audio->ac, 0, 0, 0);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:			audio->out_enabled, audio->drv_status);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	if (audio->out_enabled) {
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		list_for_each_safe(ptr, next, &audio->out_queue) {
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		if (!(audio->drv_status & ADRV_STATUS_PAUSE)) {
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		rc = q6asm_cmd(audio->ac, CMD_FLUSH);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		audio->drv_status &= ~ADRV_STATUS_OBUF_GIVEN;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		audio->out_needed = 0;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		if (audio->stopped == 0) {
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:				audio->out_enabled = 1;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:				audio->out_needed = 1;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:				if (audio->drv_status & ADRV_STATUS_PAUSE)
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:					audio->drv_status &= ~ADRV_STATUS_PAUSE;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:/* must be called with audio->lock held */
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	pr_debug("%s:%d %d\n", __func__, audio->opened, audio->out_enabled);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	if (audio->opened) {
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		audio->out_enabled = 0;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		audio->opened = 0;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		rc = q6asm_cmd(audio->ac, CMD_CLOSE);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		audio->drv_status &= ~ADRV_STATUS_OBUF_GIVEN;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		audio->out_needed = 0;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:			audio->out_enabled);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	if (audio->out_enabled) {
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		rc = q6asm_cmd(audio->ac, CMD_PAUSE);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:			  __func__, needed, audio->out_needed, token);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	if (needed && !audio->wflush) {
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		audio->out_needed = 1;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		if (audio->drv_status & ADRV_STATUS_OBUF_GIVEN) {
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:			used_buf = list_first_entry(&audio->out_queue,
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:				audio->drv_status &= ~ADRV_STATUS_OBUF_GIVEN;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:			 __func__, audio->out_needed, audio->stopped,
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:			 audio->drv_status);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	if (audio->out_needed && (audio->stopped == 0)) {
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		if (!list_empty(&audio->out_queue)) {
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:			next_buf = list_first_entry(&audio->out_queue,
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:				ac = audio->ac;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:				audio->out_needed = 0;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:				audio->drv_status |= ADRV_STATUS_OBUF_GIVEN;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		} else if (list_empty(&audio->out_queue) &&
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:				   (audio->drv_status & ADRV_STATUS_FSYNC)) {
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:			wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	spin_lock(&audio->event_queue_lock);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	empty = !list_empty(&audio->event_queue);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	spin_unlock(&audio->event_queue_lock);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	return empty || audio->event_abort;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	spin_lock(&audio->event_queue_lock);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	list_for_each_safe(ptr, next, &audio->event_queue) {
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		drv_evt = list_first_entry(&audio->event_queue,
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	list_for_each_safe(ptr, next, &audio->free_event_queue) {
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		drv_evt = list_first_entry(&audio->free_event_queue,
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	spin_unlock(&audio->event_queue_lock);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:			audio->event_wait, audlpa_events_pending(audio),
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:			audio->event_wait, audlpa_events_pending(audio));
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	if (audio->event_abort) {
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		audio->event_abort = 0;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	spin_lock(&audio->event_queue_lock);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	if (!list_empty(&audio->event_queue)) {
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		drv_evt = list_first_entry(&audio->event_queue,
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		list_add_tail(&drv_evt->list, &audio->free_event_queue);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	spin_unlock(&audio->event_queue_lock);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	list_for_each_entry(region_elt, &audio->ion_region_queue, list) {
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	handle = ion_import_dma_buf(audio->client, info->fd);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	rc = ion_handle_get_flags(audio->client, handle, &ionflag);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	temp_ptr = ion_map_kernel(audio->client, handle);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	rc = ion_phys(audio->client, handle, &paddr, &len);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	list_add_tail(&region->list, &audio->ion_region_queue);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	rc = q6asm_memory_map(audio->ac, (uint32_t)paddr, IN, (uint32_t)len, 1);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	ion_unmap_kernel(audio->client, handle);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	ion_free(audio->client, handle);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	list_for_each_safe(ptr, next, &audio->ion_region_queue) {
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:			rc = q6asm_memory_unmap(audio->ac,
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:			ion_unmap_kernel(audio->client, region->handle);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:			ion_free(audio->client, region->handle);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	list_for_each_entry(region_elt, &audio->ion_region_queue, list) {
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		list_for_each_entry(region_elt, &audio->ion_region_queue,
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		list_add_tail(&buf_node->list, &audio->out_queue);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	if (!audio->out_prefill) {
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		if (audio->codec_ops.set_params != NULL) {
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:			rc = audio->codec_ops.set_params(audio);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:			audio->out_prefill = 1;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:				 audio->teos);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		if (audio->teos == 0) {
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:			audio->teos = 1;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:			wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	rc = q6asm_media_format_block_pcm(audio->ac, audio->out_sample_rate,
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:					audio->out_channel_mode);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		rc = q6asm_get_session_time(audio->ac, &timestamp);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		temp = (timestamp * 2 * audio->out_channel_mode);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		temp = temp * (audio->out_sample_rate/1000);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		audio->bytes_consumed = (uint32_t)(temp & 0xFFFFFFFF);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		stats.byte_count = audio->bytes_consumed;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:			audio->bytes_consumed, stats.unused[0], timestamp);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		if (mutex_trylock(&audio->get_event_lock)) {
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:			mutex_unlock(&audio->get_event_lock);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		audio->event_abort = 1;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		wake_up(&audio->event_wait);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:			audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		if (!audio->opened) {
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:			audio->out_enabled = 1;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:			audio->out_needed = 1;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:			rc = q6asm_set_volume(audio->ac, audio->volume);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:			rc = q6asm_set_softpause(audio->ac, &softpause);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:			rc = q6asm_set_softvolume(audio->ac, &softvol);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:			rc = q6asm_set_lrgain(audio->ac, 0x2000, 0x2000);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:			rc = q6asm_set_mute(audio->ac, 0);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:			if (!list_empty(&audio->out_queue))
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:			if (audio->stopped == 1)
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:				audio->stopped = 0;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:			audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		audio->stopped = 1;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		audio->out_enabled = 0;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		audio->out_needed = 0;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		audio->drv_status &= ~ADRV_STATUS_PAUSE;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:			audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		audio->wflush = 1;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		if (audio->out_enabled)
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:			audio->wflush = 0;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		audio->wflush = 0;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		audio->out_sample_rate = config.sample_rate;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		audio->out_channel_mode = config.channel_count;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		audio->out_bits = config.bits;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		audio->buffer_count = config.buffer_count;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		audio->buffer_size = config.buffer_size;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		config.buffer_count = audio->buffer_count;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		config.buffer_size = audio->buffer_size;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		config.sample_rate = audio->out_sample_rate;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		config.channel_count = audio->out_channel_mode;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		config.bits = audio->out_bits;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:			audio->drv_status |= ADRV_STATUS_PAUSE;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:			if (audio->drv_status & ADRV_STATUS_PAUSE) {
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:					audio->drv_status &= ~ADRV_STATUS_PAUSE;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:					audio->out_enabled = 1;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		if (audio->drv_status & ADRV_STATUS_FSYNC)
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		if (copy_to_user((void *) arg, &audio->ac->session,
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		rc = audio->codec_ops.ioctl(file, cmd, arg);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	pr_info("%s:Session %d\n", __func__, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	audio->drv_status |= ADRV_STATUS_FSYNC;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	mutex_lock(&audio->write_lock);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	audio->teos = 0;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	rc = wait_event_interruptible(audio->write_wait,
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:					((list_empty(&audio->out_queue)) ||
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:					audio->wflush || audio->stopped));
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	if (audio->wflush || audio->stopped)
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	rc = q6asm_cmd(audio->ac, CMD_EOS);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	rc = wait_event_interruptible_timeout(audio->write_wait,
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:				  (audio->teos || audio->wflush ||
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:				  audio->stopped), 5*HZ);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	if (audio->teos == 1) {
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:			audio->drv_status &= ~ADRV_STATUS_PAUSE;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:			audio->out_enabled = 1;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:			audio->out_needed = 1;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	if (audio->stopped || audio->wflush)
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	mutex_unlock(&audio->write_lock);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	audio->drv_status &= ~ADRV_STATUS_FSYNC;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	list_for_each_safe(ptr, next, &audio->ion_region_queue) {
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		ion_unmap_kernel(audio->client, region->handle);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		ion_free(audio->client, region->handle);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	list_for_each_safe(ptr, next, &audio->ion_region_queue) {
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:			rc = q6asm_memory_unmap(audio->ac,
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		(int)audio, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	audio->wflush = 1;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	if (audio->out_enabled)
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	audio->wflush = 0;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	msm_clear_session_id(audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	auddev_unregister_evt_listner(AUDDEV_CLNT_DEC, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	q6asm_audio_client_free(audio->ac);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	ion_client_destroy(audio->client);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	unregister_early_suspend(&audio->suspend_ctl.node);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	audio->opened = 0;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	audio->out_enabled = 0;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	audio->out_prefill = 0;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	audio->event_abort = 1;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	wake_up(&audio->event_wait);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	if (audio->stopped == 0)
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	wake_lock_destroy(&audio->wakelock);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	if (audio->dentry)
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		debugfs_remove(audio->dentry);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	spin_lock(&audio->event_queue_lock);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	if (!list_empty(&audio->free_event_queue)) {
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		e_node = list_first_entry(&audio->free_event_queue,
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	list_add_tail(&e_node->list, &audio->event_queue);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	spin_unlock(&audio->event_queue_lock);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	wake_up(&audio->event_wait);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	mutex_lock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	n = scnprintf(buffer, debug_bufmax, "opened %d\n", audio->opened);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:					"out_enabled %d\n", audio->out_enabled);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:					"stopped %d\n", audio->stopped);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:					"volume %x\n", audio->volume);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:					audio->out_sample_rate);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:					audio->out_channel_mode);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	mutex_unlock(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:					"wflush %d\n", audio->wflush);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:					"running %d\n", audio->running);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:					"out_needed %d\n", audio->out_needed);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	audio->minor_no = iminor(inode);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	dec_attrb |= audlpa_decs[audio->minor_no].dec_attrb;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	audio->codec_ops.ioctl = audlpa_decs[audio->minor_no].ioctl;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	audio->codec_ops.set_params = audlpa_decs[audio->minor_no].set_params;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	audio->buffer_size = BUFSZ;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	audio->buffer_count = MAX_BUF;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	audio->ac = q6asm_audio_client_alloc((app_cb)q6_audlpa_out_cb,
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	if (!audio->ac) {
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	rc = q6asm_open_write(audio->ac, FORMAT_LINEAR_PCM);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:						audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	rc = q6asm_set_io_mode(audio->ac, ASYNC_IO_MODE);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	mutex_init(&audio->lock);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	mutex_init(&audio->write_lock);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	mutex_init(&audio->get_event_lock);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	spin_lock_init(&audio->dsp_lock);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	init_waitqueue_head(&audio->write_wait);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	INIT_LIST_HEAD(&audio->out_queue);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	INIT_LIST_HEAD(&audio->ion_region_queue);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	INIT_LIST_HEAD(&audio->free_event_queue);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	INIT_LIST_HEAD(&audio->event_queue);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	init_waitqueue_head(&audio->wait);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	init_waitqueue_head(&audio->event_wait);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	spin_lock_init(&audio->event_queue_lock);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:		audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	wake_lock_init(&audio->wakelock, WAKE_LOCK_SUSPEND, wake_lock_name);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	audio->out_sample_rate = 44100;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	audio->out_channel_mode = 2;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	audio->out_bits = 16;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	audio->volume = 0x2000;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	audio->opened = 1;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	audio->out_enabled = 0;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	audio->out_prefill = 0;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	audio->bytes_consumed = 0;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	audio->device_events = AUDDEV_EVT_STREAM_VOL_CHG;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	audio->drv_status &= ~ADRV_STATUS_PAUSE;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	rc = auddev_register_evt_listner(audio->device_events,
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:					audio->ac->session,
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	snprintf(name, sizeof name, "msm_lpa_%04x", audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	audio->dentry = debugfs_create_file(name, S_IFREG | S_IRUGO,
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	if (IS_ERR(audio->dentry))
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	audio->suspend_ctl.node.level = EARLY_SUSPEND_LEVEL_DISABLE_FB;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	audio->suspend_ctl.node.resume = audlpa_resume;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	audio->suspend_ctl.node.suspend = audlpa_suspend;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	audio->suspend_ctl.audio = audio;
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	register_early_suspend(&audio->suspend_ctl.node);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:			list_add_tail(&e_node->list, &audio->free_event_queue);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:						audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	audio->client = msm_ion_client_create(UINT_MAX, "Audio_LPA_Client");
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	if (IS_ERR_OR_NULL(audio->client)) {
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	pr_debug("Allocating ION clinet in audio_open %p", audio->client);
arch/arm/mach-msm/qdsp6v2/audio_lpa.c:	q6asm_audio_client_free(audio->ac);
arch/arm/mach-msm/qdsp6v2/q6audio_v2_aio.c:		if (audio->feedback) { /* Non-Tunnel mode */
arch/arm/mach-msm/qdsp6v2/q6audio_v2_aio.c:			audio->eos_rsp = 1;
arch/arm/mach-msm/qdsp6v2/q6audio_v2_aio.c:			if (audio->eos_flag &&
arch/arm/mach-msm/qdsp6v2/q6audio_v2_aio.c:				(audio->eos_write_payload.aio_buf.buf_addr)) {
arch/arm/mach-msm/qdsp6v2/q6audio_v2_aio.c:						audio->eos_write_payload);
arch/arm/mach-msm/qdsp6v2/q6audio_v2_aio.c:				memset(&audio->eos_write_payload , 0,
arch/arm/mach-msm/qdsp6v2/q6audio_v2_aio.c:				audio->eos_flag = 0;
arch/arm/mach-msm/qdsp6v2/q6audio_v2_aio.c:			audio->eos_rsp = 1;
arch/arm/mach-msm/qdsp6v2/q6audio_v2_aio.c:			wake_up(&audio->write_wait);
arch/arm/mach-msm/qdsp6v2/q6audio_v2_aio.c:			wake_up(&audio->cmd_wait);
arch/arm/mach-msm/qdsp6v2/q6audio_v2_aio.c:		__func__, audio, audio->pcm_cfg.sample_rate,
arch/arm/mach-msm/qdsp6v2/q6audio_v2_aio.c:		audio->pcm_cfg.channel_count);
arch/arm/mach-msm/qdsp6v2/q6audio_v2_aio.c:		audio->pcm_cfg.sample_rate = payload[0];
arch/arm/mach-msm/qdsp6v2/q6audio_v2_aio.c:		audio->pcm_cfg.channel_count = payload[1] & 0xFFFF;
arch/arm/mach-msm/qdsp6v2/q6audio_v2_aio.c:		e_payload.stream_info.chan_info = audio->pcm_cfg.channel_count;
arch/arm/mach-msm/qdsp6v2/q6audio_v2_aio.c:		e_payload.stream_info.sample_rate = audio->pcm_cfg.sample_rate;
arch/arm/mach-msm/qdsp6v2/q6audio_v2_aio.c:	if (audio->rflush)
arch/arm/mach-msm/qdsp6v2/q6audio_v2_aio.c:	atomic_add(payload[4], &audio->in_bytes);
arch/arm/mach-msm/qdsp6v2/q6audio_v2_aio.c:	atomic_add(payload[9], &audio->in_samples);
arch/arm/mach-msm/qdsp6v2/q6audio_v2_aio.c:	spin_lock_irqsave(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp6v2/q6audio_v2_aio.c:	BUG_ON(list_empty(&audio->in_queue));
arch/arm/mach-msm/qdsp6v2/q6audio_v2_aio.c:	filled_buf = list_first_entry(&audio->in_queue,
arch/arm/mach-msm/qdsp6v2/q6audio_v2_aio.c:		spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp6v2/q6audio_v2_aio.c:		if (audio->eos_rsp == 0x1) {
arch/arm/mach-msm/qdsp6v2/q6audio_v2_aio.c:			audio->eos_rsp = 0;
arch/arm/mach-msm/qdsp6v2/q6audio_v2_aio.c:			audio->eos_rsp = 0;
arch/arm/mach-msm/qdsp6v2/q6audio_v2_aio.c:		spin_unlock_irqrestore(&audio->dsp_lock, flags);
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:		enc_cfg = audio->enc_cfg;
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:				audio->ac->session, audio->buf_alloc);
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:		if (audio->enabled == 1) {
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:				__func__, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:		rc = q6asm_enc_cfg_blk_amrwb(audio->ac,
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:			audio->buf_cfg.frames_per_buf,
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:				"failed\n", __func__, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:		if (audio->feedback == NON_TUNNEL_MODE) {
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:			rc = q6asm_media_format_block_pcm(audio->ac,
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:				audio->pcm_cfg.sample_rate,
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:				audio->pcm_cfg.channel_count);
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:				"failed\n", __func__, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:				__func__, audio->ac->session,
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:				audio->enabled);
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:			audio->enabled = 1;
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:			audio->enabled = 0;
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:				"rc=%d\n", __func__, audio->ac->session, rc);
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:		while (cnt++ < audio->str_cfg.buffer_count)
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:			q6asm_read(audio->ac); /* Push buffer to DSP */
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:				__func__, audio->ac->session, audio->enabled);
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:				"rc=%d\n", __func__, audio->ac->session, rc);
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:		if (copy_to_user((void *)arg, audio->enc_cfg,
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:		enc_cfg = audio->enc_cfg;
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:				__func__, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:				__func__, audio->ac->session,
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:	audio->enc_cfg = kzalloc(sizeof(struct msm_audio_amrwb_enc_config),
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:	if (audio->enc_cfg == NULL) {
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:			"config param\n", __func__, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:	enc_cfg = audio->enc_cfg;
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:	mutex_init(&audio->lock);
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:	mutex_init(&audio->read_lock);
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:	mutex_init(&audio->write_lock);
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:	spin_lock_init(&audio->dsp_lock);
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:	init_waitqueue_head(&audio->read_wait);
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:	init_waitqueue_head(&audio->write_wait);
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:	audio->str_cfg.buffer_size = FRAME_SIZE;
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:	audio->str_cfg.buffer_count = FRAME_NUM;
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:	audio->min_frame_size = 32;
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:	audio->max_frames_per_buf = 10;
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:	audio->pcm_cfg.buffer_size = PCM_BUF_SIZE;
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:	audio->pcm_cfg.buffer_count = PCM_BUF_COUNT;
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:	audio->pcm_cfg.channel_count = 1;
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:	audio->pcm_cfg.sample_rate = 16000;
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:	audio->buf_cfg.meta_info_enable = 0x01;
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:	audio->buf_cfg.frames_per_buf = 0x01;
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:	audio->ac = q6asm_audio_client_alloc((app_cb)q6asm_in_cb,
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:	if (!audio->ac) {
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:		kfree(audio->enc_cfg);
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:		audio->feedback = NON_TUNNEL_MODE;
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:		rc = q6asm_open_read_write(audio->ac, FORMAT_AMRWB,
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:				__func__, audio->ac->session, rc);
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:				__func__, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:		audio->feedback = TUNNEL_MODE;
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:		rc = q6asm_open_read(audio->ac, FORMAT_AMRWB);
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:				__func__, audio->ac->session, rc);
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:		rc = q6asm_reg_tx_overflow(audio->ac, 0x01);
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:				"failed rc=%d\n", __func__, audio->ac->session,
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:				__func__, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:				audio->ac->session);
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:	audio->opened = 1;
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:	atomic_set(&audio->in_count, PCM_BUF_COUNT);
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:	atomic_set(&audio->out_count, 0x00);
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:	audio->enc_ioctl = amrwb_in_ioctl;
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:	pr_info("%s:session id %d: success\n", __func__, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:	q6asm_audio_client_free(audio->ac);
arch/arm/mach-msm/qdsp6v2/amrwb_in.c:	kfree(audio->enc_cfg);
arch/arm/mach-msm/qdsp6v2/audio_amrnb.c:						audio, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_amrnb.c:		if (audio->feedback == NON_TUNNEL_MODE) {
arch/arm/mach-msm/qdsp6v2/audio_amrnb.c:			rc = q6asm_enc_cfg_blk_pcm(audio->ac,
arch/arm/mach-msm/qdsp6v2/audio_amrnb.c:					audio->pcm_cfg.sample_rate,
arch/arm/mach-msm/qdsp6v2/audio_amrnb.c:					audio->pcm_cfg.channel_count);
arch/arm/mach-msm/qdsp6v2/audio_amrnb.c:		audio->eos_rsp = 0;
arch/arm/mach-msm/qdsp6v2/audio_amrnb.c:		audio->eos_flag = 0;
arch/arm/mach-msm/qdsp6v2/audio_amrnb.c:			audio->enabled = 1;
arch/arm/mach-msm/qdsp6v2/audio_amrnb.c:			audio->enabled = 0;
arch/arm/mach-msm/qdsp6v2/audio_amrnb.c:		pr_debug("AUDIO_START success enable[%d]\n", audio->enabled);
arch/arm/mach-msm/qdsp6v2/audio_amrnb.c:		if (audio->stopped == 1)
arch/arm/mach-msm/qdsp6v2/audio_amrnb.c:			audio->stopped = 0;
arch/arm/mach-msm/qdsp6v2/audio_amrnb.c:		rc = audio->codec_ioctl(file, cmd, arg);
arch/arm/mach-msm/qdsp6v2/audio_amrnb.c:	audio->pcm_cfg.buffer_size = PCM_BUFSZ_MIN;
arch/arm/mach-msm/qdsp6v2/audio_amrnb.c:	audio->ac = q6asm_audio_client_alloc((app_cb) q6_audio_cb,
arch/arm/mach-msm/qdsp6v2/audio_amrnb.c:	if (!audio->ac) {
arch/arm/mach-msm/qdsp6v2/audio_amrnb.c:		rc = q6asm_open_read_write(audio->ac, FORMAT_LINEAR_PCM,
arch/arm/mach-msm/qdsp6v2/audio_amrnb.c:		audio->feedback = NON_TUNNEL_MODE;
arch/arm/mach-msm/qdsp6v2/audio_amrnb.c:		audio->buf_cfg.frames_per_buf = 0x01;
arch/arm/mach-msm/qdsp6v2/audio_amrnb.c:		audio->buf_cfg.meta_info_enable = 0x01;
arch/arm/mach-msm/qdsp6v2/audio_amrnb.c:		rc = q6asm_open_write(audio->ac, FORMAT_AMRNB);
arch/arm/mach-msm/qdsp6v2/audio_amrnb.c:		audio->feedback = TUNNEL_MODE;
arch/arm/mach-msm/qdsp6v2/audio_amrnb.c:		audio->buf_cfg.meta_info_enable = 0x00;
arch/arm/mach-msm/qdsp6v2/audio_amrnb.c:	snprintf(name, sizeof name, "msm_amrnb_%04x", audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_amrnb.c:	audio->dentry = debugfs_create_file(name, S_IFREG | S_IRUGO,
arch/arm/mach-msm/qdsp6v2/audio_amrnb.c:	if (IS_ERR(audio->dentry))
arch/arm/mach-msm/qdsp6v2/audio_amrnb.c:				audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_amrnb.c:	q6asm_audio_client_free(audio->ac);
arch/arm/mach-msm/qdsp6v2/aac_in.c:		enc_cfg = audio->enc_cfg;
arch/arm/mach-msm/qdsp6v2/aac_in.c:		aac_config = audio->codec_cfg;
arch/arm/mach-msm/qdsp6v2/aac_in.c:				audio->ac->session, audio->buf_alloc);
arch/arm/mach-msm/qdsp6v2/aac_in.c:		if (audio->enabled == 1) {
arch/arm/mach-msm/qdsp6v2/aac_in.c:				__func__, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/aac_in.c:		rc = q6asm_enc_cfg_blk_aac(audio->ac,
arch/arm/mach-msm/qdsp6v2/aac_in.c:					audio->buf_cfg.frames_per_buf,
arch/arm/mach-msm/qdsp6v2/aac_in.c:				"failed\n", __func__, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/aac_in.c:		if (audio->feedback == NON_TUNNEL_MODE) {
arch/arm/mach-msm/qdsp6v2/aac_in.c:			rc = q6asm_media_format_block_pcm(audio->ac,
arch/arm/mach-msm/qdsp6v2/aac_in.c:						audio->pcm_cfg.sample_rate,
arch/arm/mach-msm/qdsp6v2/aac_in.c:						audio->pcm_cfg.channel_count);
arch/arm/mach-msm/qdsp6v2/aac_in.c:				"failed\n", __func__, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/aac_in.c:			audio->enabled = 1;
arch/arm/mach-msm/qdsp6v2/aac_in.c:			audio->enabled = 0;
arch/arm/mach-msm/qdsp6v2/aac_in.c:			"failed rc=%d\n", __func__, audio->ac->session, rc);
arch/arm/mach-msm/qdsp6v2/aac_in.c:		while (cnt++ < audio->str_cfg.buffer_count)
arch/arm/mach-msm/qdsp6v2/aac_in.c:			q6asm_read(audio->ac);
arch/arm/mach-msm/qdsp6v2/aac_in.c:				__func__, audio->ac->session, audio->enabled);
arch/arm/mach-msm/qdsp6v2/aac_in.c:				audio->ac->session);
arch/arm/mach-msm/qdsp6v2/aac_in.c:				"rc=%d\n", __func__, audio->ac->session, rc);
arch/arm/mach-msm/qdsp6v2/aac_in.c:		enc_cfg = audio->enc_cfg;
arch/arm/mach-msm/qdsp6v2/aac_in.c:			"bitrate=%d\n", __func__, audio->ac->session,
arch/arm/mach-msm/qdsp6v2/aac_in.c:		enc_cfg = audio->enc_cfg;
arch/arm/mach-msm/qdsp6v2/aac_in.c:					audio->ac->session, cfg.stream_format);
arch/arm/mach-msm/qdsp6v2/aac_in.c:				__func__, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/aac_in.c:			__func__, audio->ac->session, enc_cfg->sample_rate,
arch/arm/mach-msm/qdsp6v2/aac_in.c:		if (copy_to_user((void *)arg, &audio->codec_cfg,
arch/arm/mach-msm/qdsp6v2/aac_in.c:		enc_cfg = audio->enc_cfg;
arch/arm/mach-msm/qdsp6v2/aac_in.c:		audio_aac_cfg = audio->codec_cfg;
arch/arm/mach-msm/qdsp6v2/aac_in.c:				 audio->ac->session, aac_cfg.sbr_on_flag,
arch/arm/mach-msm/qdsp6v2/aac_in.c:	audio->enc_cfg = kzalloc(sizeof(struct msm_audio_aac_enc_config),
arch/arm/mach-msm/qdsp6v2/aac_in.c:	if (audio->enc_cfg == NULL) {
arch/arm/mach-msm/qdsp6v2/aac_in.c:				"config param\n", __func__, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/aac_in.c:	enc_cfg = audio->enc_cfg;
arch/arm/mach-msm/qdsp6v2/aac_in.c:	audio->codec_cfg = kzalloc(sizeof(struct msm_audio_aac_config),
arch/arm/mach-msm/qdsp6v2/aac_in.c:	if (audio->codec_cfg == NULL) {
arch/arm/mach-msm/qdsp6v2/aac_in.c:				"config\n", __func__, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/aac_in.c:		kfree(audio->enc_cfg);
arch/arm/mach-msm/qdsp6v2/aac_in.c:	aac_config = audio->codec_cfg;
arch/arm/mach-msm/qdsp6v2/aac_in.c:	mutex_init(&audio->lock);
arch/arm/mach-msm/qdsp6v2/aac_in.c:	mutex_init(&audio->read_lock);
arch/arm/mach-msm/qdsp6v2/aac_in.c:	mutex_init(&audio->write_lock);
arch/arm/mach-msm/qdsp6v2/aac_in.c:	spin_lock_init(&audio->dsp_lock);
arch/arm/mach-msm/qdsp6v2/aac_in.c:	init_waitqueue_head(&audio->read_wait);
arch/arm/mach-msm/qdsp6v2/aac_in.c:	init_waitqueue_head(&audio->write_wait);
arch/arm/mach-msm/qdsp6v2/aac_in.c:	audio->str_cfg.buffer_size = FRAME_SIZE;
arch/arm/mach-msm/qdsp6v2/aac_in.c:	audio->str_cfg.buffer_count = FRAME_NUM;
arch/arm/mach-msm/qdsp6v2/aac_in.c:	audio->min_frame_size = 1536;
arch/arm/mach-msm/qdsp6v2/aac_in.c:	audio->max_frames_per_buf = 5;
arch/arm/mach-msm/qdsp6v2/aac_in.c:	audio->buf_cfg.meta_info_enable = 0x01;
arch/arm/mach-msm/qdsp6v2/aac_in.c:	audio->buf_cfg.frames_per_buf   = 0x01;
arch/arm/mach-msm/qdsp6v2/aac_in.c:	audio->pcm_cfg.buffer_count = PCM_BUF_COUNT;
arch/arm/mach-msm/qdsp6v2/aac_in.c:	audio->pcm_cfg.buffer_size  = PCM_BUF_SIZE;
arch/arm/mach-msm/qdsp6v2/aac_in.c:	audio->ac = q6asm_audio_client_alloc((app_cb)q6asm_in_cb,
arch/arm/mach-msm/qdsp6v2/aac_in.c:	if (!audio->ac) {
arch/arm/mach-msm/qdsp6v2/aac_in.c:		kfree(audio->enc_cfg);
arch/arm/mach-msm/qdsp6v2/aac_in.c:		kfree(audio->codec_cfg);
arch/arm/mach-msm/qdsp6v2/aac_in.c:	audio->buf_cfg.frames_per_buf = 0x01;
arch/arm/mach-msm/qdsp6v2/aac_in.c:		audio->feedback = NON_TUNNEL_MODE;
arch/arm/mach-msm/qdsp6v2/aac_in.c:		rc = q6asm_open_read_write(audio->ac, FORMAT_MPEG4_AAC,
arch/arm/mach-msm/qdsp6v2/aac_in.c:				__func__, audio->ac->session, rc);
arch/arm/mach-msm/qdsp6v2/aac_in.c:		audio->buf_cfg.meta_info_enable = 0x01;
arch/arm/mach-msm/qdsp6v2/aac_in.c:				audio->ac->session);
arch/arm/mach-msm/qdsp6v2/aac_in.c:		audio->feedback = TUNNEL_MODE;
arch/arm/mach-msm/qdsp6v2/aac_in.c:		rc = q6asm_open_read(audio->ac, FORMAT_MPEG4_AAC);
arch/arm/mach-msm/qdsp6v2/aac_in.c:				__func__, audio->ac->session, rc);
arch/arm/mach-msm/qdsp6v2/aac_in.c:		rc = q6asm_reg_tx_overflow(audio->ac, 0x01);
arch/arm/mach-msm/qdsp6v2/aac_in.c:				audio->ac->session, rc);
arch/arm/mach-msm/qdsp6v2/aac_in.c:		audio->buf_cfg.meta_info_enable = 0x00;
arch/arm/mach-msm/qdsp6v2/aac_in.c:			audio->ac->session);
arch/arm/mach-msm/qdsp6v2/aac_in.c:				audio->ac->session);
arch/arm/mach-msm/qdsp6v2/aac_in.c:	audio->opened = 1;
arch/arm/mach-msm/qdsp6v2/aac_in.c:	atomic_set(&audio->in_count, PCM_BUF_COUNT);
arch/arm/mach-msm/qdsp6v2/aac_in.c:	atomic_set(&audio->out_count, 0x00);
arch/arm/mach-msm/qdsp6v2/aac_in.c:	audio->enc_ioctl = aac_in_ioctl;
arch/arm/mach-msm/qdsp6v2/aac_in.c:	pr_info("%s:session id %d: success\n", __func__, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/aac_in.c:	q6asm_audio_client_free(audio->ac);
arch/arm/mach-msm/qdsp6v2/aac_in.c:	kfree(audio->enc_cfg);
arch/arm/mach-msm/qdsp6v2/aac_in.c:	kfree(audio->codec_cfg);
arch/arm/mach-msm/qdsp6v2/audio_wmapro.c:						audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_wmapro.c:		if (audio->feedback == NON_TUNNEL_MODE) {
arch/arm/mach-msm/qdsp6v2/audio_wmapro.c:			rc = q6asm_enc_cfg_blk_pcm(audio->ac,
arch/arm/mach-msm/qdsp6v2/audio_wmapro.c:					audio->pcm_cfg.sample_rate,
arch/arm/mach-msm/qdsp6v2/audio_wmapro.c:					audio->pcm_cfg.channel_count);
arch/arm/mach-msm/qdsp6v2/audio_wmapro.c:				audio->codec_cfg;
arch/arm/mach-msm/qdsp6v2/audio_wmapro.c:		rc = q6asm_media_format_block_wmapro(audio->ac, &wmapro_cfg);
arch/arm/mach-msm/qdsp6v2/audio_wmapro.c:		audio->eos_rsp = 0;
arch/arm/mach-msm/qdsp6v2/audio_wmapro.c:		audio->eos_flag = 0;
arch/arm/mach-msm/qdsp6v2/audio_wmapro.c:			audio->enabled = 1;
arch/arm/mach-msm/qdsp6v2/audio_wmapro.c:			audio->enabled = 0;
arch/arm/mach-msm/qdsp6v2/audio_wmapro.c:		pr_debug("AUDIO_START success enable[%d]\n", audio->enabled);
arch/arm/mach-msm/qdsp6v2/audio_wmapro.c:		if (audio->stopped == 1)
arch/arm/mach-msm/qdsp6v2/audio_wmapro.c:			audio->stopped = 0;
arch/arm/mach-msm/qdsp6v2/audio_wmapro.c:		if (copy_to_user((void *)arg, audio->codec_cfg,
arch/arm/mach-msm/qdsp6v2/audio_wmapro.c:		if (copy_from_user(audio->codec_cfg, (void *)arg,
arch/arm/mach-msm/qdsp6v2/audio_wmapro.c:		rc = audio->codec_ioctl(file, cmd, arg);
arch/arm/mach-msm/qdsp6v2/audio_wmapro.c:	audio->codec_cfg = kzalloc(sizeof(struct msm_audio_wmapro_config),
arch/arm/mach-msm/qdsp6v2/audio_wmapro.c:	if (audio->codec_cfg == NULL) {
arch/arm/mach-msm/qdsp6v2/audio_wmapro.c:	audio->pcm_cfg.buffer_size = PCM_BUFSZ_MIN;
arch/arm/mach-msm/qdsp6v2/audio_wmapro.c:	audio->ac = q6asm_audio_client_alloc((app_cb) q6_audio_cb,
arch/arm/mach-msm/qdsp6v2/audio_wmapro.c:	if (!audio->ac) {
arch/arm/mach-msm/qdsp6v2/audio_wmapro.c:		kfree(audio->codec_cfg);
arch/arm/mach-msm/qdsp6v2/audio_wmapro.c:		rc = q6asm_open_read_write(audio->ac, FORMAT_LINEAR_PCM,
arch/arm/mach-msm/qdsp6v2/audio_wmapro.c:		audio->feedback = NON_TUNNEL_MODE;
arch/arm/mach-msm/qdsp6v2/audio_wmapro.c:		audio->buf_cfg.frames_per_buf = 0x01;
arch/arm/mach-msm/qdsp6v2/audio_wmapro.c:		audio->buf_cfg.meta_info_enable = 0x01;
arch/arm/mach-msm/qdsp6v2/audio_wmapro.c:		rc = q6asm_open_write(audio->ac, FORMAT_WMA_V10PRO);
arch/arm/mach-msm/qdsp6v2/audio_wmapro.c:		audio->feedback = TUNNEL_MODE;
arch/arm/mach-msm/qdsp6v2/audio_wmapro.c:		audio->buf_cfg.meta_info_enable = 0x00;
arch/arm/mach-msm/qdsp6v2/audio_wmapro.c:	snprintf(name, sizeof name, "msm_wmapro_%04x", audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_wmapro.c:	audio->dentry = debugfs_create_file(name, S_IFREG | S_IRUGO,
arch/arm/mach-msm/qdsp6v2/audio_wmapro.c:	if (IS_ERR(audio->dentry))
arch/arm/mach-msm/qdsp6v2/audio_wmapro.c:				audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_wmapro.c:	q6asm_audio_client_free(audio->ac);
arch/arm/mach-msm/qdsp6v2/audio_wmapro.c:	kfree(audio->codec_cfg);
arch/arm/mach-msm/qdsp6v2/pcm_in.c:	wake_lock(&audio->wakelock);
arch/arm/mach-msm/qdsp6v2/pcm_in.c:	pm_qos_update_request(&audio->pm_qos_req,
arch/arm/mach-msm/qdsp6v2/pcm_in.c:	pm_qos_update_request(&audio->pm_qos_req, PM_QOS_DEFAULT_VALUE);
arch/arm/mach-msm/qdsp6v2/pcm_in.c:	wake_unlock(&audio->wakelock);
arch/arm/mach-msm/qdsp6v2/evrc_in.c:		enc_cfg = audio->enc_cfg;
arch/arm/mach-msm/qdsp6v2/evrc_in.c:				audio->ac->session, audio->buf_alloc);
arch/arm/mach-msm/qdsp6v2/evrc_in.c:		if (audio->enabled == 1) {
arch/arm/mach-msm/qdsp6v2/evrc_in.c:				__func__, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/evrc_in.c:		rc = q6asm_enc_cfg_blk_evrc(audio->ac,
arch/arm/mach-msm/qdsp6v2/evrc_in.c:			audio->buf_cfg.frames_per_buf,
arch/arm/mach-msm/qdsp6v2/evrc_in.c:				"failed\n", __func__, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/evrc_in.c:		if (audio->feedback == NON_TUNNEL_MODE) {
arch/arm/mach-msm/qdsp6v2/evrc_in.c:			rc = q6asm_media_format_block_pcm(audio->ac,
arch/arm/mach-msm/qdsp6v2/evrc_in.c:				audio->pcm_cfg.sample_rate,
arch/arm/mach-msm/qdsp6v2/evrc_in.c:				audio->pcm_cfg.channel_count);
arch/arm/mach-msm/qdsp6v2/evrc_in.c:				"failed\n", __func__, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/evrc_in.c:				__func__, audio->ac->session, audio->enabled);
arch/arm/mach-msm/qdsp6v2/evrc_in.c:			audio->enabled = 1;
arch/arm/mach-msm/qdsp6v2/evrc_in.c:			audio->enabled = 0;
arch/arm/mach-msm/qdsp6v2/evrc_in.c:				"rc=%d\n", __func__, audio->ac->session, rc);
arch/arm/mach-msm/qdsp6v2/evrc_in.c:		while (cnt++ < audio->str_cfg.buffer_count)
arch/arm/mach-msm/qdsp6v2/evrc_in.c:			q6asm_read(audio->ac); /* Push buffer to DSP */
arch/arm/mach-msm/qdsp6v2/evrc_in.c:				__func__, audio->ac->session, audio->enabled);
arch/arm/mach-msm/qdsp6v2/evrc_in.c:				audio->ac->session);
arch/arm/mach-msm/qdsp6v2/evrc_in.c:				"rc=%d\n", __func__, audio->ac->session, rc);
arch/arm/mach-msm/qdsp6v2/evrc_in.c:		if (copy_to_user((void *)arg, audio->enc_cfg,
arch/arm/mach-msm/qdsp6v2/evrc_in.c:		enc_cfg = audio->enc_cfg;
arch/arm/mach-msm/qdsp6v2/evrc_in.c:					__func__, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/evrc_in.c:				__func__, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/evrc_in.c:			audio->ac->session, enc_cfg->min_bit_rate,
arch/arm/mach-msm/qdsp6v2/evrc_in.c:	audio->enc_cfg = kzalloc(sizeof(struct msm_audio_evrc_enc_config),
arch/arm/mach-msm/qdsp6v2/evrc_in.c:	if (audio->enc_cfg == NULL) {
arch/arm/mach-msm/qdsp6v2/evrc_in.c:				"config param\n", __func__, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/evrc_in.c:	enc_cfg = audio->enc_cfg;
arch/arm/mach-msm/qdsp6v2/evrc_in.c:	mutex_init(&audio->lock);
arch/arm/mach-msm/qdsp6v2/evrc_in.c:	mutex_init(&audio->read_lock);
arch/arm/mach-msm/qdsp6v2/evrc_in.c:	mutex_init(&audio->write_lock);
arch/arm/mach-msm/qdsp6v2/evrc_in.c:	spin_lock_init(&audio->dsp_lock);
arch/arm/mach-msm/qdsp6v2/evrc_in.c:	init_waitqueue_head(&audio->read_wait);
arch/arm/mach-msm/qdsp6v2/evrc_in.c:	init_waitqueue_head(&audio->write_wait);
arch/arm/mach-msm/qdsp6v2/evrc_in.c:	audio->str_cfg.buffer_size = FRAME_SIZE;
arch/arm/mach-msm/qdsp6v2/evrc_in.c:	audio->str_cfg.buffer_count = FRAME_NUM;
arch/arm/mach-msm/qdsp6v2/evrc_in.c:	audio->min_frame_size = 23;
arch/arm/mach-msm/qdsp6v2/evrc_in.c:	audio->max_frames_per_buf = 10;
arch/arm/mach-msm/qdsp6v2/evrc_in.c:	audio->pcm_cfg.buffer_size = PCM_BUF_SIZE;
arch/arm/mach-msm/qdsp6v2/evrc_in.c:	audio->pcm_cfg.buffer_count = PCM_BUF_COUNT;
arch/arm/mach-msm/qdsp6v2/evrc_in.c:	audio->pcm_cfg.channel_count = 1;
arch/arm/mach-msm/qdsp6v2/evrc_in.c:	audio->pcm_cfg.sample_rate = 8000;
arch/arm/mach-msm/qdsp6v2/evrc_in.c:	audio->buf_cfg.meta_info_enable = 0x01;
arch/arm/mach-msm/qdsp6v2/evrc_in.c:	audio->buf_cfg.frames_per_buf = 0x01;
arch/arm/mach-msm/qdsp6v2/evrc_in.c:	audio->ac = q6asm_audio_client_alloc((app_cb)q6asm_in_cb,
arch/arm/mach-msm/qdsp6v2/evrc_in.c:	if (!audio->ac) {
arch/arm/mach-msm/qdsp6v2/evrc_in.c:		kfree(audio->enc_cfg);
arch/arm/mach-msm/qdsp6v2/evrc_in.c:		audio->feedback = NON_TUNNEL_MODE;
arch/arm/mach-msm/qdsp6v2/evrc_in.c:		rc = q6asm_open_read_write(audio->ac, FORMAT_EVRC,
arch/arm/mach-msm/qdsp6v2/evrc_in.c:					__func__, audio->ac->session, rc);
arch/arm/mach-msm/qdsp6v2/evrc_in.c:				__func__, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/evrc_in.c:		audio->feedback = TUNNEL_MODE;
arch/arm/mach-msm/qdsp6v2/evrc_in.c:		rc = q6asm_open_read(audio->ac, FORMAT_EVRC);
arch/arm/mach-msm/qdsp6v2/evrc_in.c:					__func__, audio->ac->session, rc);
arch/arm/mach-msm/qdsp6v2/evrc_in.c:		rc = q6asm_reg_tx_overflow(audio->ac, 0x01);
arch/arm/mach-msm/qdsp6v2/evrc_in.c:				audio->ac->session, rc);
arch/arm/mach-msm/qdsp6v2/evrc_in.c:				audio->ac->session);
arch/arm/mach-msm/qdsp6v2/evrc_in.c:				audio->ac->session);
arch/arm/mach-msm/qdsp6v2/evrc_in.c:	audio->opened = 1;
arch/arm/mach-msm/qdsp6v2/evrc_in.c:	atomic_set(&audio->in_count, PCM_BUF_COUNT);
arch/arm/mach-msm/qdsp6v2/evrc_in.c:	atomic_set(&audio->out_count, 0x00);
arch/arm/mach-msm/qdsp6v2/evrc_in.c:	audio->enc_ioctl = evrc_in_ioctl;
arch/arm/mach-msm/qdsp6v2/evrc_in.c:	pr_info("%s:session id %d: success\n", __func__, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/evrc_in.c:	q6asm_audio_client_free(audio->ac);
arch/arm/mach-msm/qdsp6v2/evrc_in.c:	kfree(audio->enc_cfg);
arch/arm/mach-msm/qdsp6v2/audio_aac.c:							audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_aac.c:		if (audio->feedback == NON_TUNNEL_MODE) {
arch/arm/mach-msm/qdsp6v2/audio_aac.c:			rc = q6asm_enc_cfg_blk_pcm(audio->ac, 0, 0);
arch/arm/mach-msm/qdsp6v2/audio_aac.c:		rc = q6asm_enable_sbrps(audio->ac, sbr_ps);
arch/arm/mach-msm/qdsp6v2/audio_aac.c:		aac_config = (struct msm_audio_aac_config *)audio->codec_cfg;
arch/arm/mach-msm/qdsp6v2/audio_aac.c:		aac_cfg.ch_cfg = audio->pcm_cfg.channel_count;
arch/arm/mach-msm/qdsp6v2/audio_aac.c:		aac_cfg.sample_rate =  audio->pcm_cfg.sample_rate;
arch/arm/mach-msm/qdsp6v2/audio_aac.c:		rc = q6asm_media_format_block_aac(audio->ac, &aac_cfg);
arch/arm/mach-msm/qdsp6v2/audio_aac.c:		audio->eos_rsp = 0;
arch/arm/mach-msm/qdsp6v2/audio_aac.c:		audio->eos_flag = 0;
arch/arm/mach-msm/qdsp6v2/audio_aac.c:			audio->enabled = 1;
arch/arm/mach-msm/qdsp6v2/audio_aac.c:			audio->enabled = 0;
arch/arm/mach-msm/qdsp6v2/audio_aac.c:						audio->ac->session,
arch/arm/mach-msm/qdsp6v2/audio_aac.c:						audio->enabled);
arch/arm/mach-msm/qdsp6v2/audio_aac.c:		if (audio->stopped == 1)
arch/arm/mach-msm/qdsp6v2/audio_aac.c:			audio->stopped = 0;
arch/arm/mach-msm/qdsp6v2/audio_aac.c:		if (copy_to_user((void *)arg, audio->codec_cfg,
arch/arm/mach-msm/qdsp6v2/audio_aac.c:		if (copy_from_user(audio->codec_cfg, (void *)arg,
arch/arm/mach-msm/qdsp6v2/audio_aac.c:			aac_config = audio->codec_cfg;
arch/arm/mach-msm/qdsp6v2/audio_aac.c:				rc = q6asm_cfg_dual_mono_aac(audio->ac,
arch/arm/mach-msm/qdsp6v2/audio_aac.c:		rc = audio->codec_ioctl(file, cmd, arg);
arch/arm/mach-msm/qdsp6v2/audio_aac.c:	audio->codec_cfg = kzalloc(sizeof(struct msm_audio_aac_config),
arch/arm/mach-msm/qdsp6v2/audio_aac.c:	if (audio->codec_cfg == NULL) {
arch/arm/mach-msm/qdsp6v2/audio_aac.c:	aac_config = audio->codec_cfg;
arch/arm/mach-msm/qdsp6v2/audio_aac.c:	audio->pcm_cfg.buffer_size = PCM_BUFSZ_MIN_AAC;
arch/arm/mach-msm/qdsp6v2/audio_aac.c:	audio->ac = q6asm_audio_client_alloc((app_cb) q6_audio_cb,
arch/arm/mach-msm/qdsp6v2/audio_aac.c:	if (!audio->ac) {
arch/arm/mach-msm/qdsp6v2/audio_aac.c:		kfree(audio->codec_cfg);
arch/arm/mach-msm/qdsp6v2/audio_aac.c:		rc = q6asm_open_read_write(audio->ac, FORMAT_LINEAR_PCM,
arch/arm/mach-msm/qdsp6v2/audio_aac.c:		audio->feedback = NON_TUNNEL_MODE;
arch/arm/mach-msm/qdsp6v2/audio_aac.c:		audio->buf_cfg.frames_per_buf = 0x01;*/
arch/arm/mach-msm/qdsp6v2/audio_aac.c:		audio->buf_cfg.meta_info_enable = 0x01;
arch/arm/mach-msm/qdsp6v2/audio_aac.c:		rc = q6asm_open_write(audio->ac, FORMAT_MPEG4_AAC);
arch/arm/mach-msm/qdsp6v2/audio_aac.c:		audio->feedback = TUNNEL_MODE;
arch/arm/mach-msm/qdsp6v2/audio_aac.c:		audio->buf_cfg.meta_info_enable = 0x00;
arch/arm/mach-msm/qdsp6v2/audio_aac.c:	snprintf(name, sizeof name, "msm_aac_%04x", audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_aac.c:	audio->dentry = debugfs_create_file(name, S_IFREG | S_IRUGO,
arch/arm/mach-msm/qdsp6v2/audio_aac.c:	if (IS_ERR(audio->dentry))
arch/arm/mach-msm/qdsp6v2/audio_aac.c:						audio->feedback,
arch/arm/mach-msm/qdsp6v2/audio_aac.c:						audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_aac.c:	q6asm_audio_client_free(audio->ac);
arch/arm/mach-msm/qdsp6v2/audio_aac.c:	kfree(audio->codec_cfg);
arch/arm/mach-msm/qdsp6v2/audio_amrwbplus.c:			audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_amrwbplus.c:		audio->dentry = debugfs_create_file(name, S_IFREG | S_IRUGO,
arch/arm/mach-msm/qdsp6v2/audio_amrwbplus.c:		if (IS_ERR(audio->dentry))
arch/arm/mach-msm/qdsp6v2/audio_amrwbplus.c:			audio, audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_amrwbplus.c:		if (audio->feedback == NON_TUNNEL_MODE) {
arch/arm/mach-msm/qdsp6v2/audio_amrwbplus.c:			rc = q6asm_enc_cfg_blk_pcm(audio->ac,
arch/arm/mach-msm/qdsp6v2/audio_amrwbplus.c:			audio->pcm_cfg.sample_rate,
arch/arm/mach-msm/qdsp6v2/audio_amrwbplus.c:			audio->pcm_cfg.channel_count);
arch/arm/mach-msm/qdsp6v2/audio_amrwbplus.c:		(struct msm_audio_amrwbplus_config_v2 *)audio->codec_cfg;
arch/arm/mach-msm/qdsp6v2/audio_amrwbplus.c:		rc = q6asm_media_format_block_amrwbplus(audio->ac,
arch/arm/mach-msm/qdsp6v2/audio_amrwbplus.c:		audio->eos_rsp = 0;
arch/arm/mach-msm/qdsp6v2/audio_amrwbplus.c:		audio->eos_flag = 0;
arch/arm/mach-msm/qdsp6v2/audio_amrwbplus.c:			audio->enabled = 1;
arch/arm/mach-msm/qdsp6v2/audio_amrwbplus.c:			audio->enabled = 0;
arch/arm/mach-msm/qdsp6v2/audio_amrwbplus.c:			audio->ac->session,
arch/arm/mach-msm/qdsp6v2/audio_amrwbplus.c:			audio->enabled);
arch/arm/mach-msm/qdsp6v2/audio_amrwbplus.c:		if (audio->stopped == 1)
arch/arm/mach-msm/qdsp6v2/audio_amrwbplus.c:			audio->stopped = 0;
arch/arm/mach-msm/qdsp6v2/audio_amrwbplus.c:		if ((audio) && (arg) && (audio->codec_cfg)) {
arch/arm/mach-msm/qdsp6v2/audio_amrwbplus.c:			if (copy_to_user((void *)arg, audio->codec_cfg,
arch/arm/mach-msm/qdsp6v2/audio_amrwbplus.c:		if ((audio) && (arg) && (audio->codec_cfg)) {
arch/arm/mach-msm/qdsp6v2/audio_amrwbplus.c:			if (copy_from_user(audio->codec_cfg, (void *)arg,
arch/arm/mach-msm/qdsp6v2/audio_amrwbplus.c:		rc = audio->codec_ioctl(file, cmd, arg);
arch/arm/mach-msm/qdsp6v2/audio_amrwbplus.c:	audio->codec_cfg =
arch/arm/mach-msm/qdsp6v2/audio_amrwbplus.c:	if (audio->codec_cfg == NULL) {
arch/arm/mach-msm/qdsp6v2/audio_amrwbplus.c:	audio->pcm_cfg.buffer_size = PCM_BUFSZ_MIN;
arch/arm/mach-msm/qdsp6v2/audio_amrwbplus.c:	audio->ac =
arch/arm/mach-msm/qdsp6v2/audio_amrwbplus.c:	if (!audio->ac) {
arch/arm/mach-msm/qdsp6v2/audio_amrwbplus.c:		kfree(audio->codec_cfg);
arch/arm/mach-msm/qdsp6v2/audio_amrwbplus.c:		rc = q6asm_open_read_write(audio->ac, FORMAT_LINEAR_PCM,
arch/arm/mach-msm/qdsp6v2/audio_amrwbplus.c:		audio->feedback = NON_TUNNEL_MODE;
arch/arm/mach-msm/qdsp6v2/audio_amrwbplus.c:		audio->buf_cfg.frames_per_buf = 0x01;
arch/arm/mach-msm/qdsp6v2/audio_amrwbplus.c:		audio->buf_cfg.meta_info_enable = 0x01;
arch/arm/mach-msm/qdsp6v2/audio_amrwbplus.c:			rc = q6asm_open_write(audio->ac, FORMAT_AMR_WB_PLUS);
arch/arm/mach-msm/qdsp6v2/audio_amrwbplus.c:		audio->feedback = TUNNEL_MODE;
arch/arm/mach-msm/qdsp6v2/audio_amrwbplus.c:		audio->buf_cfg.meta_info_enable = 0x00;
arch/arm/mach-msm/qdsp6v2/audio_amrwbplus.c:		audio->feedback,
arch/arm/mach-msm/qdsp6v2/audio_amrwbplus.c:		audio->ac->session);
arch/arm/mach-msm/qdsp6v2/audio_amrwbplus.c:	q6asm_audio_client_free(audio->ac);
arch/arm/mach-msm/qdsp6v2/audio_amrwbplus.c:	kfree(audio->codec_cfg);
arch/arm/mach-msm/board-8064-gpiomux.c:	pr_debug("%s(): audio-auxpcm: Include GPIO configs"
